

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Sat Mar 07 16:07:15 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  006486                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _R
    54  006486  0FDF               	dw	4063
    55                           
    56                           ;initializer for _Fe
    57  006488  20                 	db	32
    58                           
    59                           ;initializer for _G
    60  006489  20                 	db	32
    61                           
    62                           ;initializer for _REG
    63  00648A  0F                 	db	15
    64                           
    65                           ;initializer for _REGad
    66  00648B  DF                 	db	223
    67                           
    68                           ;initializer for _e
    69  00648C  20                 	db	32
    70                           
    71                           ;initializer for _po
    72  00648D  20                 	db	32
    73                           
    74                           ;initializer for _rr
    75  00648E  20                 	db	32
    76                           
    77                           ;initializer for _ru
    78  00648F  20                 	db	32
    79                           
    80                           	psect	mediumconst
    81  007ED0                     __pmediumconst:
    82                           	opt stack 0
    83  007ED0  00                 	db	0
    84  007ED1                     _icgs:
    85                           	opt stack 0
    86  007ED1  82                 	db	130
    87  007ED2  A8                 	db	168
    88  007ED3  56                 	db	86
    89  007ED4  AA                 	db	170
    90  007ED5  82                 	db	130
    91  007ED6  A4                 	db	164
    92  007ED7  A8                 	db	168
    93  007ED8  7A                 	db	122
    94  007ED9  62                 	db	98
    95  007EDA  72                 	db	114
    96  007EDB  64                 	db	100
    97  007EDC  60                 	db	96
    98  007EDD  60                 	db	96
    99  007EDE  58                 	db	88
   100  007EDF  60                 	db	96
   101  007EE0  58                 	db	88
   102  007EE1  60                 	db	96
   103  007EE2  1A                 	db	26
   104  007EE3  14                 	db	20
   105  007EE4  00                 	db	0
   106  007EE5                     __end_of_icgs:
   107                           	opt stack 0
   108  007EE5                     _icms:
   109                           	opt stack 0
   110  007EE5  82                 	db	130
   111  007EE6  A8                 	db	168
   112  007EE7  56                 	db	86
   113  007EE8  9C                 	db	156
   114  007EE9  82                 	db	130
   115  007EEA  9A                 	db	154
   116  007EEB  8A                 	db	138
   117  007EEC  7A                 	db	122
   118  007EED  A6                 	db	166
   119  007EEE  C2                 	db	194
   120  007EEF  DC                 	db	220
   121  007EF0  AA                 	db	170
   122  007EF1  A6                 	db	166
   123  007EF2  84                 	db	132
   124  007EF3  62                 	db	98
   125  007EF4  6A                 	db	106
   126  007EF5  1A                 	db	26
   127  007EF6  14                 	db	20
   128  007EF7  00                 	db	0
   129  007EF8                     __end_of_icms:
   130                           	opt stack 0
   131  007EF8                     _icn:
   132                           	opt stack 0
   133  007EF8  82                 	db	130
   134  007EF9  A8                 	db	168
   135  007EFA  56                 	db	86
   136  007EFB  9C                 	db	156
   137  007EFC  82                 	db	130
   138  007EFD  9A                 	db	154
   139  007EFE  8A                 	db	138
   140  007EFF  90                 	db	144
   141  007F00  9A                 	db	154
   142  007F01  BE                 	db	190
   143  007F02  A6                 	db	166
   144  007F03  C2                 	db	194
   145  007F04  DC                 	db	220
   146  007F05  AA                 	db	170
   147  007F06  A6                 	db	166
   148  007F07  84                 	db	132
   149  007F08  00                 	db	0
   150  007F09                     __end_of_icn:
   151                           	opt stack 0
   152  007F09                     _icm:
   153                           	opt stack 0
   154  007F09  82                 	db	130
   155  007F0A  A8                 	db	168
   156  007F0B  56                 	db	86
   157  007F0C  9C                 	db	156
   158  007F0D  82                 	db	130
   159  007F0E  9A                 	db	154
   160  007F0F  8A                 	db	138
   161  007F10  A6                 	db	166
   162  007F11  C2                 	db	194
   163  007F12  DC                 	db	220
   164  007F13  AA                 	db	170
   165  007F14  A6                 	db	166
   166  007F15  84                 	db	132
   167  007F16  62                 	db	98
   168  007F17  00                 	db	0
   169  007F18                     __end_of_icm:
   170                           	opt stack 0
   171  007F18                     _icrs:
   172                           	opt stack 0
   173  007F18  82                 	db	130
   174  007F19  A8                 	db	168
   175  007F1A  56                 	db	86
   176  007F1B  A4                 	db	164
   177  007F1C  8A                 	db	138
   178  007F1D  A6                 	db	166
   179  007F1E  8A                 	db	138
   180  007F1F  A8                 	db	168
   181  007F20  1A                 	db	26
   182  007F21  14                 	db	20
   183  007F22  00                 	db	0
   184  007F23                     __end_of_icrs:
   185                           	opt stack 0
   186  007F23                     _icb:
   187                           	opt stack 0
   188  007F23  82                 	db	130
   189  007F24  A8                 	db	168
   190  007F25  56                 	db	86
   191  007F26  84                 	db	132
   192  007F27  82                 	db	130
   193  007F28  AA                 	db	170
   194  007F29  88                 	db	136
   195  007F2A  6A                 	db	106
   196  007F2B  00                 	db	0
   197  007F2C                     __end_of_icb:
   198                           	opt stack 0
   199  007F2C                     _icg:
   200                           	opt stack 0
   201  007F2C  82                 	db	130
   202  007F2D  A8                 	db	168
   203  007F2E  56                 	db	86
   204  007F2F  84                 	db	132
   205  007F30  82                 	db	130
   206  007F31  AA                 	db	170
   207  007F32  88                 	db	136
   208  007F33  6A                 	db	106
   209  007F34  00                 	db	0
   210  007F35                     __end_of_icg:
   211                           	opt stack 0
   212  007F35                     _icr:
   213                           	opt stack 0
   214  007F35  82                 	db	130
   215  007F36  A8                 	db	168
   216  007F37  56                 	db	86
   217  007F38  A4                 	db	164
   218  007F39  8A                 	db	138
   219  007F3A  A6                 	db	166
   220  007F3B  8A                 	db	138
   221  007F3C  A8                 	db	168
   222  007F3D  00                 	db	0
   223  007F3E                     __end_of_icr:
   224                           	opt stack 0
   225  007F3E                     _atc:
   226                           	opt stack 0
   227  007F3E  82                 	db	130
   228  007F3F  A8                 	db	168
   229  007F40  1A                 	db	26
   230  007F41  14                 	db	20
   231  007F42  00                 	db	0
   232  007F43                     __end_of_atc:
   233                           	opt stack 0
   234  007F43                     _icp:
   235                           	opt stack 0
   236  007F43  82                 	db	130
   237  007F44  A8                 	db	168
   238  007F45  00                 	db	0
   239  007F46                     __end_of_icp:
   240                           	opt stack 0
   241  0000                     _ADRES	set	4035
   242  0000                     _ADCON0	set	4034
   243  0000                     _ADCON0bits	set	4034
   244  0000                     _ADCON1	set	4033
   245  0000                     _ADCON2	set	4032
   246  0000                     _ADCON2bits	set	4032
   247  0000                     _ADRESH	set	4036
   248  0000                     _BAUDCON	set	4024
   249  0000                     _BAUDCONbits	set	4024
   250  0000                     _CCP1CON	set	4029
   251  0000                     _CCP2CON	set	4026
   252  0000                     _CCPR1L	set	4030
   253  0000                     _CCPR2L	set	4027
   254  0000                     _EEADR	set	4009
   255  0000                     _EECON1	set	4006
   256  0000                     _EECON1bits	set	4006
   257  0000                     _EECON2	set	4007
   258  0000                     _EEDATA	set	4008
   259  0000                     _INTCON2bits	set	4081
   260  0000                     _INTCON3bits	set	4080
   261  0000                     _INTCONbits	set	4082
   262  0000                     _IPR1bits	set	3999
   263  0000                     _LATA	set	3977
   264  0000                     _LATB	set	3978
   265  0000                     _LATC	set	3979
   266  0000                     _PIE1bits	set	3997
   267  0000                     _PIE2bits	set	4000
   268  0000                     _PIR1bits	set	3998
   269  0000                     _PORTAbits	set	3968
   270  0000                     _PORTBbits	set	3969
   271  0000                     _PORTCbits	set	3970
   272  0000                     _PORTDbits	set	3971
   273  0000                     _PORTEbits	set	3972
   274  0000                     _PR2	set	4043
   275  0000                     _RCONbits	set	4048
   276  0000                     _RCREG	set	4014
   277  0000                     _RCSTA	set	4011
   278  0000                     _RCSTAbits	set	4011
   279  0000                     _SPBRG	set	4015
   280  0000                     _SPBRGH	set	4016
   281  0000                     _T0CON	set	4053
   282  0000                     _T0CONbits	set	4053
   283  0000                     _T1CONbits	set	4045
   284  0000                     _T2CON	set	4042
   285  0000                     _T2CONbits	set	4042
   286  0000                     _T3CONbits	set	4017
   287  0000                     _TMR0H	set	4055
   288  0000                     _TMR0L	set	4054
   289  0000                     _TMR1H	set	4047
   290  0000                     _TMR1L	set	4046
   291  0000                     _TMR3H	set	4019
   292  0000                     _TMR3L	set	4018
   293  0000                     _TRISA	set	3986
   294  0000                     _TRISAbits	set	3986
   295  0000                     _TRISB	set	3987
   296  0000                     _TRISBbits	set	3987
   297  0000                     _TRISC	set	3988
   298  0000                     _TRISCbits	set	3988
   299  0000                     _TRISDbits	set	3989
   300  0000                     _TXREG	set	4013
   301  0000                     _TXSTA	set	4012
   302  0000                     _TXSTAbits	set	4012
   303  0000                     _WDTCONbits	set	4049
   304  007F46                     __stringdata:
   305                           	opt stack 0
   306  007F46                     STR_1:
   307  007F46  68                 	db	104	;'h'
   308  007F47  74                 	db	116	;'t'
   309  007F48  74                 	db	116	;'t'
   310  007F49  70                 	db	112	;'p'
   311  007F4A  73                 	db	115	;'s'
   312  007F4B  3A                 	db	58	;':'
   313  007F4C  2F                 	db	47
   314  007F4D  2F                 	db	47
   315  007F4E  64                 	db	100	;'d'
   316  007F4F  6F                 	db	111	;'o'
   317  007F50  63                 	db	99	;'c'
   318  007F51  73                 	db	115	;'s'
   319  007F52  2E                 	db	46
   320  007F53  67                 	db	103	;'g'
   321  007F54  6F                 	db	111	;'o'
   322  007F55  6F                 	db	111	;'o'
   323  007F56  67                 	db	103	;'g'
   324  007F57  6C                 	db	108	;'l'
   325  007F58  65                 	db	101	;'e'
   326  007F59  2E                 	db	46
   327  007F5A  63                 	db	99	;'c'
   328  007F5B  6F                 	db	111	;'o'
   329  007F5C  6D                 	db	109	;'m'
   330  007F5D  2F                 	db	47
   331  007F5E  66                 	db	102	;'f'
   332  007F5F  6F                 	db	111	;'o'
   333  007F60  72                 	db	114	;'r'
   334  007F61  6D                 	db	109	;'m'
   335  007F62  73                 	db	115	;'s'
   336  007F63  2F                 	db	47
   337  007F64  64                 	db	100	;'d'
   338  007F65  2F                 	db	47
   339  007F66  31                 	db	49	;'1'
   340  007F67  50                 	db	80	;'P'
   341  007F68  5A                 	db	90	;'Z'
   342  007F69  4F                 	db	79	;'O'
   343  007F6A  71                 	db	113	;'q'
   344  007F6B  6A                 	db	106	;'j'
   345  007F6C  6E                 	db	110	;'n'
   346  007F6D  69                 	db	105	;'i'
   347  007F6E  74                 	db	116	;'t'
   348  007F6F  45                 	db	69	;'E'
   349  007F70  52                 	db	82	;'R'
   350  007F71  30                 	db	48	;'0'
   351  007F72  6D                 	db	109	;'m'
   352  007F73  30                 	db	48	;'0'
   353  007F74  33                 	db	51	;'3'
   354  007F75  49                 	db	73	;'I'
   355  007F76  78                 	db	120	;'x'
   356  007F77  34                 	db	52	;'4'
   357  007F78  72                 	db	114	;'r'
   358  007F79  39                 	db	57	;'9'
   359  007F7A  67                 	db	103	;'g'
   360  007F7B  44                 	db	68	;'D'
   361  007F7C  42                 	db	66	;'B'
   362  007F7D  71                 	db	113	;'q'
   363  007F7E  68                 	db	104	;'h'
   364  007F7F  70                 	db	112	;'p'
   365  007F80  37                 	db	55	;'7'
   366  007F81  58                 	db	88	;'X'
   367  007F82  73                 	db	115	;'s'
   368  007F83  31                 	db	49	;'1'
   369  007F84  59                 	db	89	;'Y'
   370  007F85  72                 	db	114	;'r'
   371  007F86  50                 	db	80	;'P'
   372  007F87  6D                 	db	109	;'m'
   373  007F88  6A                 	db	106	;'j'
   374  007F89  4C                 	db	76	;'L'
   375  007F8A  79                 	db	121	;'y'
   376  007F8B  6D                 	db	109	;'m'
   377  007F8C  45                 	db	69	;'E'
   378  007F8D  32                 	db	50	;'2'
   379  007F8E  56                 	db	86	;'V'
   380  007F8F  57                 	db	87	;'W'
   381  007F90  41                 	db	65	;'A'
   382  007F91  55                 	db	85	;'U'
   383  007F92  2F                 	db	47
   384  007F93  66                 	db	102	;'f'
   385  007F94  6F                 	db	111	;'o'
   386  007F95  72                 	db	114	;'r'
   387  007F96  6D                 	db	109	;'m'
   388  007F97  52                 	db	82	;'R'
   389  007F98  65                 	db	101	;'e'
   390  007F99  73                 	db	115	;'s'
   391  007F9A  70                 	db	112	;'p'
   392  007F9B  6F                 	db	111	;'o'
   393  007F9C  6E                 	db	110	;'n'
   394  007F9D  73                 	db	115	;'s'
   395  007F9E  65                 	db	101	;'e'
   396  007F9F  3F                 	db	63	;'?'
   397  007FA0  69                 	db	105	;'i'
   398  007FA1  66                 	db	102	;'f'
   399  007FA2  71                 	db	113	;'q'
   400  007FA3  26                 	db	38
   401  007FA4  65                 	db	101	;'e'
   402  007FA5  6E                 	db	110	;'n'
   403  007FA6  74                 	db	116	;'t'
   404  007FA7  72                 	db	114	;'r'
   405  007FA8  79                 	db	121	;'y'
   406  007FA9  2E                 	db	46
   407  007FAA  39                 	db	57	;'9'
   408  007FAB  36                 	db	54	;'6'
   409  007FAC  32                 	db	50	;'2'
   410  007FAD  30                 	db	48	;'0'
   411  007FAE  32                 	db	50	;'2'
   412  007FAF  33                 	db	51	;'3'
   413  007FB0  30                 	db	48	;'0'
   414  007FB1  38                 	db	56	;'8'
   415  007FB2  39                 	db	57	;'9'
   416  007FB3  3D                 	db	61	;'='
   417  007FB4  00                 	db	0
   418  007FB5                     STR_4:
   419  007FB5  26                 	db	38
   420  007FB6  65                 	db	101	;'e'
   421  007FB7  6E                 	db	110	;'n'
   422  007FB8  74                 	db	116	;'t'
   423  007FB9  72                 	db	114	;'r'
   424  007FBA  79                 	db	121	;'y'
   425  007FBB  2E                 	db	46
   426  007FBC  31                 	db	49	;'1'
   427  007FBD  35                 	db	53	;'5'
   428  007FBE  38                 	db	56	;'8'
   429  007FBF  39                 	db	57	;'9'
   430  007FC0  32                 	db	50	;'2'
   431  007FC1  38                 	db	56	;'8'
   432  007FC2  34                 	db	52	;'4'
   433  007FC3  33                 	db	51	;'3'
   434  007FC4  33                 	db	51	;'3'
   435  007FC5  33                 	db	51	;'3'
   436  007FC6  3D                 	db	61	;'='
   437  007FC7  00                 	db	0
   438  007FC8                     STR_2:
   439  007FC8  26                 	db	38
   440  007FC9  65                 	db	101	;'e'
   441  007FCA  6E                 	db	110	;'n'
   442  007FCB  74                 	db	116	;'t'
   443  007FCC  72                 	db	114	;'r'
   444  007FCD  79                 	db	121	;'y'
   445  007FCE  2E                 	db	46
   446  007FCF  31                 	db	49	;'1'
   447  007FD0  34                 	db	52	;'4'
   448  007FD1  36                 	db	54	;'6'
   449  007FD2  38                 	db	56	;'8'
   450  007FD3  32                 	db	50	;'2'
   451  007FD4  36                 	db	54	;'6'
   452  007FD5  36                 	db	54	;'6'
   453  007FD6  37                 	db	55	;'7'
   454  007FD7  33                 	db	51	;'3'
   455  007FD8  33                 	db	51	;'3'
   456  007FD9  3D                 	db	61	;'='
   457  007FDA  00                 	db	0
   458  007FDB                     STR_3:
   459  007FDB  26                 	db	38
   460  007FDC  65                 	db	101	;'e'
   461  007FDD  6E                 	db	110	;'n'
   462  007FDE  74                 	db	116	;'t'
   463  007FDF  72                 	db	114	;'r'
   464  007FE0  79                 	db	121	;'y'
   465  007FE1  2E                 	db	46
   466  007FE2  31                 	db	49	;'1'
   467  007FE3  36                 	db	54	;'6'
   468  007FE4  30                 	db	48	;'0'
   469  007FE5  39                 	db	57	;'9'
   470  007FE6  39                 	db	57	;'9'
   471  007FE7  30                 	db	48	;'0'
   472  007FE8  34                 	db	52	;'4'
   473  007FE9  39                 	db	57	;'9'
   474  007FEA  35                 	db	53	;'5'
   475  007FEB  37                 	db	55	;'7'
   476  007FEC  3D                 	db	61	;'='
   477  007FED  00                 	db	0
   478  007FEE                     STR_5:
   479  007FEE  26                 	db	38
   480  007FEF  73                 	db	115	;'s'
   481  007FF0  75                 	db	117	;'u'
   482  007FF1  62                 	db	98	;'b'
   483  007FF2  6D                 	db	109	;'m'
   484  007FF3  69                 	db	105	;'i'
   485  007FF4  74                 	db	116	;'t'
   486  007FF5  3D                 	db	61	;'='
   487  007FF6  53                 	db	83	;'S'
   488  007FF7  75                 	db	117	;'u'
   489  007FF8  62                 	db	98	;'b'
   490  007FF9  6D                 	db	109	;'m'
   491  007FFA  69                 	db	105	;'i'
   492  007FFB  74                 	db	116	;'t'
   493  007FFC  2A                 	db	42
   494  007FFD  00                 	db	0
   495  007FFE                     __end_of__stringdata:
   496                           	opt stack 0
   497  007FFE  00                 	db	0	; dummy byte at the end
   498  0000                     
   499                           ; #config settings
   500                           
   501                           	psect	cinit
   502  00662A                     __pcinit:
   503                           	opt stack 0
   504  00662A                     start_initialization:
   505                           	opt stack 0
   506  00662A                     __initialization:
   507                           	opt stack 0
   508                           
   509                           ; Clear objects allocated to BANK0 (68 bytes)
   510  00662A  EE00  F060         	lfsr	0,__pbssBANK0
   511  00662E  0E44               	movlw	68
   512  006630                     clear_0:
   513  006630  6AEE               	clrf	postinc0,c
   514  006632  06E8               	decf	wreg,f,c
   515  006634  E1FD               	bnz	clear_0
   516                           
   517                           ; Clear objects allocated to COMRAM (33 bytes)
   518  006636  EE00  F001         	lfsr	0,__pbssCOMRAM
   519  00663A  0E21               	movlw	33
   520  00663C                     clear_1:
   521  00663C  6AEE               	clrf	postinc0,c
   522  00663E  06E8               	decf	wreg,f,c
   523  006640  E1FD               	bnz	clear_1
   524                           
   525                           ; Initialize objects allocated to COMRAM (10 bytes)
   526                           ; load TBLPTR registers with __pidataCOMRAM
   527  006642  0E86               	movlw	low __pidataCOMRAM
   528  006644  6EF6               	movwf	tblptrl,c
   529  006646  0E64               	movlw	high __pidataCOMRAM
   530  006648  6EF7               	movwf	tblptrh,c
   531  00664A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   532  00664C  6EF8               	movwf	tblptru,c
   533  00664E  EE00  F042         	lfsr	0,__pdataCOMRAM
   534  006652  EE10 F00A          	lfsr	1,10
   535  006656                     copy_data0:
   536  006656  0009               	tblrd		*+
   537  006658  CFF5 FFEE          	movff	tablat,postinc0
   538  00665C  50E5               	movf	postdec1,w,c
   539  00665E  50E1               	movf	fsr1l,w,c
   540  006660  E1FA               	bnz	copy_data0
   541  006662                     end_of_initialization:
   542                           	opt stack 0
   543  006662                     __end_of__initialization:
   544                           	opt stack 0
   545  006662  0E00               	movlw	low (__Lmediumconst shr (0+16))
   546  006664  6EF8               	movwf	tblptru,c
   547  006666  0100               	movlb	0
   548  006668  EF68  F039         	goto	_main	;jump to C main() function
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           postdec1	equ	0xFE5
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	bssCOMRAM
   559  000001                     __pbssCOMRAM:
   560                           	opt stack 0
   561  000001                     _c:
   562                           	opt stack 0
   563  000001                     	ds	2
   564  000003                     _chegou:
   565                           	opt stack 0
   566  000003                     	ds	2
   567  000005                     _envia:
   568                           	opt stack 0
   569  000005                     	ds	2
   570  000007                     _flag:
   571                           	opt stack 0
   572  000007                     	ds	2
   573  000009                     _flagb:
   574                           	opt stack 0
   575  000009                     	ds	2
   576  00000B                     _flagc:
   577                           	opt stack 0
   578  00000B                     	ds	2
   579  00000D                     _flagstart:
   580                           	opt stack 0
   581  00000D                     	ds	2
   582  00000F                     _i:
   583                           	opt stack 0
   584  00000F                     	ds	2
   585  000011                     _time:
   586                           	opt stack 0
   587  000011                     	ds	2
   588  000013                     _w:
   589                           	opt stack 0
   590  000013                     	ds	2
   591  000015                     _USART_Status:
   592                           	opt stack 0
   593  000015                     	ds	1
   594  000016                     _c1:
   595                           	opt stack 0
   596  000016                     	ds	1
   597  000017                     _endereco:
   598                           	opt stack 0
   599  000017                     	ds	1
   600  000018                     _ind:
   601                           	opt stack 0
   602  000018                     	ds	1
   603  000019                     _k:
   604                           	opt stack 0
   605  000019                     	ds	1
   606  00001A                     _m:
   607                           	opt stack 0
   608  00001A                     	ds	1
   609  00001B                     _n:
   610                           	opt stack 0
   611  00001B                     	ds	1
   612  00001C                     _numquant:
   613                           	opt stack 0
   614  00001C                     	ds	1
   615  00001D                     _temp:
   616                           	opt stack 0
   617  00001D                     	ds	1
   618  00001E                     _valor:
   619                           	opt stack 0
   620  00001E                     	ds	1
   621  00001F                     _valorbcd:
   622                           	opt stack 0
   623  00001F                     	ds	1
   624  000020                     _y:
   625                           	opt stack 0
   626  000020                     	ds	1
   627  000021                     _z:
   628                           	opt stack 0
   629  000021                     	ds	1
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	dataCOMRAM
   640  000042                     __pdataCOMRAM:
   641                           	opt stack 0
   642  000042                     _R:
   643                           	opt stack 0
   644  000042                     	ds	2
   645  000044                     _Fe:
   646                           	opt stack 0
   647  000044                     	ds	1
   648  000045                     _G:
   649                           	opt stack 0
   650  000045                     	ds	1
   651  000046                     _REG:
   652                           	opt stack 0
   653  000046                     	ds	1
   654  000047                     _REGad:
   655                           	opt stack 0
   656  000047                     	ds	1
   657  000048                     _e:
   658                           	opt stack 0
   659  000048                     	ds	1
   660  000049                     _po:
   661                           	opt stack 0
   662  000049                     	ds	1
   663  00004A                     _rr:
   664                           	opt stack 0
   665  00004A                     	ds	1
   666  00004B                     _ru:
   667                           	opt stack 0
   668  00004B                     	ds	1
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1l	equ	0xFE1
   677                           
   678                           	psect	bssBANK0
   679  000060                     __pbssBANK0:
   680                           	opt stack 0
   681  000060                     _comand:
   682                           	opt stack 0
   683  000060                     	ds	30
   684  00007E                     _comando:
   685                           	opt stack 0
   686  00007E                     	ds	30
   687  00009C                     _incrementa:
   688                           	opt stack 0
   689  00009C                     	ds	4
   690  0000A0                     _flagNM:
   691                           	opt stack 0
   692  0000A0                     	ds	2
   693  0000A2                     _vorbei:
   694                           	opt stack 0
   695  0000A2                     	ds	2
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           postdec1	equ	0xFE5
   703                           fsr1l	equ	0xFE1
   704                           
   705                           	psect	cstackBANK0
   706  0000A4                     __pcstackBANK0:
   707                           	opt stack 0
   708  0000A4                     ___lwdiv@counter:
   709                           	opt stack 0
   710  0000A4                     ___lldiv@quotient:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x0
   714  0000A4                     	ds	1
   715  0000A5                     ___lwdiv@quotient:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x1
   719  0000A5                     	ds	2
   720  0000A7                     ?___lwmod:
   721                           	opt stack 0
   722  0000A7                     ___lwmod@dividend:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x3
   726  0000A7                     	ds	1
   727  0000A8                     ___lldiv@counter:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x4
   731  0000A8                     	ds	1
   732  0000A9                     ___lwmod@divisor:
   733                           	opt stack 0
   734  0000A9                     taxa_serial@taxa:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x5
   738  0000A9                     	ds	2
   739  0000AB                     ??___lwmod:
   740                           
   741                           ; 0 bytes @ 0x7
   742  0000AB                     	ds	1
   743  0000AC                     ___lwmod@counter:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x8
   747  0000AC                     	ds	1
   748  0000AD                     ??_taxa_serial:
   749  0000AD                     sendnum@sannum:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x9
   753  0000AD                     	ds	8
   754  0000B5                     taxa_serial@baud_sanusb:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x11
   758  0000B5                     	ds	4
   759  0000B9                     ??_main:
   760                           
   761                           ; 0 bytes @ 0x15
   762  0000B9                     	ds	1
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772                           	psect	cstackCOMRAM
   773  000022                     __pcstackCOMRAM:
   774                           	opt stack 0
   775  000022                     ReadUSART@data:
   776                           	opt stack 0
   777  000022                     i2nivel_alto@pino:
   778                           	opt stack 0
   779  000022                     i2nivel_baixo@pino:
   780                           	opt stack 0
   781  000022                     i2inverte_saida@pino:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x0
   785  000022                     	ds	2
   786  000024                     ??i2_nivel_alto:
   787  000024                     ??i2_nivel_baixo:
   788  000024                     ??i2_inverte_saida:
   789                           
   790                           ; 0 bytes @ 0x2
   791  000024                     	ds	2
   792  000026                     ??_interrupcao:
   793                           
   794                           ; 0 bytes @ 0x4
   795  000026                     	ds	16
   796  000036                     ??_sputc:
   797  000036                     ?___awmod:
   798                           	opt stack 0
   799  000036                     ?___wmul:
   800                           	opt stack 0
   801  000036                     ?___lldiv:
   802                           	opt stack 0
   803  000036                     escreve_eeprom@dado:
   804                           	opt stack 0
   805  000036                     le_eeprom@endereco:
   806                           	opt stack 0
   807  000036                     swputc@c:
   808                           	opt stack 0
   809  000036                     Delay1KTCYx@unit:
   810                           	opt stack 0
   811  000036                     habilita_interrupcao@tipo:
   812                           	opt stack 0
   813  000036                     nivel_alto@pino:
   814                           	opt stack 0
   815  000036                     nivel_baixo@pino:
   816                           	opt stack 0
   817  000036                     inverte_saida@pino:
   818                           	opt stack 0
   819  000036                     ___awmod@dividend:
   820                           	opt stack 0
   821  000036                     ___wmul@multiplier:
   822                           	opt stack 0
   823  000036                     ___lldiv@dividend:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x14
   827  000036                     	ds	1
   828  000037                     escreve_eeprom@endereco:
   829                           	opt stack 0
   830  000037                     sendrw@st:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x15
   834  000037                     	ds	1
   835  000038                     ??_habilita_interrupcao:
   836  000038                     ??_nivel_alto:
   837  000038                     ??_nivel_baixo:
   838  000038                     ??_inverte_saida:
   839  000038                     sputc@c:
   840                           	opt stack 0
   841  000038                     ___awmod@divisor:
   842                           	opt stack 0
   843  000038                     ___wmul@multiplicand:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x16
   847  000038                     	ds	1
   848  000039                     ??_sendrw:
   849  000039                     sendr@st:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x17
   853  000039                     	ds	1
   854  00003A                     ??___awmod:
   855  00003A                     ___wmul@product:
   856                           	opt stack 0
   857  00003A                     ___lldiv@divisor:
   858                           	opt stack 0
   859                           
   860                           ; 4 bytes @ 0x18
   861  00003A                     	ds	1
   862  00003B                     ??_sendr:
   863  00003B                     ___awmod@counter:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x19
   867  00003B                     	ds	1
   868  00003C                     ___awmod@sign:
   869                           	opt stack 0
   870  00003C                     tempo_ms@i:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x1A
   874  00003C                     	ds	1
   875  00003D                     ?___lwdiv:
   876                           	opt stack 0
   877  00003D                     ___lwdiv@dividend:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x1B
   881  00003D                     	ds	1
   882  00003E                     ??___lldiv:
   883  00003E                     tempo_ms@k:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x1C
   887  00003E                     	ds	1
   888  00003F                     ___lwdiv@divisor:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x1D
   892  00003F                     	ds	1
   893  000040                     ??_bt_ini:
   894                           
   895                           ; 0 bytes @ 0x1E
   896  000040                     	ds	1
   897  000041                     ??___lwdiv:
   898                           
   899                           ; 0 bytes @ 0x1F
   900  000041                     	ds	1
   901  000042                     tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           postinc0	equ	0xFEE
   906                           wreg	equ	0xFE8
   907                           postdec1	equ	0xFE5
   908                           fsr1l	equ	0xFE1
   909                           
   910                           ; 0 bytes @ 0x20
   911 ;;
   912 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   913 ;;
   914 ;; *************** function _main *****************
   915 ;; Defined at:
   916 ;;		line 70 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   930 ;;      Params:         0       0       0       0       0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0
   932 ;;      Temps:          0       1       0       0       0       0       0       0       0
   933 ;;      Totals:         0       1       0       0       0       0       0       0       0
   934 ;;Total ram usage:        1 bytes
   935 ;; Hardware stack levels required when called:    8
   936 ;; This function calls:
   937 ;;		_bt_ini
   938 ;;		_clock_int_48MHz
   939 ;;		_habilita_interrupcao
   940 ;;		_inverte_saida
   941 ;;		_sendnum
   942 ;;		_sendrw
   943 ;;		_taxa_serial
   944 ;;		_tempo_ms
   945 ;; This function is called by:
   946 ;;		Startup code after reset
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text0
   951  0072D0                     __ptext0:
   952                           	opt stack 0
   953  0072D0                     _main:
   954                           	opt stack 23
   955                           
   956                           ;main.c: 72: clock_int_48MHz();
   957                           
   958                           ;incstack = 0
   959  0072D0  EC5A  F033         	call	_clock_int_48MHz	;wreg free
   960                           
   961                           ;main.c: 73: habilita_interrupcao(0x9D20);
   962  0072D4  0E9D               	movlw	157
   963  0072D6  6E37               	movwf	habilita_interrupcao@tipo+1,c
   964  0072D8  0E20               	movlw	32
   965  0072DA  6E36               	movwf	habilita_interrupcao@tipo,c
   966  0072DC  EC55  F035         	call	_habilita_interrupcao	;wreg free
   967                           
   968                           ;main.c: 74: taxa_serial(9600);
   969  0072E0  0E80               	movlw	128
   970  0072E2  0100               	movlb	0	; () banked
   971  0072E4  0100               	movlb	0	; () banked
   972  0072E6  6FA9               	movwf	taxa_serial@taxa& (0+255),b
   973  0072E8  0E25               	movlw	37
   974  0072EA  0100               	movlb	0	; () banked
   975  0072EC  6FAA               	movwf	(taxa_serial@taxa+1)& (0+255),b
   976  0072EE  0E00               	movlw	0
   977  0072F0  0100               	movlb	0	; () banked
   978  0072F2  6FAB               	movwf	(taxa_serial@taxa+2)& (0+255),b
   979  0072F4  0E00               	movlw	0
   980  0072F6  0100               	movlb	0	; () banked
   981  0072F8  6FAC               	movwf	(taxa_serial@taxa+3)& (0+255),b
   982  0072FA  EC05  F035         	call	_taxa_serial	;wreg free
   983                           
   984                           ;main.c: 75: bt_ini();
   985  0072FE  EC31  F03C         	call	_bt_ini	;wreg free
   986                           
   987                           ;main.c: 77: T0CON =0B11000001;
   988  007302  0EC1               	movlw	193
   989  007304  6ED5               	movwf	4053,c	;volatile
   990                           
   991                           ;main.c: 78: TMR0L = 16;
   992  007306  0E10               	movlw	16
   993  007308  6ED6               	movwf	4054,c	;volatile
   994                           
   995                           ;main.c: 79: RCONbits.IPEN = 1;
   996  00730A  8ED0               	bsf	4048,7,c	;volatile
   997                           
   998                           ;main.c: 80: INTCONbits.GIEH = 1;
   999  00730C  8EF2               	bsf	intcon,7,c	;volatile
  1000                           
  1001                           ;main.c: 81: INTCONbits.TMR0IE = 1;
  1002  00730E  8AF2               	bsf	intcon,5,c	;volatile
  1003  007310                     l4251:
  1004                           
  1005                           ;main.c: 84: if (PORTEbits.RE3==0){asm(" reset");}
  1006  007310  A684               	btfss	3972,3,c	;volatile
  1007  007312  00FF               	reset		;# 
  1008                           
  1009                           ;main.c: 85: if (envia){
  1010  007314  5006               	movf	_envia+1,w,c
  1011  007316  1005               	iorwf	_envia,w,c
  1012  007318  B4D8               	btfsc	status,2,c
  1013  00731A  D06E               	goto	l4297
  1014                           
  1015                           ;main.c: 86: inverte_saida(31759);tempo_ms (500);
  1016  00731C  0E7C               	movlw	124
  1017  00731E  6E37               	movwf	inverte_saida@pino+1,c
  1018  007320  0E0F               	movlw	15
  1019  007322  6E36               	movwf	inverte_saida@pino,c
  1020  007324  EC7F  F036         	call	_inverte_saida	;wreg free
  1021  007328  0E01               	movlw	1
  1022  00732A  6E3D               	movwf	tempo_ms@i+1,c
  1023  00732C  0EF4               	movlw	244
  1024  00732E  6E3C               	movwf	tempo_ms@i,c
  1025  007330  EC36  F033         	call	_tempo_ms	;wreg free
  1026                           
  1027                           ;main.c: 87: sendrw((char *)"https://docs.google.com/forms/d/1PZOqjnitER0m03Ix4r9gDBqhp7
      +                          Xs1YrPmjLymE2VWAU/formResponse?ifq&entry.962023089=");
  1028  007334  0E7F               	movlw	high STR_1
  1029  007336  6E38               	movwf	sendrw@st+1,c
  1030  007338  0E46               	movlw	low STR_1
  1031  00733A  6E37               	movwf	sendrw@st,c
  1032  00733C  ECB0  F033         	call	_sendrw	;wreg free
  1033                           
  1034                           ;main.c: 88: sendnum(39);
  1035  007340  0E00               	movlw	0
  1036  007342  0100               	movlb	0	; () banked
  1037  007344  0100               	movlb	0	; () banked
  1038  007346  6FAE               	movwf	(sendnum@sannum+1)& (0+255),b
  1039  007348  0E27               	movlw	39
  1040  00734A  0100               	movlb	0	; () banked
  1041  00734C  6FAD               	movwf	sendnum@sannum& (0+255),b
  1042  00734E  EC16  F03A         	call	_sendnum	;wreg free
  1043                           
  1044                           ;main.c: 89: sendrw((char *)"&entry.1468266733=");
  1045  007352  0E7F               	movlw	high STR_2
  1046  007354  6E38               	movwf	sendrw@st+1,c
  1047  007356  0EC8               	movlw	low STR_2
  1048  007358  6E37               	movwf	sendrw@st,c
  1049  00735A  ECB0  F033         	call	_sendrw	;wreg free
  1050                           
  1051                           ;main.c: 90: sendnum(87);
  1052  00735E  0E00               	movlw	0
  1053  007360  0100               	movlb	0	; () banked
  1054  007362  0100               	movlb	0	; () banked
  1055  007364  6FAE               	movwf	(sendnum@sannum+1)& (0+255),b
  1056  007366  0E57               	movlw	87
  1057  007368  0100               	movlb	0	; () banked
  1058  00736A  6FAD               	movwf	sendnum@sannum& (0+255),b
  1059  00736C  EC16  F03A         	call	_sendnum	;wreg free
  1060                           
  1061                           ;main.c: 91: sendrw((char *)"&entry.1609904957=");
  1062  007370  0E7F               	movlw	high STR_3
  1063  007372  6E38               	movwf	sendrw@st+1,c
  1064  007374  0EDB               	movlw	low STR_3
  1065  007376  6E37               	movwf	sendrw@st,c
  1066  007378  ECB0  F033         	call	_sendrw	;wreg free
  1067                           
  1068                           ;main.c: 92: sendnum(41);
  1069  00737C  0E00               	movlw	0
  1070  00737E  0100               	movlb	0	; () banked
  1071  007380  0100               	movlb	0	; () banked
  1072  007382  6FAE               	movwf	(sendnum@sannum+1)& (0+255),b
  1073  007384  0E29               	movlw	41
  1074  007386  0100               	movlb	0	; () banked
  1075  007388  6FAD               	movwf	sendnum@sannum& (0+255),b
  1076  00738A  EC16  F03A         	call	_sendnum	;wreg free
  1077                           
  1078                           ;main.c: 93: sendrw((char *)"&entry.1589284333=");
  1079  00738E  0E7F               	movlw	high STR_4
  1080  007390  6E38               	movwf	sendrw@st+1,c
  1081  007392  0EB5               	movlw	low STR_4
  1082  007394  6E37               	movwf	sendrw@st,c
  1083  007396  ECB0  F033         	call	_sendrw	;wreg free
  1084                           
  1085                           ;main.c: 94: sendnum(incrementa);
  1086  00739A  C09C  F0AD         	movff	_incrementa,sendnum@sannum
  1087  00739E  C09D  F0AE         	movff	_incrementa+1,sendnum@sannum+1
  1088  0073A2  EC16  F03A         	call	_sendnum	;wreg free
  1089                           
  1090                           ;main.c: 95: sendrw((char *)"&submit=Submit*");
  1091  0073A6  0E7F               	movlw	high STR_5
  1092  0073A8  6E38               	movwf	sendrw@st+1,c
  1093  0073AA  0EEE               	movlw	low STR_5
  1094  0073AC  6E37               	movwf	sendrw@st,c
  1095  0073AE  ECB0  F033         	call	_sendrw	;wreg free
  1096                           
  1097                           ;main.c: 96: for (i=0;i<5;i++)
  1098  0073B2  0E00               	movlw	0
  1099  0073B4  6E10               	movwf	_i+1,c
  1100  0073B6  0E00               	movlw	0
  1101  0073B8  6E0F               	movwf	_i,c
  1102  0073BA  0E05               	movlw	5
  1103  0073BC  5C0F               	subwf	_i,w,c
  1104  0073BE  0E00               	movlw	0
  1105  0073C0  5810               	subwfb	_i+1,w,c
  1106  0073C2  B0D8               	btfsc	status,0,c
  1107  0073C4  D019               	goto	l4297
  1108                           
  1109                           ;main.c: 97: {if (envia){
  1110  0073C6  5006               	movf	_envia+1,w,c
  1111  0073C8  1005               	iorwf	_envia,w,c
  1112  0073CA  B4D8               	btfsc	status,2,c
  1113  0073CC  D012               	goto	l4293
  1114                           
  1115                           ;main.c: 98: n=0; tempo_ms(1000); inverte_saida(31759);}}
  1116  0073CE  0100               	movlb	0	; () banked
  1117  0073D0  6FB9               	movwf	??_main& (0+255),b
  1118  0073D2  0E00               	movlw	0
  1119  0073D4  6E1B               	movwf	_n,c
  1120  0073D6  0100               	movlb	0	; () banked
  1121  0073D8  51B9               	movf	??_main& (0+255),w,b
  1122                           
  1123                           ; BSR set to: 0
  1124  0073DA  0E03               	movlw	3
  1125  0073DC  6E3D               	movwf	tempo_ms@i+1,c
  1126  0073DE  0EE8               	movlw	232
  1127  0073E0  6E3C               	movwf	tempo_ms@i,c
  1128  0073E2  EC36  F033         	call	_tempo_ms	;wreg free
  1129  0073E6  0E7C               	movlw	124
  1130  0073E8  6E37               	movwf	inverte_saida@pino+1,c
  1131  0073EA  0E0F               	movlw	15
  1132  0073EC  6E36               	movwf	inverte_saida@pino,c
  1133  0073EE  EC7F  F036         	call	_inverte_saida	;wreg free
  1134  0073F2                     l4293:
  1135  0073F2  4A0F               	infsnz	_i,f,c
  1136  0073F4  2A10               	incf	_i+1,f,c
  1137  0073F6  D7E1               	goto	L1
  1138  0073F8                     l4297:
  1139                           
  1140                           ;main.c: 101: }
  1141                           ;main.c: 103: ++incrementa;
  1142  0073F8  0E01               	movlw	1
  1143  0073FA  0100               	movlb	0	; () banked
  1144  0073FC  0100               	movlb	0	; () banked
  1145  0073FE  279C               	addwf	_incrementa& (0+255),f,b
  1146  007400  0E00               	movlw	0
  1147  007402  0100               	movlb	0	; () banked
  1148  007404  239D               	addwfc	(_incrementa+1)& (0+255),f,b
  1149  007406  0E00               	movlw	0
  1150  007408  0100               	movlb	0	; () banked
  1151  00740A  239E               	addwfc	(_incrementa+2)& (0+255),f,b
  1152  00740C  0E00               	movlw	0
  1153  00740E  0100               	movlb	0	; () banked
  1154  007410  239F               	addwfc	(_incrementa+3)& (0+255),f,b
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;main.c: 104: n=0; tempo_ms(500);
  1158  007412  0100               	movlb	0	; () banked
  1159  007414  6FB9               	movwf	??_main& (0+255),b
  1160  007416  0E00               	movlw	0
  1161  007418  6E1B               	movwf	_n,c
  1162  00741A  0100               	movlb	0	; () banked
  1163  00741C  51B9               	movf	??_main& (0+255),w,b
  1164                           
  1165                           ; BSR set to: 0
  1166  00741E  0E01               	movlw	1
  1167  007420  6E3D               	movwf	tempo_ms@i+1,c
  1168  007422  0EF4               	movlw	244
  1169  007424  6E3C               	movwf	tempo_ms@i,c
  1170  007426  EC36  F033         	call	_tempo_ms	;wreg free
  1171  00742A  D772               	goto	l4251
  1172  00742C                     __end_of_main:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           intcon	equ	0xFF2
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           postdec1	equ	0xFE5
  1182                           fsr1l	equ	0xFE1
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _taxa_serial *****************
  1186 ;; Defined at:
  1187 ;;		line 446 in file "SanUSB48X.h"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  taxa            4    5[BANK0 ] unsigned long 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  baud_sanusb     4   17[BANK0 ] unsigned long 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;		None               void
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1201 ;;      Params:         0       4       0       0       0       0       0       0       0
  1202 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1203 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1204 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1205 ;;Total ram usage:       16 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    3
  1208 ;; This function calls:
  1209 ;;		___lldiv
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text1
  1216  006A0A                     __ptext1:
  1217                           	opt stack 0
  1218  006A0A                     _taxa_serial:
  1219                           	opt stack 27
  1220                           
  1221                           ;SanUSB48X.h: 447: unsigned long baud_sanusb;
  1222                           ;SanUSB48X.h: 448: TRISCbits.TRISC7=1;
  1223                           
  1224                           ;incstack = 0
  1225  006A0A  8E94               	bsf	3988,7,c	;volatile
  1226                           
  1227                           ;SanUSB48X.h: 449: TRISCbits.TRISC6=0;
  1228  006A0C  9C94               	bcf	3988,6,c	;volatile
  1229                           
  1230                           ;SanUSB48X.h: 450: TXSTA = 0x24;
  1231  006A0E  0E24               	movlw	36
  1232  006A10  6EAC               	movwf	4012,c	;volatile
  1233                           
  1234                           ;SanUSB48X.h: 451: RCSTA = 0x90;
  1235  006A12  0E90               	movlw	144
  1236  006A14  6EAB               	movwf	4011,c	;volatile
  1237                           
  1238                           ;SanUSB48X.h: 452: BAUDCON = 0x08;
  1239  006A16  0E08               	movlw	8
  1240  006A18  6EB8               	movwf	4024,c	;volatile
  1241                           
  1242                           ;SanUSB48X.h: 454: baud_sanusb =REG+((48000000/4)/ taxa) - 1;
  1243  006A1A  0E00               	movlw	0
  1244  006A1C  6E36               	movwf	___lldiv@dividend,c
  1245  006A1E  0E1B               	movlw	27
  1246  006A20  6E37               	movwf	___lldiv@dividend+1,c
  1247  006A22  0EB7               	movlw	183
  1248  006A24  6E38               	movwf	___lldiv@dividend+2,c
  1249  006A26  0E00               	movlw	0
  1250  006A28  6E39               	movwf	___lldiv@dividend+3,c
  1251  006A2A  C0A9  F03A         	movff	taxa_serial@taxa,___lldiv@divisor
  1252  006A2E  C0AA  F03B         	movff	taxa_serial@taxa+1,___lldiv@divisor+1
  1253  006A32  C0AB  F03C         	movff	taxa_serial@taxa+2,___lldiv@divisor+2
  1254  006A36  C0AC  F03D         	movff	taxa_serial@taxa+3,___lldiv@divisor+3
  1255  006A3A  ECA7  F035         	call	___lldiv	;wreg free
  1256  006A3E  C036  F0AD         	movff	?___lldiv,??_taxa_serial
  1257  006A42  C037  F0AE         	movff	?___lldiv+1,??_taxa_serial+1
  1258  006A46  C038  F0AF         	movff	?___lldiv+2,??_taxa_serial+2
  1259  006A4A  C039  F0B0         	movff	?___lldiv+3,??_taxa_serial+3
  1260  006A4E  5046               	movf	_REG,w,c
  1261  006A50  0100               	movlb	0	; () banked
  1262  006A52  25AD               	addwf	??_taxa_serial& (0+255),w,b
  1263  006A54  0100               	movlb	0	; () banked
  1264  006A56  6FB1               	movwf	(??_taxa_serial+4)& (0+255),b
  1265  006A58  0E00               	movlw	0
  1266  006A5A  0100               	movlb	0	; () banked
  1267  006A5C  21AE               	addwfc	(??_taxa_serial+1)& (0+255),w,b
  1268  006A5E  0100               	movlb	0	; () banked
  1269  006A60  6FB2               	movwf	(??_taxa_serial+5)& (0+255),b
  1270  006A62  0E00               	movlw	0
  1271  006A64  0100               	movlb	0	; () banked
  1272  006A66  21AF               	addwfc	(??_taxa_serial+2)& (0+255),w,b
  1273  006A68  0100               	movlb	0	; () banked
  1274  006A6A  6FB3               	movwf	(??_taxa_serial+6)& (0+255),b
  1275  006A6C  0E00               	movlw	0
  1276  006A6E  0100               	movlb	0	; () banked
  1277  006A70  21B0               	addwfc	(??_taxa_serial+3)& (0+255),w,b
  1278  006A72  0100               	movlb	0	; () banked
  1279  006A74  6FB4               	movwf	(??_taxa_serial+7)& (0+255),b
  1280  006A76  0EFF               	movlw	255
  1281  006A78  0100               	movlb	0	; () banked
  1282  006A7A  25B1               	addwf	(??_taxa_serial+4)& (0+255),w,b
  1283  006A7C  0100               	movlb	0	; () banked
  1284  006A7E  0100               	movlb	0	; () banked
  1285  006A80  6FB5               	movwf	taxa_serial@baud_sanusb& (0+255),b
  1286  006A82  0EFF               	movlw	255
  1287  006A84  0100               	movlb	0	; () banked
  1288  006A86  21B2               	addwfc	(??_taxa_serial+5)& (0+255),w,b
  1289  006A88  0100               	movlb	0	; () banked
  1290  006A8A  6FB6               	movwf	(taxa_serial@baud_sanusb+1)& (0+255),b
  1291  006A8C  0EFF               	movlw	255
  1292  006A8E  0100               	movlb	0	; () banked
  1293  006A90  21B3               	addwfc	(??_taxa_serial+6)& (0+255),w,b
  1294  006A92  0100               	movlb	0	; () banked
  1295  006A94  6FB7               	movwf	(taxa_serial@baud_sanusb+2)& (0+255),b
  1296  006A96  0EFF               	movlw	255
  1297  006A98  0100               	movlb	0	; () banked
  1298  006A9A  21B4               	addwfc	(??_taxa_serial+7)& (0+255),w,b
  1299  006A9C  0100               	movlb	0	; () banked
  1300  006A9E  6FB8               	movwf	(taxa_serial@baud_sanusb+3)& (0+255),b
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;SanUSB48X.h: 455: SPBRGH = (unsigned char)(baud_sanusb >> 8);
  1304  006AA0  C0B6  FFB0         	movff	taxa_serial@baud_sanusb+1,4016	;volatile
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;SanUSB48X.h: 456: SPBRG = (unsigned char)baud_sanusb;
  1308  006AA4  C0B5  FFAF         	movff	taxa_serial@baud_sanusb,4015	;volatile
  1309                           
  1310                           ; BSR set to: 0
  1311  006AA8  0012               	return	
  1312  006AAA                     __end_of_taxa_serial:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           intcon	equ	0xFF2
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1l	equ	0xFE1
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function ___lldiv *****************
  1326 ;; Defined at:
  1327 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lldiv.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  dividend        4   20[COMRAM] unsigned long 
  1330 ;;  divisor         4   24[COMRAM] unsigned long 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  quotient        4    0[BANK0 ] unsigned long 
  1333 ;;  counter         1    4[BANK0 ] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  4   20[COMRAM] unsigned long 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1343 ;;      Params:         8       0       0       0       0       0       0       0       0
  1344 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1345 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1346 ;;      Totals:         9       5       0       0       0       0       0       0       0
  1347 ;;Total ram usage:       14 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    2
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_taxa_serial
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text2
  1358  006B4E                     __ptext2:
  1359                           	opt stack 0
  1360  006B4E                     ___lldiv:
  1361                           	opt stack 27
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;incstack = 0
  1365  006B4E  0E00               	movlw	0
  1366  006B50  0100               	movlb	0	; () banked
  1367  006B52  0100               	movlb	0	; () banked
  1368  006B54  6FA4               	movwf	___lldiv@quotient& (0+255),b
  1369  006B56  0E00               	movlw	0
  1370  006B58  0100               	movlb	0	; () banked
  1371  006B5A  6FA5               	movwf	(___lldiv@quotient+1)& (0+255),b
  1372  006B5C  0E00               	movlw	0
  1373  006B5E  0100               	movlb	0	; () banked
  1374  006B60  6FA6               	movwf	(___lldiv@quotient+2)& (0+255),b
  1375  006B62  0E00               	movlw	0
  1376  006B64  0100               	movlb	0	; () banked
  1377  006B66  6FA7               	movwf	(___lldiv@quotient+3)& (0+255),b
  1378                           
  1379                           ; BSR set to: 0
  1380  006B68  503D               	movf	___lldiv@divisor+3,w,c
  1381  006B6A  103A               	iorwf	___lldiv@divisor,w,c
  1382  006B6C  103B               	iorwf	___lldiv@divisor+1,w,c
  1383  006B6E  103C               	iorwf	___lldiv@divisor+2,w,c
  1384  006B70  B4D8               	btfsc	status,2,c
  1385  006B72  D039               	goto	l1076
  1386                           
  1387                           ; BSR set to: 0
  1388  006B74  6E3E               	movwf	??___lldiv& (0+255),c
  1389  006B76  0E01               	movlw	1
  1390  006B78  0100               	movlb	0	; () banked
  1391  006B7A  0100               	movlb	0	; () banked
  1392  006B7C  6FA8               	movwf	___lldiv@counter& (0+255),b
  1393  006B7E  503E               	movf	??___lldiv& (0+255),w,c
  1394  006B80  D008               	goto	l4147
  1395  006B82                     l4145:
  1396                           
  1397                           ; BSR set to: 0
  1398  006B82  90D8               	bcf	status,0,c
  1399  006B84  363A               	rlcf	___lldiv@divisor,f,c
  1400  006B86  363B               	rlcf	___lldiv@divisor+1,f,c
  1401  006B88  363C               	rlcf	___lldiv@divisor+2,f,c
  1402  006B8A  363D               	rlcf	___lldiv@divisor+3,f,c
  1403  006B8C  0100               	movlb	0	; () banked
  1404  006B8E  0100               	movlb	0	; () banked
  1405  006B90  2BA8               	incf	___lldiv@counter& (0+255),f,b
  1406  006B92                     l4147:
  1407                           
  1408                           ; BSR set to: 0
  1409  006B92  AE3D               	btfss	___lldiv@divisor+3,7,c
  1410  006B94  D7F6               	goto	l4145
  1411  006B96                     l4149:
  1412                           
  1413                           ; BSR set to: 0
  1414  006B96  0100               	movlb	0	; () banked
  1415  006B98  90D8               	bcf	status,0,c
  1416  006B9A  0100               	movlb	0	; () banked
  1417  006B9C  37A4               	rlcf	___lldiv@quotient& (0+255),f,b
  1418  006B9E  0100               	movlb	0	; () banked
  1419  006BA0  37A5               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1420  006BA2  0100               	movlb	0	; () banked
  1421  006BA4  37A6               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1422  006BA6  0100               	movlb	0	; () banked
  1423  006BA8  37A7               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1424                           
  1425                           ; BSR set to: 0
  1426  006BAA  503A               	movf	___lldiv@divisor,w,c
  1427  006BAC  5C36               	subwf	___lldiv@dividend,w,c
  1428  006BAE  503B               	movf	___lldiv@divisor+1,w,c
  1429  006BB0  5837               	subwfb	___lldiv@dividend+1,w,c
  1430  006BB2  503C               	movf	___lldiv@divisor+2,w,c
  1431  006BB4  5838               	subwfb	___lldiv@dividend+2,w,c
  1432  006BB6  503D               	movf	___lldiv@divisor+3,w,c
  1433  006BB8  5839               	subwfb	___lldiv@dividend+3,w,c
  1434  006BBA  A0D8               	btfss	status,0,c
  1435  006BBC  D00B               	goto	l4157
  1436                           
  1437                           ; BSR set to: 0
  1438  006BBE  503A               	movf	___lldiv@divisor,w,c
  1439  006BC0  5E36               	subwf	___lldiv@dividend,f,c
  1440  006BC2  503B               	movf	___lldiv@divisor+1,w,c
  1441  006BC4  5A37               	subwfb	___lldiv@dividend+1,f,c
  1442  006BC6  503C               	movf	___lldiv@divisor+2,w,c
  1443  006BC8  5A38               	subwfb	___lldiv@dividend+2,f,c
  1444  006BCA  503D               	movf	___lldiv@divisor+3,w,c
  1445  006BCC  5A39               	subwfb	___lldiv@dividend+3,f,c
  1446                           
  1447                           ; BSR set to: 0
  1448  006BCE  0100               	movlb	0	; () banked
  1449  006BD0  0100               	movlb	0	; () banked
  1450  006BD2  81A4               	bsf	___lldiv@quotient& (0+255),0,b
  1451  006BD4                     l4157:
  1452                           
  1453                           ; BSR set to: 0
  1454  006BD4  90D8               	bcf	status,0,c
  1455  006BD6  323D               	rrcf	___lldiv@divisor+3,f,c
  1456  006BD8  323C               	rrcf	___lldiv@divisor+2,f,c
  1457  006BDA  323B               	rrcf	___lldiv@divisor+1,f,c
  1458  006BDC  323A               	rrcf	___lldiv@divisor,f,c
  1459                           
  1460                           ; BSR set to: 0
  1461  006BDE  0100               	movlb	0	; () banked
  1462  006BE0  0100               	movlb	0	; () banked
  1463  006BE2  2FA8               	decfsz	___lldiv@counter& (0+255),f,b
  1464  006BE4  D7D8               	goto	l4149
  1465  006BE6                     l1076:
  1466                           
  1467                           ; BSR set to: 0
  1468  006BE6  C0A4  F036         	movff	___lldiv@quotient,?___lldiv
  1469  006BEA  C0A5  F037         	movff	___lldiv@quotient+1,?___lldiv+1
  1470  006BEE  C0A6  F038         	movff	___lldiv@quotient+2,?___lldiv+2
  1471  006BF2  C0A7  F039         	movff	___lldiv@quotient+3,?___lldiv+3
  1472                           
  1473                           ; BSR set to: 0
  1474  006BF6  0012               	return	
  1475  006BF8                     __end_of___lldiv:
  1476                           	opt stack 0
  1477                           tblptru	equ	0xFF8
  1478                           tblptrh	equ	0xFF7
  1479                           tblptrl	equ	0xFF6
  1480                           tablat	equ	0xFF5
  1481                           intcon	equ	0xFF2
  1482                           postinc0	equ	0xFEE
  1483                           wreg	equ	0xFE8
  1484                           postdec1	equ	0xFE5
  1485                           fsr1l	equ	0xFE1
  1486                           status	equ	0xFD8
  1487                           
  1488 ;; *************** function _sendrw *****************
  1489 ;; Defined at:
  1490 ;;		line 478 in file "SanUSB48X.h"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  st              2   21[COMRAM] PTR unsigned char 
  1493 ;;		 -> STR_5(16), STR_4(19), STR_3(19), STR_2(19), 
  1494 ;;		 -> STR_1(111), 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;		None               void
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1506 ;;      Params:         2       0       0       0       0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1508 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1509 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1510 ;;Total ram usage:        4 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    3
  1513 ;; This function calls:
  1514 ;;		_swputc
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text3
  1521  006760                     __ptext3:
  1522                           	opt stack 0
  1523  006760                     _sendrw:
  1524                           	opt stack 27
  1525                           
  1526                           ;SanUSB48X.h: 479: for(k=0;st[k]!='\0';k++) {swputc(st[k]);}
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;incstack = 0
  1530  006760  6E39               	movwf	??_sendrw& (0+255),c
  1531  006762  0E00               	movlw	0
  1532  006764  6E19               	movwf	_k,c
  1533  006766  5039               	movf	??_sendrw& (0+255),w,c
  1534  006768  D013               	goto	l3145
  1535  00676A                     l3141:
  1536  00676A  5019               	movf	_k,w,c
  1537  00676C  0D01               	mullw	1
  1538  00676E  C037  F039         	movff	sendrw@st,??_sendrw
  1539  006772  C038  F03A         	movff	sendrw@st+1,??_sendrw+1
  1540  006776  50F3               	movf	prodl,w,c
  1541  006778  2639               	addwf	??_sendrw,f,c
  1542  00677A  50F4               	movf	prodh,w,c
  1543  00677C  223A               	addwfc	??_sendrw+1,f,c
  1544  00677E  C039  FFF6         	movff	??_sendrw,tblptrl
  1545  006782  C03A  FFF7         	movff	??_sendrw+1,tblptrh
  1546  006786  0008               	tblrd		*
  1547  006788  50F5               	movf	tablat,w,c
  1548  00678A  EC48  F032         	call	_swputc
  1549  00678E  2A19               	incf	_k,f,c
  1550  006790                     l3145:
  1551  006790  5019               	movf	_k,w,c
  1552  006792  0D01               	mullw	1
  1553  006794  C037  F039         	movff	sendrw@st,??_sendrw
  1554  006798  C038  F03A         	movff	sendrw@st+1,??_sendrw+1
  1555  00679C  50F3               	movf	prodl,w,c
  1556  00679E  2639               	addwf	??_sendrw,f,c
  1557  0067A0  50F4               	movf	prodh,w,c
  1558  0067A2  223A               	addwfc	??_sendrw+1,f,c
  1559  0067A4  C039  FFF6         	movff	??_sendrw,tblptrl
  1560  0067A8  C03A  FFF7         	movff	??_sendrw+1,tblptrh
  1561  0067AC  0008               	tblrd		*
  1562  0067AE  50F5               	movf	tablat,w,c
  1563  0067B0  0900               	iorlw	0
  1564  0067B2  B4D8               	btfsc	status,2,c
  1565  0067B4  0012               	return	
  1566  0067B6  D7D9               	goto	l3141
  1567  0067B8                     __end_of_sendrw:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           prodh	equ	0xFF4
  1574                           prodl	equ	0xFF3
  1575                           intcon	equ	0xFF2
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           postdec1	equ	0xFE5
  1579                           fsr1l	equ	0xFE1
  1580                           status	equ	0xFD8
  1581                           
  1582 ;; *************** function _sendnum *****************
  1583 ;; Defined at:
  1584 ;;		line 493 in file "SanUSB48X.h"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  sannum          2    9[BANK0 ] unsigned int 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;		None               void
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1598 ;;      Params:         0       2       0       0       0       0       0       0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1601 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1602 ;;Total ram usage:        2 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    3
  1605 ;; This function calls:
  1606 ;;		___lwdiv
  1607 ;;		___lwmod
  1608 ;;		_swputc
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text4
  1615  00742C                     __ptext4:
  1616                           	opt stack 0
  1617  00742C                     _sendnum:
  1618                           	opt stack 27
  1619                           
  1620                           ;SanUSB48X.h: 495: if(sannum > 9999) {
  1621                           
  1622                           ;incstack = 0
  1623  00742C  0E10               	movlw	16
  1624  00742E  0100               	movlb	0	; () banked
  1625  007430  0100               	movlb	0	; () banked
  1626  007432  5DAD               	subwf	sendnum@sannum& (0+255),w,b
  1627  007434  0E27               	movlw	39
  1628  007436  0100               	movlb	0	; () banked
  1629  007438  59AE               	subwfb	(sendnum@sannum+1)& (0+255),w,b
  1630  00743A  A0D8               	btfss	status,0,c
  1631  00743C  D01E               	goto	l4221
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;SanUSB48X.h: 496: swputc(((sannum / 10000) % 10)+REG+0x30);
  1635  00743E  0E27               	movlw	39
  1636  007440  6E40               	movwf	___lwdiv@divisor+1,c
  1637  007442  0E10               	movlw	16
  1638  007444  6E3F               	movwf	___lwdiv@divisor,c
  1639  007446  C0AD  F03D         	movff	sendnum@sannum,___lwdiv@dividend
  1640  00744A  C0AE  F03E         	movff	sendnum@sannum+1,___lwdiv@dividend+1
  1641  00744E  EC39  F034         	call	___lwdiv	;wreg free
  1642  007452  C03D  F0A7         	movff	?___lwdiv,___lwmod@dividend
  1643  007456  C03E  F0A8         	movff	?___lwdiv+1,___lwmod@dividend+1
  1644  00745A  0E00               	movlw	0
  1645  00745C  0100               	movlb	0	; () banked
  1646  00745E  0100               	movlb	0	; () banked
  1647  007460  6FAA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1648  007462  0E0A               	movlw	10
  1649  007464  0100               	movlb	0	; () banked
  1650  007466  6FA9               	movwf	___lwmod@divisor& (0+255),b
  1651  007468  EC72  F034         	call	___lwmod	;wreg free
  1652  00746C  0100               	movlb	0	; () banked
  1653  00746E  0100               	movlb	0	; () banked
  1654  007470  51A7               	movf	?___lwmod& (0+255),w,b
  1655  007472  2446               	addwf	_REG,w,c
  1656  007474  0F30               	addlw	48
  1657  007476  EC48  F032         	call	_swputc
  1658  00747A                     l4221:
  1659                           
  1660                           ;SanUSB48X.h: 497: }
  1661                           ;SanUSB48X.h: 498: if(sannum > 999) {
  1662  00747A  0EE8               	movlw	232
  1663  00747C  0100               	movlb	0	; () banked
  1664  00747E  0100               	movlb	0	; () banked
  1665  007480  5DAD               	subwf	sendnum@sannum& (0+255),w,b
  1666  007482  0E03               	movlw	3
  1667  007484  0100               	movlb	0	; () banked
  1668  007486  59AE               	subwfb	(sendnum@sannum+1)& (0+255),w,b
  1669  007488  A0D8               	btfss	status,0,c
  1670  00748A  D01D               	goto	l4225
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;SanUSB48X.h: 499: swputc(((sannum / 1000) % 10)+0x30);
  1674  00748C  0E03               	movlw	3
  1675  00748E  6E40               	movwf	___lwdiv@divisor+1,c
  1676  007490  0EE8               	movlw	232
  1677  007492  6E3F               	movwf	___lwdiv@divisor,c
  1678  007494  C0AD  F03D         	movff	sendnum@sannum,___lwdiv@dividend
  1679  007498  C0AE  F03E         	movff	sendnum@sannum+1,___lwdiv@dividend+1
  1680  00749C  EC39  F034         	call	___lwdiv	;wreg free
  1681  0074A0  C03D  F0A7         	movff	?___lwdiv,___lwmod@dividend
  1682  0074A4  C03E  F0A8         	movff	?___lwdiv+1,___lwmod@dividend+1
  1683  0074A8  0E00               	movlw	0
  1684  0074AA  0100               	movlb	0	; () banked
  1685  0074AC  0100               	movlb	0	; () banked
  1686  0074AE  6FAA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1687  0074B0  0E0A               	movlw	10
  1688  0074B2  0100               	movlb	0	; () banked
  1689  0074B4  6FA9               	movwf	___lwmod@divisor& (0+255),b
  1690  0074B6  EC72  F034         	call	___lwmod	;wreg free
  1691  0074BA  0100               	movlb	0	; () banked
  1692  0074BC  0100               	movlb	0	; () banked
  1693  0074BE  51A7               	movf	?___lwmod& (0+255),w,b
  1694  0074C0  0F30               	addlw	48
  1695  0074C2  EC48  F032         	call	_swputc
  1696  0074C6                     l4225:
  1697                           
  1698                           ;SanUSB48X.h: 500: }
  1699                           ;SanUSB48X.h: 501: if(sannum > 99) {
  1700  0074C6  0E64               	movlw	100
  1701  0074C8  0100               	movlb	0	; () banked
  1702  0074CA  0100               	movlb	0	; () banked
  1703  0074CC  5DAD               	subwf	sendnum@sannum& (0+255),w,b
  1704  0074CE  0E00               	movlw	0
  1705  0074D0  0100               	movlb	0	; () banked
  1706  0074D2  59AE               	subwfb	(sendnum@sannum+1)& (0+255),w,b
  1707  0074D4  A0D8               	btfss	status,0,c
  1708  0074D6  D01E               	goto	l4229
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;SanUSB48X.h: 502: swputc(((sannum / 100) % 10)+REG+0x30);
  1712  0074D8  0E00               	movlw	0
  1713  0074DA  6E40               	movwf	___lwdiv@divisor+1,c
  1714  0074DC  0E64               	movlw	100
  1715  0074DE  6E3F               	movwf	___lwdiv@divisor,c
  1716  0074E0  C0AD  F03D         	movff	sendnum@sannum,___lwdiv@dividend
  1717  0074E4  C0AE  F03E         	movff	sendnum@sannum+1,___lwdiv@dividend+1
  1718  0074E8  EC39  F034         	call	___lwdiv	;wreg free
  1719  0074EC  C03D  F0A7         	movff	?___lwdiv,___lwmod@dividend
  1720  0074F0  C03E  F0A8         	movff	?___lwdiv+1,___lwmod@dividend+1
  1721  0074F4  0E00               	movlw	0
  1722  0074F6  0100               	movlb	0	; () banked
  1723  0074F8  0100               	movlb	0	; () banked
  1724  0074FA  6FAA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1725  0074FC  0E0A               	movlw	10
  1726  0074FE  0100               	movlb	0	; () banked
  1727  007500  6FA9               	movwf	___lwmod@divisor& (0+255),b
  1728  007502  EC72  F034         	call	___lwmod	;wreg free
  1729  007506  0100               	movlb	0	; () banked
  1730  007508  0100               	movlb	0	; () banked
  1731  00750A  51A7               	movf	?___lwmod& (0+255),w,b
  1732  00750C  2446               	addwf	_REG,w,c
  1733  00750E  0F30               	addlw	48
  1734  007510  EC48  F032         	call	_swputc
  1735  007514                     l4229:
  1736                           
  1737                           ;SanUSB48X.h: 503: }
  1738                           ;SanUSB48X.h: 504: if(sannum > 9) {
  1739  007514  0E0A               	movlw	10
  1740  007516  0100               	movlb	0	; () banked
  1741  007518  0100               	movlb	0	; () banked
  1742  00751A  5DAD               	subwf	sendnum@sannum& (0+255),w,b
  1743  00751C  0E00               	movlw	0
  1744  00751E  0100               	movlb	0	; () banked
  1745  007520  59AE               	subwfb	(sendnum@sannum+1)& (0+255),w,b
  1746  007522  A0D8               	btfss	status,0,c
  1747  007524  D01E               	goto	l430
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;SanUSB48X.h: 505: swputc(((sannum / 10) % 10)+REG+0x30);
  1751  007526  0E00               	movlw	0
  1752  007528  6E40               	movwf	___lwdiv@divisor+1,c
  1753  00752A  0E0A               	movlw	10
  1754  00752C  6E3F               	movwf	___lwdiv@divisor,c
  1755  00752E  C0AD  F03D         	movff	sendnum@sannum,___lwdiv@dividend
  1756  007532  C0AE  F03E         	movff	sendnum@sannum+1,___lwdiv@dividend+1
  1757  007536  EC39  F034         	call	___lwdiv	;wreg free
  1758  00753A  C03D  F0A7         	movff	?___lwdiv,___lwmod@dividend
  1759  00753E  C03E  F0A8         	movff	?___lwdiv+1,___lwmod@dividend+1
  1760  007542  0E00               	movlw	0
  1761  007544  0100               	movlb	0	; () banked
  1762  007546  0100               	movlb	0	; () banked
  1763  007548  6FAA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1764  00754A  0E0A               	movlw	10
  1765  00754C  0100               	movlb	0	; () banked
  1766  00754E  6FA9               	movwf	___lwmod@divisor& (0+255),b
  1767  007550  EC72  F034         	call	___lwmod	;wreg free
  1768  007554  0100               	movlb	0	; () banked
  1769  007556  0100               	movlb	0	; () banked
  1770  007558  51A7               	movf	?___lwmod& (0+255),w,b
  1771  00755A  2446               	addwf	_REG,w,c
  1772  00755C  0F30               	addlw	48
  1773  00755E  EC48  F032         	call	_swputc
  1774  007562                     l430:
  1775                           
  1776                           ;SanUSB48X.h: 506: }
  1777                           ;SanUSB48X.h: 507: swputc((sannum % 10)+REG+0x30) ;
  1778  007562  C0AD  F0A7         	movff	sendnum@sannum,___lwmod@dividend
  1779  007566  C0AE  F0A8         	movff	sendnum@sannum+1,___lwmod@dividend+1
  1780  00756A  0E00               	movlw	0
  1781  00756C  0100               	movlb	0	; () banked
  1782  00756E  0100               	movlb	0	; () banked
  1783  007570  6FAA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1784  007572  0E0A               	movlw	10
  1785  007574  0100               	movlb	0	; () banked
  1786  007576  6FA9               	movwf	___lwmod@divisor& (0+255),b
  1787  007578  EC72  F034         	call	___lwmod	;wreg free
  1788  00757C  0100               	movlb	0	; () banked
  1789  00757E  0100               	movlb	0	; () banked
  1790  007580  51A7               	movf	?___lwmod& (0+255),w,b
  1791  007582  2446               	addwf	_REG,w,c
  1792  007584  0F30               	addlw	48
  1793  007586  EC48  F032         	call	_swputc
  1794  00758A  0012               	return	
  1795  00758C                     __end_of_sendnum:
  1796                           	opt stack 0
  1797                           tblptru	equ	0xFF8
  1798                           tblptrh	equ	0xFF7
  1799                           tblptrl	equ	0xFF6
  1800                           tablat	equ	0xFF5
  1801                           prodh	equ	0xFF4
  1802                           prodl	equ	0xFF3
  1803                           intcon	equ	0xFF2
  1804                           postinc0	equ	0xFEE
  1805                           wreg	equ	0xFE8
  1806                           postdec1	equ	0xFE5
  1807                           fsr1l	equ	0xFE1
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function _swputc *****************
  1811 ;; Defined at:
  1812 ;;		line 466 in file "SanUSB48X.h"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  c               1    wreg     unsigned char 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  c               1   20[COMRAM] unsigned char 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;		None               void
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1826 ;;      Params:         0       0       0       0       0       0       0       0       0
  1827 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1829 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1830 ;;Total ram usage:        1 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    2
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_sendrw
  1837 ;;		_sendnum
  1838 ;;		_sendsw
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text5
  1843  006490                     __ptext5:
  1844                           	opt stack 0
  1845  006490                     _swputc:
  1846                           	opt stack 27
  1847                           
  1848                           ;incstack = 0
  1849                           ;swputc@c stored from wreg
  1850  006490  CFE8 F036          	movff	wreg,swputc@c
  1851  006494                     l391:
  1852  006494  A2AC               	btfss	4012,1,c	;volatile
  1853  006496  D7FE               	goto	l391
  1854                           
  1855                           ;SanUSB48X.h: 469: TXREG=REG+c;
  1856  006498  5046               	movf	_REG,w,c
  1857  00649A  2436               	addwf	swputc@c,w,c
  1858  00649C  6EAD               	movwf	4013,c	;volatile
  1859  00649E  0012               	return	
  1860  0064A0                     __end_of_swputc:
  1861                           	opt stack 0
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           prodh	equ	0xFF4
  1867                           prodl	equ	0xFF3
  1868                           intcon	equ	0xFF2
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           postdec1	equ	0xFE5
  1872                           fsr1l	equ	0xFE1
  1873                           status	equ	0xFD8
  1874                           
  1875 ;; *************** function ___lwmod *****************
  1876 ;; Defined at:
  1877 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwmod.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  dividend        2    3[BANK0 ] unsigned int 
  1880 ;;  divisor         2    5[BANK0 ] unsigned int 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  counter         1    8[BANK0 ] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  2    3[BANK0 ] unsigned int 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1892 ;;      Params:         0       4       0       0       0       0       0       0       0
  1893 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1894 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1895 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1896 ;;Total ram usage:        6 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    2
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_sendnum
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text6
  1907  0068E4                     __ptext6:
  1908                           	opt stack 0
  1909  0068E4                     ___lwmod:
  1910                           	opt stack 27
  1911                           
  1912                           ;incstack = 0
  1913  0068E4  0100               	movlb	0	; () banked
  1914  0068E6  0100               	movlb	0	; () banked
  1915  0068E8  51AA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1916  0068EA  11A9               	iorwf	___lwmod@divisor& (0+255),w,b
  1917  0068EC  B4D8               	btfsc	status,2,c
  1918  0068EE  D03A               	goto	l1155
  1919                           
  1920                           ; BSR set to: 0
  1921  0068F0  0100               	movlb	0	; () banked
  1922  0068F2  6FAB               	movwf	??___lwmod& (0+255),b
  1923  0068F4  0E01               	movlw	1
  1924  0068F6  0100               	movlb	0	; () banked
  1925  0068F8  0100               	movlb	0	; () banked
  1926  0068FA  6FAC               	movwf	___lwmod@counter& (0+255),b
  1927  0068FC  0100               	movlb	0	; () banked
  1928  0068FE  51AB               	movf	??___lwmod& (0+255),w,b
  1929  006900  D009               	goto	l4189
  1930  006902                     l4187:
  1931                           
  1932                           ; BSR set to: 0
  1933  006902  0100               	movlb	0	; () banked
  1934  006904  0100               	movlb	0	; () banked
  1935  006906  0100               	movlb	0	; () banked
  1936  006908  90D8               	bcf	status,0,c
  1937  00690A  37A9               	rlcf	___lwmod@divisor& (0+255),f,b
  1938  00690C  37AA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1939  00690E  0100               	movlb	0	; () banked
  1940  006910  0100               	movlb	0	; () banked
  1941  006912  2BAC               	incf	___lwmod@counter& (0+255),f,b
  1942  006914                     l4189:
  1943                           
  1944                           ; BSR set to: 0
  1945  006914  0100               	movlb	0	; () banked
  1946  006916  0100               	movlb	0	; () banked
  1947  006918  AFAA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1948  00691A  D7F3               	goto	l4187
  1949  00691C                     l4191:
  1950                           
  1951                           ; BSR set to: 0
  1952  00691C  0100               	movlb	0	; () banked
  1953  00691E  0100               	movlb	0	; () banked
  1954  006920  51A9               	movf	___lwmod@divisor& (0+255),w,b
  1955  006922  0100               	movlb	0	; () banked
  1956  006924  0100               	movlb	0	; () banked
  1957  006926  5DA7               	subwf	___lwmod@dividend& (0+255),w,b
  1958  006928  0100               	movlb	0	; () banked
  1959  00692A  0100               	movlb	0	; () banked
  1960  00692C  51AA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1961  00692E  0100               	movlb	0	; () banked
  1962  006930  0100               	movlb	0	; () banked
  1963  006932  59A8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1964  006934  A0D8               	btfss	status,0,c
  1965  006936  D00C               	goto	l4195
  1966                           
  1967                           ; BSR set to: 0
  1968  006938  0100               	movlb	0	; () banked
  1969  00693A  0100               	movlb	0	; () banked
  1970  00693C  51A9               	movf	___lwmod@divisor& (0+255),w,b
  1971  00693E  0100               	movlb	0	; () banked
  1972  006940  0100               	movlb	0	; () banked
  1973  006942  5FA7               	subwf	___lwmod@dividend& (0+255),f,b
  1974  006944  0100               	movlb	0	; () banked
  1975  006946  0100               	movlb	0	; () banked
  1976  006948  51AA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1977  00694A  0100               	movlb	0	; () banked
  1978  00694C  0100               	movlb	0	; () banked
  1979  00694E  5BA8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1980  006950                     l4195:
  1981                           
  1982                           ; BSR set to: 0
  1983  006950  0100               	movlb	0	; () banked
  1984  006952  0100               	movlb	0	; () banked
  1985  006954  0100               	movlb	0	; () banked
  1986  006956  90D8               	bcf	status,0,c
  1987  006958  33AA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1988  00695A  33A9               	rrcf	___lwmod@divisor& (0+255),f,b
  1989                           
  1990                           ; BSR set to: 0
  1991  00695C  0100               	movlb	0	; () banked
  1992  00695E  0100               	movlb	0	; () banked
  1993  006960  2FAC               	decfsz	___lwmod@counter& (0+255),f,b
  1994  006962  D7DC               	goto	l4191
  1995  006964                     l1155:
  1996                           
  1997                           ; BSR set to: 0
  1998  006964  C0A7  F0A7         	movff	___lwmod@dividend,?___lwmod
  1999  006968  C0A8  F0A8         	movff	___lwmod@dividend+1,?___lwmod+1
  2000                           
  2001                           ; BSR set to: 0
  2002  00696C  0012               	return	
  2003  00696E                     __end_of___lwmod:
  2004                           	opt stack 0
  2005                           tblptru	equ	0xFF8
  2006                           tblptrh	equ	0xFF7
  2007                           tblptrl	equ	0xFF6
  2008                           tablat	equ	0xFF5
  2009                           prodh	equ	0xFF4
  2010                           prodl	equ	0xFF3
  2011                           intcon	equ	0xFF2
  2012                           postinc0	equ	0xFEE
  2013                           wreg	equ	0xFE8
  2014                           postdec1	equ	0xFE5
  2015                           fsr1l	equ	0xFE1
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _habilita_interrupcao *****************
  2019 ;; Defined at:
  2020 ;;		line 68 in file "SanUSB48X.h"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  tipo            2   20[COMRAM] unsigned int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;		None               void
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2034 ;;      Params:         2       0       0       0       0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2036 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2037 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:        4 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    2
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text7
  2049  006AAA                     __ptext7:
  2050                           	opt stack 0
  2051  006AAA                     _habilita_interrupcao:
  2052                           	opt stack 28
  2053                           
  2054                           ;SanUSB48X.h: 69: RCONbits.IPEN = 1;
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;incstack = 0
  2058  006AAA  8ED0               	bsf	4048,7,c	;volatile
  2059                           
  2060                           ;SanUSB48X.h: 70: INTCONbits.GIEH = 1;
  2061  006AAC  8EF2               	bsf	intcon,7,c	;volatile
  2062                           
  2063                           ;SanUSB48X.h: 71: switch(tipo){
  2064  006AAE  D01A               	goto	l3103
  2065  006AB0                     l140:
  2066  006AB0  8AF2               	bsf	intcon,5,c	;volatile
  2067  006AB2  8ED5               	bsf	4053,7,c	;volatile
  2068  006AB4  D04B               	goto	l150
  2069  006AB6                     l142:
  2070  006AB6  809D               	bsf	3997,0,c	;volatile
  2071  006AB8  80CD               	bsf	4045,0,c	;volatile
  2072  006ABA  D048               	goto	l150
  2073  006ABC                     l143:
  2074  006ABC  829D               	bsf	3997,1,c	;volatile
  2075  006ABE  84CA               	bsf	4042,2,c	;volatile
  2076  006AC0  D045               	goto	l150
  2077  006AC2                     l144:
  2078  006AC2  82A0               	bsf	4000,1,c	;volatile
  2079  006AC4  80B1               	bsf	4017,0,c	;volatile
  2080  006AC6  D042               	goto	l150
  2081  006AC8                     l145:
  2082  006AC8  88F2               	bsf	intcon,4,c	;volatile
  2083  006ACA  9CF1               	bcf	intcon2,6,c	;volatile
  2084  006ACC  D03F               	goto	l150
  2085  006ACE                     l146:
  2086  006ACE  86F0               	bsf	intcon3,3,c	;volatile
  2087  006AD0  9AF1               	bcf	intcon2,5,c	;volatile
  2088  006AD2  D03C               	goto	l150
  2089  006AD4                     l147:
  2090  006AD4  88F0               	bsf	intcon3,4,c	;volatile
  2091  006AD6  98F1               	bcf	intcon2,4,c	;volatile
  2092  006AD8  D039               	goto	l150
  2093  006ADA                     l148:
  2094  006ADA  8C9D               	bsf	3997,6,c	;volatile
  2095  006ADC  D037               	goto	l150
  2096  006ADE                     l149:
  2097  006ADE  8A9D               	bsf	3997,5,c	;volatile
  2098  006AE0  8A9F               	bsf	3999,5,c	;volatile
  2099  006AE2  D034               	goto	l150
  2100  006AE4                     l3103:
  2101  006AE4  C036  F038         	movff	habilita_interrupcao@tipo,??_habilita_interrupcao
  2102  006AE8  C037  F039         	movff	habilita_interrupcao@tipo+1,??_habilita_interrupcao+1
  2103                           
  2104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  2105                           ; Switch size 1, requested type "space"
  2106                           ; Number of cases is 4, Range of values is 157 to 242
  2107                           ; switch strategies available:
  2108                           ; Name         Instructions Cycles
  2109                           ; simple_byte           13     7 (average)
  2110                           ;	Chosen strategy is simple_byte
  2111  006AEC  5039               	movf	??_habilita_interrupcao+1,w,c
  2112  006AEE  0A9D               	xorlw	157	; case 157
  2113  006AF0  B4D8               	btfsc	status,2,c
  2114  006AF2  D00A               	goto	l4583
  2115  006AF4  0A3D               	xorlw	61	; case 160
  2116  006AF6  B4D8               	btfsc	status,2,c
  2117  006AF8  D015               	goto	l4585
  2118  006AFA  0A50               	xorlw	80	; case 240
  2119  006AFC  B4D8               	btfsc	status,2,c
  2120  006AFE  D017               	goto	l4587
  2121  006B00  0A02               	xorlw	2	; case 242
  2122  006B02  B4D8               	btfsc	status,2,c
  2123  006B04  D01C               	goto	l4589
  2124  006B06  D022               	goto	l150
  2125  006B08                     l4583:
  2126                           
  2127                           ; Switch size 1, requested type "space"
  2128                           ; Number of cases is 4, Range of values is 1 to 64
  2129                           ; switch strategies available:
  2130                           ; Name         Instructions Cycles
  2131                           ; simple_byte           13     7 (average)
  2132                           ;	Chosen strategy is simple_byte
  2133  006B08  5038               	movf	??_habilita_interrupcao,w,c
  2134  006B0A  0A01               	xorlw	1	; case 1
  2135  006B0C  B4D8               	btfsc	status,2,c
  2136  006B0E  D7D3               	goto	l142
  2137  006B10  0A03               	xorlw	3	; case 2
  2138  006B12  B4D8               	btfsc	status,2,c
  2139  006B14  D7D3               	goto	l143
  2140  006B16  0A22               	xorlw	34	; case 32
  2141  006B18  B4D8               	btfsc	status,2,c
  2142  006B1A  D7E1               	goto	l149
  2143  006B1C  0A60               	xorlw	96	; case 64
  2144  006B1E  B4D8               	btfsc	status,2,c
  2145  006B20  D7DC               	goto	l148
  2146  006B22  D014               	goto	l150
  2147  006B24                     l4585:
  2148                           
  2149                           ; Switch size 1, requested type "space"
  2150                           ; Number of cases is 1, Range of values is 2 to 2
  2151                           ; switch strategies available:
  2152                           ; Name         Instructions Cycles
  2153                           ; simple_byte            4     3 (average)
  2154                           ;	Chosen strategy is simple_byte
  2155  006B24  5038               	movf	??_habilita_interrupcao,w,c
  2156  006B26  0A02               	xorlw	2	; case 2
  2157  006B28  B4D8               	btfsc	status,2,c
  2158  006B2A  D7CB               	goto	l144
  2159  006B2C  D00F               	goto	l150
  2160  006B2E                     l4587:
  2161                           
  2162                           ; Switch size 1, requested type "space"
  2163                           ; Number of cases is 2, Range of values is 8 to 16
  2164                           ; switch strategies available:
  2165                           ; Name         Instructions Cycles
  2166                           ; simple_byte            7     4 (average)
  2167                           ;	Chosen strategy is simple_byte
  2168  006B2E  5038               	movf	??_habilita_interrupcao,w,c
  2169  006B30  0A08               	xorlw	8	; case 8
  2170  006B32  B4D8               	btfsc	status,2,c
  2171  006B34  D7CC               	goto	l146
  2172  006B36  0A18               	xorlw	24	; case 16
  2173  006B38  B4D8               	btfsc	status,2,c
  2174  006B3A  D7CC               	goto	l147
  2175  006B3C  D007               	goto	l150
  2176  006B3E                     l4589:
  2177                           
  2178                           ; Switch size 1, requested type "space"
  2179                           ; Number of cases is 2, Range of values is 16 to 32
  2180                           ; switch strategies available:
  2181                           ; Name         Instructions Cycles
  2182                           ; simple_byte            7     4 (average)
  2183                           ;	Chosen strategy is simple_byte
  2184  006B3E  5038               	movf	??_habilita_interrupcao,w,c
  2185  006B40  0A10               	xorlw	16	; case 16
  2186  006B42  B4D8               	btfsc	status,2,c
  2187  006B44  D7C1               	goto	l145
  2188  006B46  0A30               	xorlw	48	; case 32
  2189  006B48  B4D8               	btfsc	status,2,c
  2190  006B4A  D7B2               	goto	l140
  2191  006B4C                     l150:
  2192  006B4C  0012               	return	
  2193  006B4E                     __end_of_habilita_interrupcao:
  2194                           	opt stack 0
  2195                           tblptru	equ	0xFF8
  2196                           tblptrh	equ	0xFF7
  2197                           tblptrl	equ	0xFF6
  2198                           tablat	equ	0xFF5
  2199                           prodh	equ	0xFF4
  2200                           prodl	equ	0xFF3
  2201                           intcon	equ	0xFF2
  2202                           intcon2	equ	0xFF1
  2203                           intcon3	equ	0xFF0
  2204                           postinc0	equ	0xFEE
  2205                           wreg	equ	0xFE8
  2206                           postdec1	equ	0xFE5
  2207                           fsr1l	equ	0xFE1
  2208                           status	equ	0xFD8
  2209                           
  2210 ;; *************** function _clock_int_48MHz *****************
  2211 ;; Defined at:
  2212 ;;		line 435 in file "SanUSB48X.h"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;		None               void
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, prodl, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    3
  2233 ;; This function calls:
  2234 ;;		___awmod
  2235 ;;		___lwdiv
  2236 ;;		_le_eeprom
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text8
  2243  0066B4                     __ptext8:
  2244                           	opt stack 0
  2245  0066B4                     _clock_int_48MHz:
  2246                           	opt stack 27
  2247                           
  2248                           ;SanUSB48X.h: 438: EEADR = 0B11111101;
  2249                           
  2250                           ;incstack = 0
  2251  0066B4  0EFD               	movlw	253
  2252  0066B6  6EA9               	movwf	4009,c	;volatile
  2253                           
  2254                           ;SanUSB48X.h: 439: EECON1=EEADR & 0B00001011;
  2255  0066B8  50A9               	movf	4009,w,c	;volatile
  2256  0066BA  0B0B               	andlw	11
  2257  0066BC  6EA6               	movwf	4006,c	;volatile
  2258  0066BE                     l376:
  2259  0066BE  66A8               	tstfsz	4008,c	;volatile
  2260  0066C0  D7FE               	goto	l376
  2261                           
  2262                           ;SanUSB48X.h: 441: REGad=R/((EEADR%126)<<4);
  2263  0066C2  C042  F03D         	movff	_R,___lwdiv@dividend
  2264  0066C6  C043  F03E         	movff	_R+1,___lwdiv@dividend+1
  2265  0066CA  0E00               	movlw	0
  2266  0066CC  6E39               	movwf	___awmod@divisor+1,c
  2267  0066CE  0E7E               	movlw	126
  2268  0066D0  6E38               	movwf	___awmod@divisor,c
  2269  0066D2  CFA9 F036          	movff	4009,___awmod@dividend	;volatile
  2270  0066D6  6A37               	clrf	___awmod@dividend+1,c
  2271  0066D8  ECB7  F034         	call	___awmod	;wreg free
  2272  0066DC  3A36               	swapf	?___awmod,f,c
  2273  0066DE  3A37               	swapf	?___awmod+1,f,c
  2274  0066E0  0EF0               	movlw	240
  2275  0066E2  1637               	andwf	?___awmod+1,f,c
  2276  0066E4  5036               	movf	?___awmod,w,c
  2277  0066E6  0B0F               	andlw	15
  2278  0066E8  1237               	iorwf	?___awmod+1,f,c
  2279  0066EA  0EF0               	movlw	240
  2280  0066EC  1636               	andwf	?___awmod,f,c
  2281  0066EE  C036  F03F         	movff	?___awmod,___lwdiv@divisor
  2282  0066F2  C037  F040         	movff	?___awmod+1,___lwdiv@divisor+1
  2283  0066F6  EC39  F034         	call	___lwdiv	;wreg free
  2284  0066FA  503D               	movf	?___lwdiv,w,c
  2285  0066FC  6E47               	movwf	_REGad,c
  2286                           
  2287                           ;SanUSB48X.h: 442: REG=le_eeprom(REGad);
  2288  0066FE  5047               	movf	_REGad,w,c
  2289  006700  EC59  F032         	call	_le_eeprom
  2290  006704  6E46               	movwf	_REG,c
  2291  006706  0012               	return	
  2292  006708                     __end_of_clock_int_48MHz:
  2293                           	opt stack 0
  2294                           tblptru	equ	0xFF8
  2295                           tblptrh	equ	0xFF7
  2296                           tblptrl	equ	0xFF6
  2297                           tablat	equ	0xFF5
  2298                           prodh	equ	0xFF4
  2299                           prodl	equ	0xFF3
  2300                           intcon	equ	0xFF2
  2301                           intcon2	equ	0xFF1
  2302                           intcon3	equ	0xFF0
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           postdec1	equ	0xFE5
  2306                           fsr1l	equ	0xFE1
  2307                           status	equ	0xFD8
  2308                           
  2309 ;; *************** function ___lwdiv *****************
  2310 ;; Defined at:
  2311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  dividend        2   27[COMRAM] unsigned int 
  2314 ;;  divisor         2   29[COMRAM] unsigned int 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  quotient        2    1[BANK0 ] unsigned int 
  2317 ;;  counter         1    0[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  2   27[COMRAM] unsigned int 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         4       0       0       0       0       0       0       0       0
  2328 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2330 ;;      Totals:         5       3       0       0       0       0       0       0       0
  2331 ;;Total ram usage:        8 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    2
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_clock_int_48MHz
  2338 ;;		_sendnum
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text9
  2343  006872                     __ptext9:
  2344                           	opt stack 0
  2345  006872                     ___lwdiv:
  2346                           	opt stack 27
  2347                           
  2348                           ;incstack = 0
  2349  006872  0E00               	movlw	0
  2350  006874  0100               	movlb	0	; () banked
  2351  006876  0100               	movlb	0	; () banked
  2352  006878  6FA6               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2353  00687A  0E00               	movlw	0
  2354  00687C  0100               	movlb	0	; () banked
  2355  00687E  6FA5               	movwf	___lwdiv@quotient& (0+255),b
  2356                           
  2357                           ; BSR set to: 0
  2358  006880  5040               	movf	___lwdiv@divisor+1,w,c
  2359  006882  103F               	iorwf	___lwdiv@divisor,w,c
  2360  006884  B4D8               	btfsc	status,2,c
  2361  006886  D029               	goto	l1145
  2362                           
  2363                           ; BSR set to: 0
  2364  006888  6E41               	movwf	??___lwdiv& (0+255),c
  2365  00688A  0E01               	movlw	1
  2366  00688C  0100               	movlb	0	; () banked
  2367  00688E  0100               	movlb	0	; () banked
  2368  006890  6FA4               	movwf	___lwdiv@counter& (0+255),b
  2369  006892  5041               	movf	??___lwdiv& (0+255),w,c
  2370  006894  D006               	goto	l4169
  2371  006896                     l4167:
  2372                           
  2373                           ; BSR set to: 0
  2374  006896  90D8               	bcf	status,0,c
  2375  006898  363F               	rlcf	___lwdiv@divisor,f,c
  2376  00689A  3640               	rlcf	___lwdiv@divisor+1,f,c
  2377  00689C  0100               	movlb	0	; () banked
  2378  00689E  0100               	movlb	0	; () banked
  2379  0068A0  2BA4               	incf	___lwdiv@counter& (0+255),f,b
  2380  0068A2                     l4169:
  2381                           
  2382                           ; BSR set to: 0
  2383  0068A2  AE40               	btfss	___lwdiv@divisor+1,7,c
  2384  0068A4  D7F8               	goto	l4167
  2385  0068A6                     l4171:
  2386                           
  2387                           ; BSR set to: 0
  2388  0068A6  0100               	movlb	0	; () banked
  2389  0068A8  0100               	movlb	0	; () banked
  2390  0068AA  0100               	movlb	0	; () banked
  2391  0068AC  90D8               	bcf	status,0,c
  2392  0068AE  37A5               	rlcf	___lwdiv@quotient& (0+255),f,b
  2393  0068B0  37A6               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2394                           
  2395                           ; BSR set to: 0
  2396  0068B2  503F               	movf	___lwdiv@divisor,w,c
  2397  0068B4  5C3D               	subwf	___lwdiv@dividend,w,c
  2398  0068B6  5040               	movf	___lwdiv@divisor+1,w,c
  2399  0068B8  583E               	subwfb	___lwdiv@dividend+1,w,c
  2400  0068BA  A0D8               	btfss	status,0,c
  2401  0068BC  D007               	goto	l4179
  2402                           
  2403                           ; BSR set to: 0
  2404  0068BE  503F               	movf	___lwdiv@divisor,w,c
  2405  0068C0  5E3D               	subwf	___lwdiv@dividend,f,c
  2406  0068C2  5040               	movf	___lwdiv@divisor+1,w,c
  2407  0068C4  5A3E               	subwfb	___lwdiv@dividend+1,f,c
  2408                           
  2409                           ; BSR set to: 0
  2410  0068C6  0100               	movlb	0	; () banked
  2411  0068C8  0100               	movlb	0	; () banked
  2412  0068CA  81A5               	bsf	___lwdiv@quotient& (0+255),0,b
  2413  0068CC                     l4179:
  2414                           
  2415                           ; BSR set to: 0
  2416  0068CC  90D8               	bcf	status,0,c
  2417  0068CE  3240               	rrcf	___lwdiv@divisor+1,f,c
  2418  0068D0  323F               	rrcf	___lwdiv@divisor,f,c
  2419                           
  2420                           ; BSR set to: 0
  2421  0068D2  0100               	movlb	0	; () banked
  2422  0068D4  0100               	movlb	0	; () banked
  2423  0068D6  2FA4               	decfsz	___lwdiv@counter& (0+255),f,b
  2424  0068D8  D7E6               	goto	l4171
  2425  0068DA                     l1145:
  2426                           
  2427                           ; BSR set to: 0
  2428  0068DA  C0A5  F03D         	movff	___lwdiv@quotient,?___lwdiv
  2429  0068DE  C0A6  F03E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2430                           
  2431                           ; BSR set to: 0
  2432  0068E2  0012               	return	
  2433  0068E4                     __end_of___lwdiv:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           intcon2	equ	0xFF1
  2443                           intcon3	equ	0xFF0
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec1	equ	0xFE5
  2447                           fsr1l	equ	0xFE1
  2448                           status	equ	0xFD8
  2449                           
  2450 ;; *************** function ___awmod *****************
  2451 ;; Defined at:
  2452 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  dividend        2   20[COMRAM] int 
  2455 ;;  divisor         2   22[COMRAM] int 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  sign            1   26[COMRAM] unsigned char 
  2458 ;;  counter         1   25[COMRAM] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2   20[COMRAM] int 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0, prodl
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2468 ;;      Params:         4       0       0       0       0       0       0       0       0
  2469 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2470 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2471 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2472 ;;Total ram usage:        7 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    2
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_clock_int_48MHz
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text10
  2483  00696E                     __ptext10:
  2484                           	opt stack 0
  2485  00696E                     ___awmod:
  2486                           	opt stack 27
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;incstack = 0
  2490  00696E  6E3A               	movwf	??___awmod& (0+255),c
  2491  006970  0E00               	movlw	0
  2492  006972  6E3C               	movwf	___awmod@sign,c
  2493  006974  503A               	movf	??___awmod& (0+255),w,c
  2494  006976  5037               	movf	___awmod@dividend+1,w,c
  2495  006978  0A80               	xorlw	128
  2496  00697A  6EF3               	movwf	prodl,c
  2497  00697C  0E80               	movlw	128
  2498  00697E  5CF3               	subwf	prodl,w,c
  2499  006980  0E00               	movlw	0
  2500  006982  B4D8               	btfsc	status,2,c
  2501  006984  5C36               	subwf	___awmod@dividend,w,c
  2502  006986  B0D8               	btfsc	status,0,c
  2503  006988  D008               	goto	l3011
  2504  00698A  6C36               	negf	___awmod@dividend,c
  2505  00698C  1E37               	comf	___awmod@dividend+1,f,c
  2506  00698E  B0D8               	btfsc	status,0,c
  2507  006990  2A37               	incf	___awmod@dividend+1,f,c
  2508  006992  6E3A               	movwf	??___awmod& (0+255),c
  2509  006994  0E01               	movlw	1
  2510  006996  6E3C               	movwf	___awmod@sign,c
  2511  006998  503A               	movf	??___awmod& (0+255),w,c
  2512  00699A                     l3011:
  2513  00699A  5039               	movf	___awmod@divisor+1,w,c
  2514  00699C  0A80               	xorlw	128
  2515  00699E  6EF3               	movwf	prodl,c
  2516  0069A0  0E80               	movlw	128
  2517  0069A2  5CF3               	subwf	prodl,w,c
  2518  0069A4  0E00               	movlw	0
  2519  0069A6  B4D8               	btfsc	status,2,c
  2520  0069A8  5C38               	subwf	___awmod@divisor,w,c
  2521  0069AA  B0D8               	btfsc	status,0,c
  2522  0069AC  D004               	goto	l3015
  2523  0069AE  6C38               	negf	___awmod@divisor,c
  2524  0069B0  1E39               	comf	___awmod@divisor+1,f,c
  2525  0069B2  B0D8               	btfsc	status,0,c
  2526  0069B4  2A39               	incf	___awmod@divisor+1,f,c
  2527  0069B6                     l3015:
  2528  0069B6  5039               	movf	___awmod@divisor+1,w,c
  2529  0069B8  1038               	iorwf	___awmod@divisor,w,c
  2530  0069BA  B4D8               	btfsc	status,2,c
  2531  0069BC  D01A               	goto	l3031
  2532  0069BE  6E3A               	movwf	??___awmod& (0+255),c
  2533  0069C0  0E01               	movlw	1
  2534  0069C2  6E3B               	movwf	___awmod@counter,c
  2535  0069C4  503A               	movf	??___awmod& (0+255),w,c
  2536  0069C6  D004               	goto	l3021
  2537  0069C8                     l3019:
  2538  0069C8  90D8               	bcf	status,0,c
  2539  0069CA  3638               	rlcf	___awmod@divisor,f,c
  2540  0069CC  3639               	rlcf	___awmod@divisor+1,f,c
  2541  0069CE  2A3B               	incf	___awmod@counter,f,c
  2542  0069D0                     l3021:
  2543  0069D0  AE39               	btfss	___awmod@divisor+1,7,c
  2544  0069D2  D7FA               	goto	l3019
  2545  0069D4                     l3023:
  2546  0069D4  5038               	movf	___awmod@divisor,w,c
  2547  0069D6  5C36               	subwf	___awmod@dividend,w,c
  2548  0069D8  5039               	movf	___awmod@divisor+1,w,c
  2549  0069DA  5837               	subwfb	___awmod@dividend+1,w,c
  2550  0069DC  A0D8               	btfss	status,0,c
  2551  0069DE  D004               	goto	l3027
  2552  0069E0  5038               	movf	___awmod@divisor,w,c
  2553  0069E2  5E36               	subwf	___awmod@dividend,f,c
  2554  0069E4  5039               	movf	___awmod@divisor+1,w,c
  2555  0069E6  5A37               	subwfb	___awmod@dividend+1,f,c
  2556  0069E8                     l3027:
  2557  0069E8  90D8               	bcf	status,0,c
  2558  0069EA  3239               	rrcf	___awmod@divisor+1,f,c
  2559  0069EC  3238               	rrcf	___awmod@divisor,f,c
  2560  0069EE  2E3B               	decfsz	___awmod@counter,f,c
  2561  0069F0  D7F1               	goto	l3023
  2562  0069F2                     l3031:
  2563  0069F2  503C               	movf	___awmod@sign,w,c
  2564  0069F4  B4D8               	btfsc	status,2,c
  2565  0069F6  D004               	goto	l3035
  2566  0069F8  6C36               	negf	___awmod@dividend,c
  2567  0069FA  1E37               	comf	___awmod@dividend+1,f,c
  2568  0069FC  B0D8               	btfsc	status,0,c
  2569  0069FE  2A37               	incf	___awmod@dividend+1,f,c
  2570  006A00                     l3035:
  2571  006A00  C036  F036         	movff	___awmod@dividend,?___awmod
  2572  006A04  C037  F037         	movff	___awmod@dividend+1,?___awmod+1
  2573  006A08  0012               	return	
  2574  006A0A                     __end_of___awmod:
  2575                           	opt stack 0
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           prodh	equ	0xFF4
  2581                           prodl	equ	0xFF3
  2582                           intcon	equ	0xFF2
  2583                           intcon2	equ	0xFF1
  2584                           intcon3	equ	0xFF0
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           postdec1	equ	0xFE5
  2588                           fsr1l	equ	0xFE1
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _bt_ini *****************
  2592 ;; Defined at:
  2593 ;;		line 80 in file "bt_usb.h"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;		None               void
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2609 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2610 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    7
  2614 ;; This function calls:
  2615 ;;		_configBR6
  2616 ;;		_escreve_eeprom
  2617 ;;		_inverte_saida
  2618 ;;		_le_eeprom
  2619 ;;		_sendr
  2620 ;;		_sputc
  2621 ;;		_tempo_ms
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text11
  2628  007862                     __ptext11:
  2629                           	opt stack 0
  2630  007862                     _bt_ini:
  2631                           	opt stack 23
  2632                           
  2633                           ;bt_usb.h: 82: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0){
  2634                           
  2635                           ;incstack = 0
  2636  007862  0E21               	movlw	33
  2637  007864  EC59  F032         	call	_le_eeprom
  2638  007868  0900               	iorlw	0
  2639  00786A  B4D8               	btfsc	status,2,c
  2640  00786C  D1A7               	goto	l3317
  2641  00786E  0E22               	movlw	34
  2642  007870  EC59  F032         	call	_le_eeprom
  2643  007874  0900               	iorlw	0
  2644  007876  B4D8               	btfsc	status,2,c
  2645  007878  D1A1               	goto	l3317
  2646  00787A  0E23               	movlw	35
  2647  00787C  EC59  F032         	call	_le_eeprom
  2648  007880  0900               	iorlw	0
  2649  007882  B4D8               	btfsc	status,2,c
  2650  007884  D19B               	goto	l3317
  2651                           
  2652                           ;bt_usb.h: 83: SPBRGH = 0x04; SPBRG=0xE1; tempo_ms(10);
  2653  007886  0E04               	movlw	4
  2654  007888  6EB0               	movwf	4016,c	;volatile
  2655  00788A  0EE1               	movlw	225
  2656  00788C  6EAF               	movwf	4015,c	;volatile
  2657  00788E  0E00               	movlw	0
  2658  007890  6E3D               	movwf	tempo_ms@i+1,c
  2659  007892  0E0A               	movlw	10
  2660  007894  6E3C               	movwf	tempo_ms@i,c
  2661  007896  EC36  F033         	call	_tempo_ms	;wreg free
  2662                           
  2663                           ;bt_usb.h: 84: sendr((char *)icp);tempo_ms(200);
  2664  00789A  0E7F               	movlw	high _icp
  2665  00789C  6E3A               	movwf	sendr@st+1,c
  2666  00789E  0E43               	movlw	low _icp
  2667  0078A0  6E39               	movwf	sendr@st,c
  2668  0078A2  EC84  F033         	call	_sendr	;wreg free
  2669  0078A6  0E00               	movlw	0
  2670  0078A8  6E3D               	movwf	tempo_ms@i+1,c
  2671  0078AA  0EC8               	movlw	200
  2672  0078AC  6E3C               	movwf	tempo_ms@i,c
  2673  0078AE  EC36  F033         	call	_tempo_ms	;wreg free
  2674                           
  2675                           ;bt_usb.h: 85: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  2676  0078B2  0409               	decf	_flagb,w,c
  2677  0078B4  100A               	iorwf	_flagb+1,w,c
  2678  0078B6  A4D8               	btfss	status,2,c
  2679  0078B8  D06F               	goto	l3217
  2680  0078BA  6E40               	movwf	??_bt_ini& (0+255),c
  2681  0078BC  0E00               	movlw	0
  2682  0078BE  6E36               	movwf	escreve_eeprom@dado,c
  2683  0078C0  5040               	movf	??_bt_ini& (0+255),w,c
  2684  0078C2  0E23               	movlw	35
  2685  0078C4  EC72  F032         	call	_escreve_eeprom
  2686  0078C8  0E7C               	movlw	124
  2687  0078CA  6E37               	movwf	inverte_saida@pino+1,c
  2688  0078CC  0E0F               	movlw	15
  2689  0078CE  6E36               	movwf	inverte_saida@pino,c
  2690  0078D0  EC7F  F036         	call	_inverte_saida	;wreg free
  2691                           
  2692                           ;bt_usb.h: 86: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  2693  0078D4  0E7F               	movlw	high _icb
  2694  0078D6  6E3A               	movwf	sendr@st+1,c
  2695  0078D8  0E23               	movlw	low _icb
  2696  0078DA  6E39               	movwf	sendr@st,c
  2697  0078DC  EC84  F033         	call	_sendr	;wreg free
  2698  0078E0  0E00               	movlw	0
  2699  0078E2  6E3D               	movwf	tempo_ms@i+1,c
  2700  0078E4  0E64               	movlw	100
  2701  0078E6  6E3C               	movwf	tempo_ms@i,c
  2702  0078E8  EC36  F033         	call	_tempo_ms	;wreg free
  2703  0078EC  0E7C               	movlw	124
  2704  0078EE  6E37               	movwf	inverte_saida@pino+1,c
  2705  0078F0  0E0F               	movlw	15
  2706  0078F2  6E36               	movwf	inverte_saida@pino,c
  2707  0078F4  EC7F  F036         	call	_inverte_saida	;wreg free
  2708                           
  2709                           ;bt_usb.h: 87: tempo_ms(100);inverte_saida(31759);
  2710  0078F8  0E00               	movlw	0
  2711  0078FA  6E3D               	movwf	tempo_ms@i+1,c
  2712  0078FC  0E64               	movlw	100
  2713  0078FE  6E3C               	movwf	tempo_ms@i,c
  2714  007900  EC36  F033         	call	_tempo_ms	;wreg free
  2715  007904  0E7C               	movlw	124
  2716  007906  6E37               	movwf	inverte_saida@pino+1,c
  2717  007908  0E0F               	movlw	15
  2718  00790A  6E36               	movwf	inverte_saida@pino,c
  2719  00790C  EC7F  F036         	call	_inverte_saida	;wreg free
  2720                           
  2721                           ;bt_usb.h: 88: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  2722  007910  0E7E               	movlw	high _icn
  2723  007912  6E3A               	movwf	sendr@st+1,c
  2724  007914  0EF8               	movlw	low _icn
  2725  007916  6E39               	movwf	sendr@st,c
  2726  007918  EC84  F033         	call	_sendr	;wreg free
  2727  00791C  0E00               	movlw	0
  2728  00791E  6E3D               	movwf	tempo_ms@i+1,c
  2729  007920  0E64               	movlw	100
  2730  007922  6E3C               	movwf	tempo_ms@i,c
  2731  007924  EC36  F033         	call	_tempo_ms	;wreg free
  2732  007928  0E7C               	movlw	124
  2733  00792A  6E37               	movwf	inverte_saida@pino+1,c
  2734  00792C  0E0F               	movlw	15
  2735  00792E  6E36               	movwf	inverte_saida@pino,c
  2736  007930  EC7F  F036         	call	_inverte_saida	;wreg free
  2737                           
  2738                           ;bt_usb.h: 89: tempo_ms(100);inverte_saida(31759);
  2739  007934  0E00               	movlw	0
  2740  007936  6E3D               	movwf	tempo_ms@i+1,c
  2741  007938  0E64               	movlw	100
  2742  00793A  6E3C               	movwf	tempo_ms@i,c
  2743  00793C  EC36  F033         	call	_tempo_ms	;wreg free
  2744  007940  0E7C               	movlw	124
  2745  007942  6E37               	movwf	inverte_saida@pino+1,c
  2746  007944  0E0F               	movlw	15
  2747  007946  6E36               	movwf	inverte_saida@pino,c
  2748  007948  EC7F  F036         	call	_inverte_saida	;wreg free
  2749                           
  2750                           ;bt_usb.h: 90: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  2751  00794C  0E7F               	movlw	high _icr
  2752  00794E  6E3A               	movwf	sendr@st+1,c
  2753  007950  0E35               	movlw	low _icr
  2754  007952  6E39               	movwf	sendr@st,c
  2755  007954  EC84  F033         	call	_sendr	;wreg free
  2756  007958  0E00               	movlw	0
  2757  00795A  6E3D               	movwf	tempo_ms@i+1,c
  2758  00795C  0E64               	movlw	100
  2759  00795E  6E3C               	movwf	tempo_ms@i,c
  2760  007960  EC36  F033         	call	_tempo_ms	;wreg free
  2761  007964  0E7C               	movlw	124
  2762  007966  6E37               	movwf	inverte_saida@pino+1,c
  2763  007968  0E0F               	movlw	15
  2764  00796A  6E36               	movwf	inverte_saida@pino,c
  2765  00796C  EC7F  F036         	call	_inverte_saida	;wreg free
  2766                           
  2767                           ;bt_usb.h: 91: tempo_ms(100);inverte_saida(31759);
  2768  007970  0E00               	movlw	0
  2769  007972  6E3D               	movwf	tempo_ms@i+1,c
  2770  007974  0E64               	movlw	100
  2771  007976  6E3C               	movwf	tempo_ms@i,c
  2772  007978  EC36  F033         	call	_tempo_ms	;wreg free
  2773  00797C  0E7C               	movlw	124
  2774  00797E  6E37               	movwf	inverte_saida@pino+1,c
  2775  007980  0E0F               	movlw	15
  2776  007982  6E36               	movwf	inverte_saida@pino,c
  2777  007984  EC7F  F036         	call	_inverte_saida	;wreg free
  2778                           
  2779                           ;bt_usb.h: 92: flagc=1;flagb=0; }
  2780  007988  0E00               	movlw	0
  2781  00798A  6E0C               	movwf	_flagc+1,c
  2782  00798C  0E01               	movlw	1
  2783  00798E  6E0B               	movwf	_flagc,c
  2784  007990  0E00               	movlw	0
  2785  007992  6E0A               	movwf	_flagb+1,c
  2786  007994  0E00               	movlw	0
  2787  007996  6E09               	movwf	_flagb,c
  2788  007998                     l3217:
  2789                           
  2790                           ;bt_usb.h: 93: SPBRGH = 0x09; SPBRG=0xC3; tempo_ms(10);
  2791  007998  0E09               	movlw	9
  2792  00799A  6EB0               	movwf	4016,c	;volatile
  2793  00799C  0EC3               	movlw	195
  2794  00799E  6EAF               	movwf	4015,c	;volatile
  2795  0079A0  0E00               	movlw	0
  2796  0079A2  6E3D               	movwf	tempo_ms@i+1,c
  2797  0079A4  0E0A               	movlw	10
  2798  0079A6  6E3C               	movwf	tempo_ms@i,c
  2799  0079A8  EC36  F033         	call	_tempo_ms	;wreg free
  2800                           
  2801                           ;bt_usb.h: 94: sendr((char *)icp);tempo_ms(200);
  2802  0079AC  0E7F               	movlw	high _icp
  2803  0079AE  6E3A               	movwf	sendr@st+1,c
  2804  0079B0  0E43               	movlw	low _icp
  2805  0079B2  6E39               	movwf	sendr@st,c
  2806  0079B4  EC84  F033         	call	_sendr	;wreg free
  2807  0079B8  0E00               	movlw	0
  2808  0079BA  6E3D               	movwf	tempo_ms@i+1,c
  2809  0079BC  0EC8               	movlw	200
  2810  0079BE  6E3C               	movwf	tempo_ms@i,c
  2811  0079C0  EC36  F033         	call	_tempo_ms	;wreg free
  2812                           
  2813                           ;bt_usb.h: 95: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  2814  0079C4  0409               	decf	_flagb,w,c
  2815  0079C6  100A               	iorwf	_flagb+1,w,c
  2816  0079C8  A4D8               	btfss	status,2,c
  2817  0079CA  D06F               	goto	l3267
  2818  0079CC  6E40               	movwf	??_bt_ini& (0+255),c
  2819  0079CE  0E00               	movlw	0
  2820  0079D0  6E36               	movwf	escreve_eeprom@dado,c
  2821  0079D2  5040               	movf	??_bt_ini& (0+255),w,c
  2822  0079D4  0E23               	movlw	35
  2823  0079D6  EC72  F032         	call	_escreve_eeprom
  2824  0079DA  0E7C               	movlw	124
  2825  0079DC  6E37               	movwf	inverte_saida@pino+1,c
  2826  0079DE  0E0F               	movlw	15
  2827  0079E0  6E36               	movwf	inverte_saida@pino,c
  2828  0079E2  EC7F  F036         	call	_inverte_saida	;wreg free
  2829                           
  2830                           ;bt_usb.h: 96: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  2831  0079E6  0E7F               	movlw	high _icb
  2832  0079E8  6E3A               	movwf	sendr@st+1,c
  2833  0079EA  0E23               	movlw	low _icb
  2834  0079EC  6E39               	movwf	sendr@st,c
  2835  0079EE  EC84  F033         	call	_sendr	;wreg free
  2836  0079F2  0E00               	movlw	0
  2837  0079F4  6E3D               	movwf	tempo_ms@i+1,c
  2838  0079F6  0E64               	movlw	100
  2839  0079F8  6E3C               	movwf	tempo_ms@i,c
  2840  0079FA  EC36  F033         	call	_tempo_ms	;wreg free
  2841  0079FE  0E7C               	movlw	124
  2842  007A00  6E37               	movwf	inverte_saida@pino+1,c
  2843  007A02  0E0F               	movlw	15
  2844  007A04  6E36               	movwf	inverte_saida@pino,c
  2845  007A06  EC7F  F036         	call	_inverte_saida	;wreg free
  2846                           
  2847                           ;bt_usb.h: 97: tempo_ms(100);inverte_saida(31759);
  2848  007A0A  0E00               	movlw	0
  2849  007A0C  6E3D               	movwf	tempo_ms@i+1,c
  2850  007A0E  0E64               	movlw	100
  2851  007A10  6E3C               	movwf	tempo_ms@i,c
  2852  007A12  EC36  F033         	call	_tempo_ms	;wreg free
  2853  007A16  0E7C               	movlw	124
  2854  007A18  6E37               	movwf	inverte_saida@pino+1,c
  2855  007A1A  0E0F               	movlw	15
  2856  007A1C  6E36               	movwf	inverte_saida@pino,c
  2857  007A1E  EC7F  F036         	call	_inverte_saida	;wreg free
  2858                           
  2859                           ;bt_usb.h: 98: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  2860  007A22  0E7E               	movlw	high _icn
  2861  007A24  6E3A               	movwf	sendr@st+1,c
  2862  007A26  0EF8               	movlw	low _icn
  2863  007A28  6E39               	movwf	sendr@st,c
  2864  007A2A  EC84  F033         	call	_sendr	;wreg free
  2865  007A2E  0E00               	movlw	0
  2866  007A30  6E3D               	movwf	tempo_ms@i+1,c
  2867  007A32  0E64               	movlw	100
  2868  007A34  6E3C               	movwf	tempo_ms@i,c
  2869  007A36  EC36  F033         	call	_tempo_ms	;wreg free
  2870  007A3A  0E7C               	movlw	124
  2871  007A3C  6E37               	movwf	inverte_saida@pino+1,c
  2872  007A3E  0E0F               	movlw	15
  2873  007A40  6E36               	movwf	inverte_saida@pino,c
  2874  007A42  EC7F  F036         	call	_inverte_saida	;wreg free
  2875                           
  2876                           ;bt_usb.h: 99: tempo_ms(100);inverte_saida(31759);
  2877  007A46  0E00               	movlw	0
  2878  007A48  6E3D               	movwf	tempo_ms@i+1,c
  2879  007A4A  0E64               	movlw	100
  2880  007A4C  6E3C               	movwf	tempo_ms@i,c
  2881  007A4E  EC36  F033         	call	_tempo_ms	;wreg free
  2882  007A52  0E7C               	movlw	124
  2883  007A54  6E37               	movwf	inverte_saida@pino+1,c
  2884  007A56  0E0F               	movlw	15
  2885  007A58  6E36               	movwf	inverte_saida@pino,c
  2886  007A5A  EC7F  F036         	call	_inverte_saida	;wreg free
  2887                           
  2888                           ;bt_usb.h: 100: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  2889  007A5E  0E7F               	movlw	high _icr
  2890  007A60  6E3A               	movwf	sendr@st+1,c
  2891  007A62  0E35               	movlw	low _icr
  2892  007A64  6E39               	movwf	sendr@st,c
  2893  007A66  EC84  F033         	call	_sendr	;wreg free
  2894  007A6A  0E00               	movlw	0
  2895  007A6C  6E3D               	movwf	tempo_ms@i+1,c
  2896  007A6E  0E64               	movlw	100
  2897  007A70  6E3C               	movwf	tempo_ms@i,c
  2898  007A72  EC36  F033         	call	_tempo_ms	;wreg free
  2899  007A76  0E7C               	movlw	124
  2900  007A78  6E37               	movwf	inverte_saida@pino+1,c
  2901  007A7A  0E0F               	movlw	15
  2902  007A7C  6E36               	movwf	inverte_saida@pino,c
  2903  007A7E  EC7F  F036         	call	_inverte_saida	;wreg free
  2904                           
  2905                           ;bt_usb.h: 101: tempo_ms(100);inverte_saida(31759);
  2906  007A82  0E00               	movlw	0
  2907  007A84  6E3D               	movwf	tempo_ms@i+1,c
  2908  007A86  0E64               	movlw	100
  2909  007A88  6E3C               	movwf	tempo_ms@i,c
  2910  007A8A  EC36  F033         	call	_tempo_ms	;wreg free
  2911  007A8E  0E7C               	movlw	124
  2912  007A90  6E37               	movwf	inverte_saida@pino+1,c
  2913  007A92  0E0F               	movlw	15
  2914  007A94  6E36               	movwf	inverte_saida@pino,c
  2915  007A96  EC7F  F036         	call	_inverte_saida	;wreg free
  2916                           
  2917                           ;bt_usb.h: 102: flagc=1;flagb=0; }
  2918  007A9A  0E00               	movlw	0
  2919  007A9C  6E0C               	movwf	_flagc+1,c
  2920  007A9E  0E01               	movlw	1
  2921  007AA0  6E0B               	movwf	_flagc,c
  2922  007AA2  0E00               	movlw	0
  2923  007AA4  6E0A               	movwf	_flagb+1,c
  2924  007AA6  0E00               	movlw	0
  2925  007AA8  6E09               	movwf	_flagb,c
  2926  007AAA                     l3267:
  2927                           
  2928                           ;bt_usb.h: 103: SPBRGH = 0x02; SPBRG=0x70; tempo_ms(10);
  2929  007AAA  0E02               	movlw	2
  2930  007AAC  6EB0               	movwf	4016,c	;volatile
  2931  007AAE  0E70               	movlw	112
  2932  007AB0  6EAF               	movwf	4015,c	;volatile
  2933  007AB2  0E00               	movlw	0
  2934  007AB4  6E3D               	movwf	tempo_ms@i+1,c
  2935  007AB6  0E0A               	movlw	10
  2936  007AB8  6E3C               	movwf	tempo_ms@i,c
  2937  007ABA  EC36  F033         	call	_tempo_ms	;wreg free
  2938                           
  2939                           ;bt_usb.h: 104: sendr((char *)icp);tempo_ms(200);
  2940  007ABE  0E7F               	movlw	high _icp
  2941  007AC0  6E3A               	movwf	sendr@st+1,c
  2942  007AC2  0E43               	movlw	low _icp
  2943  007AC4  6E39               	movwf	sendr@st,c
  2944  007AC6  EC84  F033         	call	_sendr	;wreg free
  2945  007ACA  0E00               	movlw	0
  2946  007ACC  6E3D               	movwf	tempo_ms@i+1,c
  2947  007ACE  0EC8               	movlw	200
  2948  007AD0  6E3C               	movwf	tempo_ms@i,c
  2949  007AD2  EC36  F033         	call	_tempo_ms	;wreg free
  2950                           
  2951                           ;bt_usb.h: 105: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  2952  007AD6  0409               	decf	_flagb,w,c
  2953  007AD8  100A               	iorwf	_flagb+1,w,c
  2954  007ADA  A4D8               	btfss	status,2,c
  2955  007ADC  D06F               	goto	l3317
  2956  007ADE  6E40               	movwf	??_bt_ini& (0+255),c
  2957  007AE0  0E00               	movlw	0
  2958  007AE2  6E36               	movwf	escreve_eeprom@dado,c
  2959  007AE4  5040               	movf	??_bt_ini& (0+255),w,c
  2960  007AE6  0E23               	movlw	35
  2961  007AE8  EC72  F032         	call	_escreve_eeprom
  2962  007AEC  0E7C               	movlw	124
  2963  007AEE  6E37               	movwf	inverte_saida@pino+1,c
  2964  007AF0  0E0F               	movlw	15
  2965  007AF2  6E36               	movwf	inverte_saida@pino,c
  2966  007AF4  EC7F  F036         	call	_inverte_saida	;wreg free
  2967                           
  2968                           ;bt_usb.h: 106: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  2969  007AF8  0E7F               	movlw	high _icb
  2970  007AFA  6E3A               	movwf	sendr@st+1,c
  2971  007AFC  0E23               	movlw	low _icb
  2972  007AFE  6E39               	movwf	sendr@st,c
  2973  007B00  EC84  F033         	call	_sendr	;wreg free
  2974  007B04  0E00               	movlw	0
  2975  007B06  6E3D               	movwf	tempo_ms@i+1,c
  2976  007B08  0E64               	movlw	100
  2977  007B0A  6E3C               	movwf	tempo_ms@i,c
  2978  007B0C  EC36  F033         	call	_tempo_ms	;wreg free
  2979  007B10  0E7C               	movlw	124
  2980  007B12  6E37               	movwf	inverte_saida@pino+1,c
  2981  007B14  0E0F               	movlw	15
  2982  007B16  6E36               	movwf	inverte_saida@pino,c
  2983  007B18  EC7F  F036         	call	_inverte_saida	;wreg free
  2984                           
  2985                           ;bt_usb.h: 107: tempo_ms(100);inverte_saida(31759);
  2986  007B1C  0E00               	movlw	0
  2987  007B1E  6E3D               	movwf	tempo_ms@i+1,c
  2988  007B20  0E64               	movlw	100
  2989  007B22  6E3C               	movwf	tempo_ms@i,c
  2990  007B24  EC36  F033         	call	_tempo_ms	;wreg free
  2991  007B28  0E7C               	movlw	124
  2992  007B2A  6E37               	movwf	inverte_saida@pino+1,c
  2993  007B2C  0E0F               	movlw	15
  2994  007B2E  6E36               	movwf	inverte_saida@pino,c
  2995  007B30  EC7F  F036         	call	_inverte_saida	;wreg free
  2996                           
  2997                           ;bt_usb.h: 108: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  2998  007B34  0E7E               	movlw	high _icn
  2999  007B36  6E3A               	movwf	sendr@st+1,c
  3000  007B38  0EF8               	movlw	low _icn
  3001  007B3A  6E39               	movwf	sendr@st,c
  3002  007B3C  EC84  F033         	call	_sendr	;wreg free
  3003  007B40  0E00               	movlw	0
  3004  007B42  6E3D               	movwf	tempo_ms@i+1,c
  3005  007B44  0E64               	movlw	100
  3006  007B46  6E3C               	movwf	tempo_ms@i,c
  3007  007B48  EC36  F033         	call	_tempo_ms	;wreg free
  3008  007B4C  0E7C               	movlw	124
  3009  007B4E  6E37               	movwf	inverte_saida@pino+1,c
  3010  007B50  0E0F               	movlw	15
  3011  007B52  6E36               	movwf	inverte_saida@pino,c
  3012  007B54  EC7F  F036         	call	_inverte_saida	;wreg free
  3013                           
  3014                           ;bt_usb.h: 109: tempo_ms(100);inverte_saida(31759);
  3015  007B58  0E00               	movlw	0
  3016  007B5A  6E3D               	movwf	tempo_ms@i+1,c
  3017  007B5C  0E64               	movlw	100
  3018  007B5E  6E3C               	movwf	tempo_ms@i,c
  3019  007B60  EC36  F033         	call	_tempo_ms	;wreg free
  3020  007B64  0E7C               	movlw	124
  3021  007B66  6E37               	movwf	inverte_saida@pino+1,c
  3022  007B68  0E0F               	movlw	15
  3023  007B6A  6E36               	movwf	inverte_saida@pino,c
  3024  007B6C  EC7F  F036         	call	_inverte_saida	;wreg free
  3025                           
  3026                           ;bt_usb.h: 110: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  3027  007B70  0E7F               	movlw	high _icr
  3028  007B72  6E3A               	movwf	sendr@st+1,c
  3029  007B74  0E35               	movlw	low _icr
  3030  007B76  6E39               	movwf	sendr@st,c
  3031  007B78  EC84  F033         	call	_sendr	;wreg free
  3032  007B7C  0E00               	movlw	0
  3033  007B7E  6E3D               	movwf	tempo_ms@i+1,c
  3034  007B80  0E64               	movlw	100
  3035  007B82  6E3C               	movwf	tempo_ms@i,c
  3036  007B84  EC36  F033         	call	_tempo_ms	;wreg free
  3037  007B88  0E7C               	movlw	124
  3038  007B8A  6E37               	movwf	inverte_saida@pino+1,c
  3039  007B8C  0E0F               	movlw	15
  3040  007B8E  6E36               	movwf	inverte_saida@pino,c
  3041  007B90  EC7F  F036         	call	_inverte_saida	;wreg free
  3042                           
  3043                           ;bt_usb.h: 111: tempo_ms(100);inverte_saida(31759);
  3044  007B94  0E00               	movlw	0
  3045  007B96  6E3D               	movwf	tempo_ms@i+1,c
  3046  007B98  0E64               	movlw	100
  3047  007B9A  6E3C               	movwf	tempo_ms@i,c
  3048  007B9C  EC36  F033         	call	_tempo_ms	;wreg free
  3049  007BA0  0E7C               	movlw	124
  3050  007BA2  6E37               	movwf	inverte_saida@pino+1,c
  3051  007BA4  0E0F               	movlw	15
  3052  007BA6  6E36               	movwf	inverte_saida@pino,c
  3053  007BA8  EC7F  F036         	call	_inverte_saida	;wreg free
  3054                           
  3055                           ;bt_usb.h: 112: flagc=1;flagb=0; }
  3056  007BAC  0E00               	movlw	0
  3057  007BAE  6E0C               	movwf	_flagc+1,c
  3058  007BB0  0E01               	movlw	1
  3059  007BB2  6E0B               	movwf	_flagc,c
  3060  007BB4  0E00               	movlw	0
  3061  007BB6  6E0A               	movwf	_flagb+1,c
  3062  007BB8  0E00               	movlw	0
  3063  007BBA  6E09               	movwf	_flagb,c
  3064  007BBC                     l3317:
  3065                           
  3066                           ;bt_usb.h: 113: }
  3067                           ;bt_usb.h: 115: if(le_eeprom(35)==0 ){
  3068  007BBC  0E23               	movlw	35
  3069  007BBE  EC59  F032         	call	_le_eeprom
  3070  007BC2  0900               	iorlw	0
  3071  007BC4  A4D8               	btfss	status,2,c
  3072  007BC6  D02D               	goto	l3333
  3073                           
  3074                           ;bt_usb.h: 116: if(icb[0b00000111]==0b01100000){SPBRGH = 0x04; SPBRG=0xE1;}
  3075  007BC8  0E2A               	movlw	low (_icb+7)
  3076  007BCA  6EF6               	movwf	tblptrl,c
  3077  007BCC  0E7F               	movlw	high (_icb+7)
  3078  007BCE  6EF7               	movwf	tblptrh,c
  3079  007BD0  0008               	tblrd		*
  3080  007BD2  50F5               	movf	tablat,w,c
  3081  007BD4  0A60               	xorlw	96
  3082  007BD6  A4D8               	btfss	status,2,c
  3083  007BD8  D004               	goto	l3323
  3084  007BDA  0E04               	movlw	4
  3085  007BDC  6EB0               	movwf	4016,c	;volatile
  3086  007BDE  0EE1               	movlw	225
  3087  007BE0  6EAF               	movwf	4015,c	;volatile
  3088  007BE2                     l3323:
  3089                           
  3090                           ;bt_usb.h: 117: if(icb[0b00000111]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  3091  007BE2  0E2A               	movlw	low (_icb+7)
  3092  007BE4  6EF6               	movwf	tblptrl,c
  3093  007BE6  0E7F               	movlw	high (_icb+7)
  3094  007BE8  6EF7               	movwf	tblptrh,c
  3095  007BEA  0008               	tblrd		*
  3096  007BEC  50F5               	movf	tablat,w,c
  3097  007BEE  0A62               	xorlw	98
  3098  007BF0  A4D8               	btfss	status,2,c
  3099  007BF2  D004               	goto	l3327
  3100  007BF4  0E02               	movlw	2
  3101  007BF6  6EB0               	movwf	4016,c	;volatile
  3102  007BF8  0E70               	movlw	112
  3103  007BFA  6EAF               	movwf	4015,c	;volatile
  3104  007BFC                     l3327:
  3105                           
  3106                           ;bt_usb.h: 118: if(icb[0b00000111]==0b01101010){SPBRGH = 0x09; SPBRG=0xC3;}
  3107  007BFC  0E2A               	movlw	low (_icb+7)
  3108  007BFE  6EF6               	movwf	tblptrl,c
  3109  007C00  0E7F               	movlw	high (_icb+7)
  3110  007C02  6EF7               	movwf	tblptrh,c
  3111  007C04  0008               	tblrd		*
  3112  007C06  50F5               	movf	tablat,w,c
  3113  007C08  0A6A               	xorlw	106
  3114  007C0A  A4D8               	btfss	status,2,c
  3115  007C0C  D004               	goto	l3331
  3116  007C0E  0E09               	movlw	9
  3117  007C10  6EB0               	movwf	4016,c	;volatile
  3118  007C12  0EC3               	movlw	195
  3119  007C14  6EAF               	movwf	4015,c	;volatile
  3120  007C16                     l3331:
  3121                           
  3122                           ;bt_usb.h: 119: tempo_ms(100);
  3123  007C16  0E00               	movlw	0
  3124  007C18  6E3D               	movwf	tempo_ms@i+1,c
  3125  007C1A  0E64               	movlw	100
  3126  007C1C  6E3C               	movwf	tempo_ms@i,c
  3127  007C1E  EC36  F033         	call	_tempo_ms	;wreg free
  3128  007C22                     l3333:
  3129                           
  3130                           ;bt_usb.h: 120: }
  3131                           ;bt_usb.h: 123: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0){
  3132  007C22  0E21               	movlw	33
  3133  007C24  EC59  F032         	call	_le_eeprom
  3134  007C28  0900               	iorlw	0
  3135  007C2A  B4D8               	btfsc	status,2,c
  3136  007C2C  D0C8               	goto	l3409
  3137  007C2E  0E22               	movlw	34
  3138  007C30  EC59  F032         	call	_le_eeprom
  3139  007C34  0900               	iorlw	0
  3140  007C36  B4D8               	btfsc	status,2,c
  3141  007C38  D0C2               	goto	l3409
  3142  007C3A  0E23               	movlw	35
  3143  007C3C  EC59  F032         	call	_le_eeprom
  3144  007C40  0900               	iorlw	0
  3145  007C42  B4D8               	btfsc	status,2,c
  3146  007C44  D0BC               	goto	l3409
  3147                           
  3148                           ;bt_usb.h: 124: SPBRGH = 0x02; SPBRG=0x70; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);
  3149  007C46  0E02               	movlw	2
  3150  007C48  6EB0               	movwf	4016,c	;volatile
  3151  007C4A  0E70               	movlw	112
  3152  007C4C  6EAF               	movwf	4015,c	;volatile
  3153  007C4E  0E00               	movlw	0
  3154  007C50  6E3D               	movwf	tempo_ms@i+1,c
  3155  007C52  0E0A               	movlw	10
  3156  007C54  6E3C               	movwf	tempo_ms@i,c
  3157  007C56  EC36  F033         	call	_tempo_ms	;wreg free
  3158  007C5A  0E7F               	movlw	high _icg
  3159  007C5C  6E3A               	movwf	sendr@st+1,c
  3160  007C5E  0E2C               	movlw	low _icg
  3161  007C60  6E39               	movwf	sendr@st,c
  3162  007C62  EC84  F033         	call	_sendr	;wreg free
  3163  007C66  0E01               	movlw	1
  3164  007C68  6E3D               	movwf	tempo_ms@i+1,c
  3165  007C6A  0EF4               	movlw	244
  3166  007C6C  6E3C               	movwf	tempo_ms@i,c
  3167  007C6E  EC36  F033         	call	_tempo_ms	;wreg free
  3168  007C72  0E1A               	movlw	26
  3169  007C74  EC83  F032         	call	_sputc
  3170  007C78  0E01               	movlw	1
  3171  007C7A  6E3D               	movwf	tempo_ms@i+1,c
  3172  007C7C  0EF4               	movlw	244
  3173  007C7E  6E3C               	movwf	tempo_ms@i,c
  3174  007C80  EC36  F033         	call	_tempo_ms	;wreg free
  3175                           
  3176                           ;bt_usb.h: 125: if(flagb==0){
  3177  007C84  500A               	movf	_flagb+1,w,c
  3178  007C86  1009               	iorwf	_flagb,w,c
  3179  007C88  A4D8               	btfss	status,2,c
  3180  007C8A  D01F               	goto	l3365
  3181                           
  3182                           ;bt_usb.h: 126: SPBRGH = 0x04; SPBRG=0xE1; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);}
  3183  007C8C  0E04               	movlw	4
  3184  007C8E  6EB0               	movwf	4016,c	;volatile
  3185  007C90  0EE1               	movlw	225
  3186  007C92  6EAF               	movwf	4015,c	;volatile
  3187  007C94  0E00               	movlw	0
  3188  007C96  6E3D               	movwf	tempo_ms@i+1,c
  3189  007C98  0E0A               	movlw	10
  3190  007C9A  6E3C               	movwf	tempo_ms@i,c
  3191  007C9C  EC36  F033         	call	_tempo_ms	;wreg free
  3192  007CA0  0E7F               	movlw	high _icg
  3193  007CA2  6E3A               	movwf	sendr@st+1,c
  3194  007CA4  0E2C               	movlw	low _icg
  3195  007CA6  6E39               	movwf	sendr@st,c
  3196  007CA8  EC84  F033         	call	_sendr	;wreg free
  3197  007CAC  0E01               	movlw	1
  3198  007CAE  6E3D               	movwf	tempo_ms@i+1,c
  3199  007CB0  0EF4               	movlw	244
  3200  007CB2  6E3C               	movwf	tempo_ms@i,c
  3201  007CB4  EC36  F033         	call	_tempo_ms	;wreg free
  3202  007CB8  0E1A               	movlw	26
  3203  007CBA  EC83  F032         	call	_sputc
  3204  007CBE  0E01               	movlw	1
  3205  007CC0  6E3D               	movwf	tempo_ms@i+1,c
  3206  007CC2  0EF4               	movlw	244
  3207  007CC4  6E3C               	movwf	tempo_ms@i,c
  3208  007CC6  EC36  F033         	call	_tempo_ms	;wreg free
  3209  007CCA                     l3365:
  3210                           
  3211                           ;bt_usb.h: 127: if(flagb==0){
  3212  007CCA  500A               	movf	_flagb+1,w,c
  3213  007CCC  1009               	iorwf	_flagb,w,c
  3214  007CCE  A4D8               	btfss	status,2,c
  3215  007CD0  D01F               	goto	l3379
  3216                           
  3217                           ;bt_usb.h: 128: SPBRGH = 0x01; SPBRG=0x37; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);}
  3218  007CD2  0E01               	movlw	1
  3219  007CD4  6EB0               	movwf	4016,c	;volatile
  3220  007CD6  0E37               	movlw	55
  3221  007CD8  6EAF               	movwf	4015,c	;volatile
  3222  007CDA  0E00               	movlw	0
  3223  007CDC  6E3D               	movwf	tempo_ms@i+1,c
  3224  007CDE  0E0A               	movlw	10
  3225  007CE0  6E3C               	movwf	tempo_ms@i,c
  3226  007CE2  EC36  F033         	call	_tempo_ms	;wreg free
  3227  007CE6  0E7F               	movlw	high _icg
  3228  007CE8  6E3A               	movwf	sendr@st+1,c
  3229  007CEA  0E2C               	movlw	low _icg
  3230  007CEC  6E39               	movwf	sendr@st,c
  3231  007CEE  EC84  F033         	call	_sendr	;wreg free
  3232  007CF2  0E01               	movlw	1
  3233  007CF4  6E3D               	movwf	tempo_ms@i+1,c
  3234  007CF6  0EF4               	movlw	244
  3235  007CF8  6E3C               	movwf	tempo_ms@i,c
  3236  007CFA  EC36  F033         	call	_tempo_ms	;wreg free
  3237  007CFE  0E1A               	movlw	26
  3238  007D00  EC83  F032         	call	_sputc
  3239  007D04  0E01               	movlw	1
  3240  007D06  6E3D               	movwf	tempo_ms@i+1,c
  3241  007D08  0EF4               	movlw	244
  3242  007D0A  6E3C               	movwf	tempo_ms@i,c
  3243  007D0C  EC36  F033         	call	_tempo_ms	;wreg free
  3244  007D10                     l3379:
  3245                           
  3246                           ;bt_usb.h: 129: if(icg[0b00000111]==0b01101000){SPBRGH = 0x04; SPBRG=0xE1;}
  3247  007D10  0E33               	movlw	low (_icg+7)
  3248  007D12  6EF6               	movwf	tblptrl,c
  3249  007D14  0E7F               	movlw	high (_icg+7)
  3250  007D16  6EF7               	movwf	tblptrh,c
  3251  007D18  0008               	tblrd		*
  3252  007D1A  50F5               	movf	tablat,w,c
  3253  007D1C  0A68               	xorlw	104
  3254  007D1E  A4D8               	btfss	status,2,c
  3255  007D20  D004               	goto	l3383
  3256  007D22  0E04               	movlw	4
  3257  007D24  6EB0               	movwf	4016,c	;volatile
  3258  007D26  0EE1               	movlw	225
  3259  007D28  6EAF               	movwf	4015,c	;volatile
  3260  007D2A                     l3383:
  3261                           
  3262                           ;bt_usb.h: 130: if(icg[0b00000111]==0b01101010){SPBRGH = 0x02; SPBRG=0x70;}
  3263  007D2A  0E33               	movlw	low (_icg+7)
  3264  007D2C  6EF6               	movwf	tblptrl,c
  3265  007D2E  0E7F               	movlw	high (_icg+7)
  3266  007D30  6EF7               	movwf	tblptrh,c
  3267  007D32  0008               	tblrd		*
  3268  007D34  50F5               	movf	tablat,w,c
  3269  007D36  0A6A               	xorlw	106
  3270  007D38  A4D8               	btfss	status,2,c
  3271  007D3A  D004               	goto	l3387
  3272  007D3C  0E02               	movlw	2
  3273  007D3E  6EB0               	movwf	4016,c	;volatile
  3274  007D40  0E70               	movlw	112
  3275  007D42  6EAF               	movwf	4015,c	;volatile
  3276  007D44                     l3387:
  3277                           
  3278                           ;bt_usb.h: 131: if(icg[0b00000111]==0b01101100){SPBRGH = 0x01; SPBRG=0x37;}
  3279  007D44  0E33               	movlw	low (_icg+7)
  3280  007D46  6EF6               	movwf	tblptrl,c
  3281  007D48  0E7F               	movlw	high (_icg+7)
  3282  007D4A  6EF7               	movwf	tblptrh,c
  3283  007D4C  0008               	tblrd		*
  3284  007D4E  50F5               	movf	tablat,w,c
  3285  007D50  0A6C               	xorlw	108
  3286  007D52  A4D8               	btfss	status,2,c
  3287  007D54  D004               	goto	l3391
  3288  007D56  0E01               	movlw	1
  3289  007D58  6EB0               	movwf	4016,c	;volatile
  3290  007D5A  0E37               	movlw	55
  3291  007D5C  6EAF               	movwf	4015,c	;volatile
  3292  007D5E                     l3391:
  3293                           
  3294                           ;bt_usb.h: 132: tempo_ms(500);
  3295  007D5E  0E01               	movlw	1
  3296  007D60  6E3D               	movwf	tempo_ms@i+1,c
  3297  007D62  0EF4               	movlw	244
  3298  007D64  6E3C               	movwf	tempo_ms@i,c
  3299  007D66  EC36  F033         	call	_tempo_ms	;wreg free
  3300                           
  3301                           ;bt_usb.h: 133: sendr((char *)icm);tempo_ms(500);sputc(26);tempo_ms(500);
  3302  007D6A  0E7F               	movlw	high _icm
  3303  007D6C  6E3A               	movwf	sendr@st+1,c
  3304  007D6E  0E09               	movlw	low _icm
  3305  007D70  6E39               	movwf	sendr@st,c
  3306  007D72  EC84  F033         	call	_sendr	;wreg free
  3307  007D76  0E01               	movlw	1
  3308  007D78  6E3D               	movwf	tempo_ms@i+1,c
  3309  007D7A  0EF4               	movlw	244
  3310  007D7C  6E3C               	movwf	tempo_ms@i,c
  3311  007D7E  EC36  F033         	call	_tempo_ms	;wreg free
  3312  007D82  0E1A               	movlw	26
  3313  007D84  EC83  F032         	call	_sputc
  3314  007D88  0E01               	movlw	1
  3315  007D8A  6E3D               	movwf	tempo_ms@i+1,c
  3316  007D8C  0EF4               	movlw	244
  3317  007D8E  6E3C               	movwf	tempo_ms@i,c
  3318  007D90  EC36  F033         	call	_tempo_ms	;wreg free
  3319                           
  3320                           ;bt_usb.h: 134: if(flagb==1){escreve_eeprom(33, 0);flagb=0;tempo_ms(10);}
  3321  007D94  0409               	decf	_flagb,w,c
  3322  007D96  100A               	iorwf	_flagb+1,w,c
  3323  007D98  A4D8               	btfss	status,2,c
  3324  007D9A  D011               	goto	l3409
  3325  007D9C  6E40               	movwf	??_bt_ini& (0+255),c
  3326  007D9E  0E00               	movlw	0
  3327  007DA0  6E36               	movwf	escreve_eeprom@dado,c
  3328  007DA2  5040               	movf	??_bt_ini& (0+255),w,c
  3329  007DA4  0E21               	movlw	33
  3330  007DA6  EC72  F032         	call	_escreve_eeprom
  3331  007DAA  0E00               	movlw	0
  3332  007DAC  6E0A               	movwf	_flagb+1,c
  3333  007DAE  0E00               	movlw	0
  3334  007DB0  6E09               	movwf	_flagb,c
  3335  007DB2  0E00               	movlw	0
  3336  007DB4  6E3D               	movwf	tempo_ms@i+1,c
  3337  007DB6  0E0A               	movlw	10
  3338  007DB8  6E3C               	movwf	tempo_ms@i,c
  3339  007DBA  EC36  F033         	call	_tempo_ms	;wreg free
  3340  007DBE                     l3409:
  3341                           
  3342                           ;bt_usb.h: 135: }
  3343                           ;bt_usb.h: 137: if(le_eeprom(33)==0 ){
  3344  007DBE  0E21               	movlw	33
  3345  007DC0  EC59  F032         	call	_le_eeprom
  3346  007DC4  0900               	iorlw	0
  3347  007DC6  A4D8               	btfss	status,2,c
  3348  007DC8  D027               	goto	l3423
  3349                           
  3350                           ;bt_usb.h: 138: if(icg[0b00000111]==0b01101000){SPBRGH = 0x04; SPBRG=0xE1;}
  3351  007DCA  0E33               	movlw	low (_icg+7)
  3352  007DCC  6EF6               	movwf	tblptrl,c
  3353  007DCE  0E7F               	movlw	high (_icg+7)
  3354  007DD0  6EF7               	movwf	tblptrh,c
  3355  007DD2  0008               	tblrd		*
  3356  007DD4  50F5               	movf	tablat,w,c
  3357  007DD6  0A68               	xorlw	104
  3358  007DD8  A4D8               	btfss	status,2,c
  3359  007DDA  D004               	goto	l3415
  3360  007DDC  0E04               	movlw	4
  3361  007DDE  6EB0               	movwf	4016,c	;volatile
  3362  007DE0  0EE1               	movlw	225
  3363  007DE2  6EAF               	movwf	4015,c	;volatile
  3364  007DE4                     l3415:
  3365                           
  3366                           ;bt_usb.h: 139: if(icg[0b00000111]==0b01101010){SPBRGH = 0x02; SPBRG=0x70;}
  3367  007DE4  0E33               	movlw	low (_icg+7)
  3368  007DE6  6EF6               	movwf	tblptrl,c
  3369  007DE8  0E7F               	movlw	high (_icg+7)
  3370  007DEA  6EF7               	movwf	tblptrh,c
  3371  007DEC  0008               	tblrd		*
  3372  007DEE  50F5               	movf	tablat,w,c
  3373  007DF0  0A6A               	xorlw	106
  3374  007DF2  A4D8               	btfss	status,2,c
  3375  007DF4  D004               	goto	l3419
  3376  007DF6  0E02               	movlw	2
  3377  007DF8  6EB0               	movwf	4016,c	;volatile
  3378  007DFA  0E70               	movlw	112
  3379  007DFC  6EAF               	movwf	4015,c	;volatile
  3380  007DFE                     l3419:
  3381                           
  3382                           ;bt_usb.h: 140: if(icg[0b00000111]==0b01101100){SPBRGH = 0x01; SPBRG=0x37;}
  3383  007DFE  0E33               	movlw	low (_icg+7)
  3384  007E00  6EF6               	movwf	tblptrl,c
  3385  007E02  0E7F               	movlw	high (_icg+7)
  3386  007E04  6EF7               	movwf	tblptrh,c
  3387  007E06  0008               	tblrd		*
  3388  007E08  50F5               	movf	tablat,w,c
  3389  007E0A  0A6C               	xorlw	108
  3390  007E0C  A4D8               	btfss	status,2,c
  3391  007E0E  D004               	goto	l3423
  3392  007E10  0E01               	movlw	1
  3393  007E12  6EB0               	movwf	4016,c	;volatile
  3394  007E14  0E37               	movlw	55
  3395  007E16  6EAF               	movwf	4015,c	;volatile
  3396  007E18                     l3423:
  3397                           
  3398                           ;bt_usb.h: 141: }
  3399                           ;bt_usb.h: 143: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0) {
  3400  007E18  0E21               	movlw	33
  3401  007E1A  EC59  F032         	call	_le_eeprom
  3402  007E1E  0900               	iorlw	0
  3403  007E20  B4D8               	btfsc	status,2,c
  3404  007E22  D028               	goto	l3443
  3405  007E24  0E22               	movlw	34
  3406  007E26  EC59  F032         	call	_le_eeprom
  3407  007E2A  0900               	iorlw	0
  3408  007E2C  B4D8               	btfsc	status,2,c
  3409  007E2E  D022               	goto	l3443
  3410  007E30  0E23               	movlw	35
  3411  007E32  EC59  F032         	call	_le_eeprom
  3412  007E36  0900               	iorlw	0
  3413  007E38  B4D8               	btfsc	status,2,c
  3414  007E3A  D01C               	goto	l3443
  3415                           
  3416                           ;bt_usb.h: 144: flagb=0;configBR6();
  3417  007E3C  0E00               	movlw	0
  3418  007E3E  6E0A               	movwf	_flagb+1,c
  3419  007E40  0E00               	movlw	0
  3420  007E42  6E09               	movwf	_flagb,c
  3421  007E44  ECDC  F033         	call	_configBR6	;wreg free
  3422                           
  3423                           ;bt_usb.h: 145: INTCON2bits.RBPU = 0;
  3424  007E48  9EF1               	bcf	intcon2,7,c	;volatile
  3425                           
  3426                           ;bt_usb.h: 146: if(flagb==1){escreve_eeprom(34, 0);flagb=0;tempo_ms(10);}
  3427  007E4A  0409               	decf	_flagb,w,c
  3428  007E4C  100A               	iorwf	_flagb+1,w,c
  3429  007E4E  A4D8               	btfss	status,2,c
  3430  007E50  D011               	goto	l3443
  3431  007E52  6E40               	movwf	??_bt_ini& (0+255),c
  3432  007E54  0E00               	movlw	0
  3433  007E56  6E36               	movwf	escreve_eeprom@dado,c
  3434  007E58  5040               	movf	??_bt_ini& (0+255),w,c
  3435  007E5A  0E22               	movlw	34
  3436  007E5C  EC72  F032         	call	_escreve_eeprom
  3437  007E60  0E00               	movlw	0
  3438  007E62  6E0A               	movwf	_flagb+1,c
  3439  007E64  0E00               	movlw	0
  3440  007E66  6E09               	movwf	_flagb,c
  3441  007E68  0E00               	movlw	0
  3442  007E6A  6E3D               	movwf	tempo_ms@i+1,c
  3443  007E6C  0E0A               	movlw	10
  3444  007E6E  6E3C               	movwf	tempo_ms@i,c
  3445  007E70  EC36  F033         	call	_tempo_ms	;wreg free
  3446  007E74                     l3443:
  3447                           
  3448                           ;bt_usb.h: 147: }
  3449                           ;bt_usb.h: 148: if(le_eeprom(34)==0 ){
  3450  007E74  0E22               	movlw	34
  3451  007E76  EC59  F032         	call	_le_eeprom
  3452  007E7A  0900               	iorlw	0
  3453  007E7C  A4D8               	btfss	status,2,c
  3454  007E7E  D027               	goto	l537
  3455                           
  3456                           ;bt_usb.h: 149: if(icgs[0b00001000]==0b01110010){SPBRGH = 0x04; SPBRG=0xE1;}
  3457  007E80  0ED9               	movlw	low (_icgs+8)
  3458  007E82  6EF6               	movwf	tblptrl,c
  3459  007E84  0E7E               	movlw	high (_icgs+8)
  3460  007E86  6EF7               	movwf	tblptrh,c
  3461  007E88  0008               	tblrd		*
  3462  007E8A  50F5               	movf	tablat,w,c
  3463  007E8C  0A72               	xorlw	114
  3464  007E8E  A4D8               	btfss	status,2,c
  3465  007E90  D004               	goto	l3449
  3466  007E92  0E04               	movlw	4
  3467  007E94  6EB0               	movwf	4016,c	;volatile
  3468  007E96  0EE1               	movlw	225
  3469  007E98  6EAF               	movwf	4015,c	;volatile
  3470  007E9A                     l3449:
  3471                           
  3472                           ;bt_usb.h: 150: if(icgs[0b00001000]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  3473  007E9A  0ED9               	movlw	low (_icgs+8)
  3474  007E9C  6EF6               	movwf	tblptrl,c
  3475  007E9E  0E7E               	movlw	high (_icgs+8)
  3476  007EA0  6EF7               	movwf	tblptrh,c
  3477  007EA2  0008               	tblrd		*
  3478  007EA4  50F5               	movf	tablat,w,c
  3479  007EA6  0A62               	xorlw	98
  3480  007EA8  A4D8               	btfss	status,2,c
  3481  007EAA  D004               	goto	l3453
  3482  007EAC  0E02               	movlw	2
  3483  007EAE  6EB0               	movwf	4016,c	;volatile
  3484  007EB0  0E70               	movlw	112
  3485  007EB2  6EAF               	movwf	4015,c	;volatile
  3486  007EB4                     l3453:
  3487                           
  3488                           ;bt_usb.h: 151: if(icgs[0b00001000]==0b01100110){SPBRGH = 0x01; SPBRG=0x37;}
  3489  007EB4  0ED9               	movlw	low (_icgs+8)
  3490  007EB6  6EF6               	movwf	tblptrl,c
  3491  007EB8  0E7E               	movlw	high (_icgs+8)
  3492  007EBA  6EF7               	movwf	tblptrh,c
  3493  007EBC  0008               	tblrd		*
  3494  007EBE  50F5               	movf	tablat,w,c
  3495  007EC0  0A66               	xorlw	102
  3496  007EC2  A4D8               	btfss	status,2,c
  3497  007EC4  D004               	goto	l537
  3498  007EC6  0E01               	movlw	1
  3499  007EC8  6EB0               	movwf	4016,c	;volatile
  3500  007ECA  0E37               	movlw	55
  3501  007ECC  6EAF               	movwf	4015,c	;volatile
  3502  007ECE                     l537:
  3503  007ECE  0012               	return	
  3504  007ED0                     __end_of_bt_ini:
  3505                           	opt stack 0
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           intcon	equ	0xFF2
  3513                           intcon2	equ	0xFF1
  3514                           intcon3	equ	0xFF0
  3515                           postinc0	equ	0xFEE
  3516                           wreg	equ	0xFE8
  3517                           postdec1	equ	0xFE5
  3518                           fsr1l	equ	0xFE1
  3519                           status	equ	0xFD8
  3520                           
  3521 ;; *************** function _le_eeprom *****************
  3522 ;; Defined at:
  3523 ;;		line 425 in file "SanUSB48X.h"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  endereco        1    wreg     unsigned char 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  endereco        1   20[COMRAM] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      unsigned char 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0
  3538 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3540 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        1 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    2
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_clock_int_48MHz
  3548 ;;		_bt_ini
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text12
  3553  0064B2                     __ptext12:
  3554                           	opt stack 0
  3555  0064B2                     _le_eeprom:
  3556                           	opt stack 27
  3557                           
  3558                           ;incstack = 0
  3559                           ;le_eeprom@endereco stored from wreg
  3560  0064B2  CFE8 F036          	movff	wreg,le_eeprom@endereco
  3561                           
  3562                           ;SanUSB48X.h: 427: EEADR = endereco;
  3563  0064B6  C036  FFA9         	movff	le_eeprom@endereco,4009	;volatile
  3564                           
  3565                           ;SanUSB48X.h: 428: EECON1bits.WREN = 0;
  3566  0064BA  94A6               	bcf	4006,2,c	;volatile
  3567                           
  3568                           ;SanUSB48X.h: 429: EECON1bits.EEPGD = 0;
  3569  0064BC  9EA6               	bcf	4006,7,c	;volatile
  3570                           
  3571                           ;SanUSB48X.h: 430: EECON1bits.CFGS = 0;
  3572  0064BE  9CA6               	bcf	4006,6,c	;volatile
  3573                           
  3574                           ;SanUSB48X.h: 431: EECON1bits.RD = 1;
  3575  0064C0  80A6               	bsf	4006,0,c	;volatile
  3576                           
  3577                           ;SanUSB48X.h: 432: return EEDATA;
  3578  0064C2  50A8               	movf	4008,w,c	;volatile
  3579  0064C4  0012               	return	
  3580  0064C6                     __end_of_le_eeprom:
  3581                           	opt stack 0
  3582                           tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           prodh	equ	0xFF4
  3587                           prodl	equ	0xFF3
  3588                           intcon	equ	0xFF2
  3589                           intcon2	equ	0xFF1
  3590                           intcon3	equ	0xFF0
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postdec1	equ	0xFE5
  3594                           fsr1l	equ	0xFE1
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _escreve_eeprom *****************
  3598 ;; Defined at:
  3599 ;;		line 412 in file "SanUSB48X.h"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  endereco        1    wreg     unsigned char 
  3602 ;;  dado            1   20[COMRAM] unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  endereco        1   21[COMRAM] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;		None               void
  3607 ;; Registers used:
  3608 ;;		wreg, status,2
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3614 ;;      Params:         1       0       0       0       0       0       0       0       0
  3615 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3617 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3618 ;;Total ram usage:        2 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    2
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_bt_ini
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text13
  3629  0064E4                     __ptext13:
  3630                           	opt stack 0
  3631  0064E4                     _escreve_eeprom:
  3632                           	opt stack 27
  3633                           
  3634                           ;incstack = 0
  3635                           ;escreve_eeprom@endereco stored from wreg
  3636  0064E4  CFE8 F037          	movff	wreg,escreve_eeprom@endereco
  3637                           
  3638                           ;SanUSB48X.h: 414: EECON1bits.EEPGD = 0;
  3639  0064E8  9EA6               	bcf	4006,7,c	;volatile
  3640                           
  3641                           ;SanUSB48X.h: 415: EECON1bits.CFGS = 0;
  3642  0064EA  9CA6               	bcf	4006,6,c	;volatile
  3643                           
  3644                           ;SanUSB48X.h: 416: EECON1bits.WREN = 1;
  3645  0064EC  84A6               	bsf	4006,2,c	;volatile
  3646                           
  3647                           ;SanUSB48X.h: 417: EEADR = endereco;
  3648  0064EE  C037  FFA9         	movff	escreve_eeprom@endereco,4009	;volatile
  3649                           
  3650                           ;SanUSB48X.h: 418: EEDATA = dado;
  3651  0064F2  C036  FFA8         	movff	escreve_eeprom@dado,4008	;volatile
  3652                           
  3653                           ;SanUSB48X.h: 419: EECON2 = 0x55;
  3654  0064F6  0E55               	movlw	85
  3655  0064F8  6EA7               	movwf	4007,c	;volatile
  3656                           
  3657                           ;SanUSB48X.h: 420: EECON2 = 0xaa;
  3658  0064FA  0EAA               	movlw	170
  3659  0064FC  6EA7               	movwf	4007,c	;volatile
  3660                           
  3661                           ;SanUSB48X.h: 421: EECON1bits.WR = 1;
  3662  0064FE  82A6               	bsf	4006,1,c	;volatile
  3663  006500                     l367:
  3664  006500  A2A6               	btfss	4006,1,c	;volatile
  3665  006502  0012               	return	
  3666  006504  D7FD               	goto	l367
  3667  006506                     __end_of_escreve_eeprom:
  3668                           	opt stack 0
  3669                           tblptru	equ	0xFF8
  3670                           tblptrh	equ	0xFF7
  3671                           tblptrl	equ	0xFF6
  3672                           tablat	equ	0xFF5
  3673                           prodh	equ	0xFF4
  3674                           prodl	equ	0xFF3
  3675                           intcon	equ	0xFF2
  3676                           intcon2	equ	0xFF1
  3677                           intcon3	equ	0xFF0
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           postdec1	equ	0xFE5
  3681                           fsr1l	equ	0xFE1
  3682                           status	equ	0xFD8
  3683                           
  3684 ;; *************** function _configBR6 *****************
  3685 ;; Defined at:
  3686 ;;		line 68 in file "bt_usb.h"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;		None               void
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3700 ;;      Params:         0       0       0       0       0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3703 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    6
  3707 ;; This function calls:
  3708 ;;		_inverte_saida
  3709 ;;		_modoAttention
  3710 ;;		_modoNormal
  3711 ;;		_sendr
  3712 ;;		_tempo_ms
  3713 ;; This function is called by:
  3714 ;;		_bt_ini
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text14
  3719  0067B8                     __ptext14:
  3720                           	opt stack 0
  3721  0067B8                     _configBR6:
  3722                           	opt stack 23
  3723                           
  3724                           ;bt_usb.h: 70: modoAttention();
  3725                           
  3726                           ;incstack = 0
  3727  0067B8  ECF4  F032         	call	_modoAttention	;wreg free
  3728                           
  3729                           ;bt_usb.h: 71: flagb=0;sendr((char *)icgs);
  3730  0067BC  0E00               	movlw	0
  3731  0067BE  6E0A               	movwf	_flagb+1,c
  3732  0067C0  0E00               	movlw	0
  3733  0067C2  6E09               	movwf	_flagb,c
  3734  0067C4  0E7E               	movlw	high _icgs
  3735  0067C6  6E3A               	movwf	sendr@st+1,c
  3736  0067C8  0ED1               	movlw	low _icgs
  3737  0067CA  6E39               	movwf	sendr@st,c
  3738  0067CC  EC84  F033         	call	_sendr	;wreg free
  3739                           
  3740                           ;bt_usb.h: 72: inverte_saida(31759); tempo_ms(1000);
  3741  0067D0  0E7C               	movlw	124
  3742  0067D2  6E37               	movwf	inverte_saida@pino+1,c
  3743  0067D4  0E0F               	movlw	15
  3744  0067D6  6E36               	movwf	inverte_saida@pino,c
  3745  0067D8  EC7F  F036         	call	_inverte_saida	;wreg free
  3746  0067DC  0E03               	movlw	3
  3747  0067DE  6E3D               	movwf	tempo_ms@i+1,c
  3748  0067E0  0EE8               	movlw	232
  3749  0067E2  6E3C               	movwf	tempo_ms@i,c
  3750  0067E4  EC36  F033         	call	_tempo_ms	;wreg free
  3751                           
  3752                           ;bt_usb.h: 73: sendr((char *)icms);
  3753  0067E8  0E7E               	movlw	high _icms
  3754  0067EA  6E3A               	movwf	sendr@st+1,c
  3755  0067EC  0EE5               	movlw	low _icms
  3756  0067EE  6E39               	movwf	sendr@st,c
  3757  0067F0  EC84  F033         	call	_sendr	;wreg free
  3758                           
  3759                           ;bt_usb.h: 74: inverte_saida(31759); tempo_ms(1000);
  3760  0067F4  0E7C               	movlw	124
  3761  0067F6  6E37               	movwf	inverte_saida@pino+1,c
  3762  0067F8  0E0F               	movlw	15
  3763  0067FA  6E36               	movwf	inverte_saida@pino,c
  3764  0067FC  EC7F  F036         	call	_inverte_saida	;wreg free
  3765  006800  0E03               	movlw	3
  3766  006802  6E3D               	movwf	tempo_ms@i+1,c
  3767  006804  0EE8               	movlw	232
  3768  006806  6E3C               	movwf	tempo_ms@i,c
  3769  006808  EC36  F033         	call	_tempo_ms	;wreg free
  3770                           
  3771                           ;bt_usb.h: 75: modoNormal();
  3772  00680C  EC09  F034         	call	_modoNormal	;wreg free
  3773  006810  0012               	return	
  3774  006812                     __end_of_configBR6:
  3775                           	opt stack 0
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           intcon2	equ	0xFF1
  3784                           intcon3	equ	0xFF0
  3785                           postinc0	equ	0xFEE
  3786                           wreg	equ	0xFE8
  3787                           postdec1	equ	0xFE5
  3788                           fsr1l	equ	0xFE1
  3789                           status	equ	0xFD8
  3790                           
  3791 ;; *************** function _modoNormal *****************
  3792 ;; Defined at:
  3793 ;;		line 59 in file "bt_usb.h"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;		None               void
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3807 ;;      Params:         0       0       0       0       0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    5
  3814 ;; This function calls:
  3815 ;;		_nivel_baixo
  3816 ;;		_resetBT
  3817 ;; This function is called by:
  3818 ;;		_configBR6
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text15
  3823  006812                     __ptext15:
  3824                           	opt stack 0
  3825  006812                     _modoNormal:
  3826                           	opt stack 23
  3827                           
  3828                           ;bt_usb.h: 61: nivel_baixo(31754);
  3829                           
  3830                           ;incstack = 0
  3831  006812  0E7C               	movlw	124
  3832  006814  6E37               	movwf	nivel_baixo@pino+1,c
  3833  006816  0E0A               	movlw	10
  3834  006818  6E36               	movwf	nivel_baixo@pino,c
  3835  00681A  ECCD  F038         	call	_nivel_baixo	;wreg free
  3836                           
  3837                           ;bt_usb.h: 62: resetBT();
  3838  00681E  ECD5  F032         	call	_resetBT	;wreg free
  3839                           
  3840                           ;bt_usb.h: 63: if(icgs[0b00001000]==0b01110010){SPBRGH = 0x04; SPBRG=0xE1;}
  3841  006822  0ED9               	movlw	low (_icgs+8)
  3842  006824  6EF6               	movwf	tblptrl,c
  3843  006826  0E7E               	movlw	high (_icgs+8)
  3844  006828  6EF7               	movwf	tblptrh,c
  3845  00682A  0008               	tblrd		*
  3846  00682C  50F5               	movf	tablat,w,c
  3847  00682E  0A72               	xorlw	114
  3848  006830  A4D8               	btfss	status,2,c
  3849  006832  D004               	goto	l2947
  3850  006834  0E04               	movlw	4
  3851  006836  6EB0               	movwf	4016,c	;volatile
  3852  006838  0EE1               	movlw	225
  3853  00683A  6EAF               	movwf	4015,c	;volatile
  3854  00683C                     l2947:
  3855                           
  3856                           ;bt_usb.h: 64: if(icgs[0b00001000]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  3857  00683C  0ED9               	movlw	low (_icgs+8)
  3858  00683E  6EF6               	movwf	tblptrl,c
  3859  006840  0E7E               	movlw	high (_icgs+8)
  3860  006842  6EF7               	movwf	tblptrh,c
  3861  006844  0008               	tblrd		*
  3862  006846  50F5               	movf	tablat,w,c
  3863  006848  0A62               	xorlw	98
  3864  00684A  A4D8               	btfss	status,2,c
  3865  00684C  D004               	goto	l2951
  3866  00684E  0E02               	movlw	2
  3867  006850  6EB0               	movwf	4016,c	;volatile
  3868  006852  0E70               	movlw	112
  3869  006854  6EAF               	movwf	4015,c	;volatile
  3870  006856                     l2951:
  3871                           
  3872                           ;bt_usb.h: 65: if(icgs[0b00001000]==0b01100110){SPBRGH = 0x01; SPBRG=0x37;}
  3873  006856  0ED9               	movlw	low (_icgs+8)
  3874  006858  6EF6               	movwf	tblptrl,c
  3875  00685A  0E7E               	movlw	high (_icgs+8)
  3876  00685C  6EF7               	movwf	tblptrh,c
  3877  00685E  0008               	tblrd		*
  3878  006860  50F5               	movf	tablat,w,c
  3879  006862  0A66               	xorlw	102
  3880  006864  A4D8               	btfss	status,2,c
  3881  006866  D004               	goto	l506
  3882  006868  0E01               	movlw	1
  3883  00686A  6EB0               	movwf	4016,c	;volatile
  3884  00686C  0E37               	movlw	55
  3885  00686E  6EAF               	movwf	4015,c	;volatile
  3886  006870                     l506:
  3887  006870  0012               	return	
  3888  006872                     __end_of_modoNormal:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           intcon2	equ	0xFF1
  3898                           intcon3	equ	0xFF0
  3899                           postinc0	equ	0xFEE
  3900                           wreg	equ	0xFE8
  3901                           postdec1	equ	0xFE5
  3902                           fsr1l	equ	0xFE1
  3903                           status	equ	0xFD8
  3904                           
  3905 ;; *************** function _resetBT *****************
  3906 ;; Defined at:
  3907 ;;		line 40 in file "bt_usb.h"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;		None               void
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    4
  3928 ;; This function calls:
  3929 ;;		_inverte_saida
  3930 ;;		_sendr
  3931 ;;		_tempo_ms
  3932 ;; This function is called by:
  3933 ;;		_modoNormal
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text16
  3938  0065AA                     __ptext16:
  3939                           	opt stack 0
  3940  0065AA                     _resetBT:
  3941                           	opt stack 23
  3942                           
  3943                           ;bt_usb.h: 42: inverte_saida(31759); tempo_ms(1000);
  3944                           
  3945                           ;incstack = 0
  3946  0065AA  0E7C               	movlw	124
  3947  0065AC  6E37               	movwf	inverte_saida@pino+1,c
  3948  0065AE  0E0F               	movlw	15
  3949  0065B0  6E36               	movwf	inverte_saida@pino,c
  3950  0065B2  EC7F  F036         	call	_inverte_saida	;wreg free
  3951  0065B6  0E03               	movlw	3
  3952  0065B8  6E3D               	movwf	tempo_ms@i+1,c
  3953  0065BA  0EE8               	movlw	232
  3954  0065BC  6E3C               	movwf	tempo_ms@i,c
  3955  0065BE  EC36  F033         	call	_tempo_ms	;wreg free
  3956                           
  3957                           ;bt_usb.h: 43: sendr((char *)icrs);
  3958  0065C2  0E7F               	movlw	high _icrs
  3959  0065C4  6E3A               	movwf	sendr@st+1,c
  3960  0065C6  0E18               	movlw	low _icrs
  3961  0065C8  6E39               	movwf	sendr@st,c
  3962  0065CA  EC84  F033         	call	_sendr	;wreg free
  3963                           
  3964                           ;bt_usb.h: 44: inverte_saida(31759); tempo_ms(2000);
  3965  0065CE  0E7C               	movlw	124
  3966  0065D0  6E37               	movwf	inverte_saida@pino+1,c
  3967  0065D2  0E0F               	movlw	15
  3968  0065D4  6E36               	movwf	inverte_saida@pino,c
  3969  0065D6  EC7F  F036         	call	_inverte_saida	;wreg free
  3970  0065DA  0E07               	movlw	7
  3971  0065DC  6E3D               	movwf	tempo_ms@i+1,c
  3972  0065DE  0ED0               	movlw	208
  3973  0065E0  6E3C               	movwf	tempo_ms@i,c
  3974  0065E2  EC36  F033         	call	_tempo_ms	;wreg free
  3975  0065E6  0012               	return	
  3976  0065E8                     __end_of_resetBT:
  3977                           	opt stack 0
  3978                           tblptru	equ	0xFF8
  3979                           tblptrh	equ	0xFF7
  3980                           tblptrl	equ	0xFF6
  3981                           tablat	equ	0xFF5
  3982                           prodh	equ	0xFF4
  3983                           prodl	equ	0xFF3
  3984                           intcon	equ	0xFF2
  3985                           intcon2	equ	0xFF1
  3986                           intcon3	equ	0xFF0
  3987                           postinc0	equ	0xFEE
  3988                           wreg	equ	0xFE8
  3989                           postdec1	equ	0xFE5
  3990                           fsr1l	equ	0xFE1
  3991                           status	equ	0xFD8
  3992                           
  3993 ;; *************** function _nivel_baixo *****************
  3994 ;; Defined at:
  3995 ;;		line 199 in file "SanUSB48X.h"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  pino            2   20[COMRAM] unsigned int 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;		None               void
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4009 ;;      Params:         2       0       0       0       0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4011 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4012 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4013 ;;Total ram usage:        4 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    2
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_modoNormal
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text17
  4024  00719A                     __ptext17:
  4025                           	opt stack 0
  4026  00719A                     _nivel_baixo:
  4027                           	opt stack 25
  4028                           
  4029                           ;SanUSB48X.h: 201: switch(pino){
  4030                           
  4031                           ;incstack = 0
  4032  00719A  D048               	goto	l2889
  4033  00719C                     l205:
  4034  00719C  9092               	bcf	3986,0,c	;volatile
  4035  00719E  9080               	bcf	3968,0,c	;volatile
  4036  0071A0  D096               	goto	l228
  4037  0071A2                     l207:
  4038  0071A2  9292               	bcf	3986,1,c	;volatile
  4039  0071A4  9280               	bcf	3968,1,c	;volatile
  4040  0071A6  D093               	goto	l228
  4041  0071A8                     l208:
  4042  0071A8  9492               	bcf	3986,2,c	;volatile
  4043  0071AA  9480               	bcf	3968,2,c	;volatile
  4044  0071AC  D090               	goto	l228
  4045  0071AE                     l209:
  4046  0071AE  9692               	bcf	3986,3,c	;volatile
  4047  0071B0  9680               	bcf	3968,3,c	;volatile
  4048  0071B2  D08D               	goto	l228
  4049  0071B4                     l210:
  4050  0071B4  9892               	bcf	3986,4,c	;volatile
  4051  0071B6  9880               	bcf	3968,4,c	;volatile
  4052  0071B8  D08A               	goto	l228
  4053  0071BA                     l211:
  4054  0071BA  9A92               	bcf	3986,5,c	;volatile
  4055  0071BC  9A80               	bcf	3968,5,c	;volatile
  4056  0071BE  D087               	goto	l228
  4057  0071C0                     l2881:
  4058  0071C0  0E00               	movlw	0
  4059  0071C2  6E92               	movwf	3986,c	;volatile
  4060  0071C4  0E00               	movlw	0
  4061  0071C6  6E89               	movwf	3977,c	;volatile
  4062  0071C8  D082               	goto	l228
  4063  0071CA                     l213:
  4064  0071CA  9093               	bcf	3987,0,c	;volatile
  4065  0071CC  9081               	bcf	3969,0,c	;volatile
  4066  0071CE  D07F               	goto	l228
  4067  0071D0                     l214:
  4068  0071D0  9293               	bcf	3987,1,c	;volatile
  4069  0071D2  9281               	bcf	3969,1,c	;volatile
  4070  0071D4  D07C               	goto	l228
  4071  0071D6                     l215:
  4072  0071D6  9493               	bcf	3987,2,c	;volatile
  4073  0071D8  9481               	bcf	3969,2,c	;volatile
  4074  0071DA  D079               	goto	l228
  4075  0071DC                     l216:
  4076  0071DC  9693               	bcf	3987,3,c	;volatile
  4077  0071DE  9681               	bcf	3969,3,c	;volatile
  4078  0071E0  D076               	goto	l228
  4079  0071E2                     l217:
  4080  0071E2  9893               	bcf	3987,4,c	;volatile
  4081  0071E4  9881               	bcf	3969,4,c	;volatile
  4082  0071E6  D073               	goto	l228
  4083  0071E8                     l218:
  4084  0071E8  9A93               	bcf	3987,5,c	;volatile
  4085  0071EA  9A81               	bcf	3969,5,c	;volatile
  4086  0071EC  D070               	goto	l228
  4087  0071EE                     l219:
  4088  0071EE  9C93               	bcf	3987,6,c	;volatile
  4089  0071F0  9C81               	bcf	3969,6,c	;volatile
  4090  0071F2  D06D               	goto	l228
  4091  0071F4                     l220:
  4092  0071F4  9E93               	bcf	3987,7,c	;volatile
  4093  0071F6  9E81               	bcf	3969,7,c	;volatile
  4094  0071F8  D06A               	goto	l228
  4095  0071FA                     l2883:
  4096  0071FA  0E00               	movlw	0
  4097  0071FC  6E93               	movwf	3987,c	;volatile
  4098  0071FE  0E00               	movlw	0
  4099  007200  6E8A               	movwf	3978,c	;volatile
  4100  007202  D065               	goto	l228
  4101  007204                     l222:
  4102  007204  9094               	bcf	3988,0,c	;volatile
  4103  007206  9082               	bcf	3970,0,c	;volatile
  4104  007208  D062               	goto	l228
  4105  00720A                     l223:
  4106  00720A  9294               	bcf	3988,1,c	;volatile
  4107  00720C  9282               	bcf	3970,1,c	;volatile
  4108  00720E  D05F               	goto	l228
  4109  007210                     l224:
  4110  007210  9494               	bcf	3988,2,c	;volatile
  4111  007212  9482               	bcf	3970,2,c	;volatile
  4112  007214  D05C               	goto	l228
  4113  007216                     l225:
  4114  007216  9C94               	bcf	3988,6,c	;volatile
  4115  007218  9C82               	bcf	3970,6,c	;volatile
  4116  00721A  D059               	goto	l228
  4117  00721C                     l226:
  4118  00721C  9E94               	bcf	3988,7,c	;volatile
  4119  00721E  9E82               	bcf	3970,7,c	;volatile
  4120  007220  D056               	goto	l228
  4121  007222                     l2885:
  4122  007222  0E00               	movlw	0
  4123  007224  6E94               	movwf	3988,c	;volatile
  4124  007226  0E00               	movlw	0
  4125  007228  6E8B               	movwf	3979,c	;volatile
  4126  00722A  D051               	goto	l228
  4127  00722C                     l2889:
  4128  00722C  C036  F038         	movff	nivel_baixo@pino,??_nivel_baixo
  4129  007230  C037  F039         	movff	nivel_baixo@pino+1,??_nivel_baixo+1
  4130                           
  4131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4132                           ; Switch size 1, requested type "space"
  4133                           ; Number of cases is 2, Range of values is 15 to 124
  4134                           ; switch strategies available:
  4135                           ; Name         Instructions Cycles
  4136                           ; simple_byte            7     4 (average)
  4137                           ;	Chosen strategy is simple_byte
  4138  007234  5039               	movf	??_nivel_baixo+1,w,c
  4139  007236  0A0F               	xorlw	15	; case 15
  4140  007238  B4D8               	btfsc	status,2,c
  4141  00723A  D004               	goto	l4591
  4142  00723C  0A73               	xorlw	115	; case 124
  4143  00723E  B4D8               	btfsc	status,2,c
  4144  007240  D00C               	goto	l4593
  4145  007242  D045               	goto	l228
  4146  007244                     l4591:
  4147                           
  4148                           ; Switch size 1, requested type "space"
  4149                           ; Number of cases is 3, Range of values is 128 to 130
  4150                           ; switch strategies available:
  4151                           ; Name         Instructions Cycles
  4152                           ; simple_byte           10     6 (average)
  4153                           ;	Chosen strategy is simple_byte
  4154  007244  5038               	movf	??_nivel_baixo,w,c
  4155  007246  0A80               	xorlw	128	; case 128
  4156  007248  B4D8               	btfsc	status,2,c
  4157  00724A  D7BA               	goto	l2881
  4158  00724C  0A01               	xorlw	1	; case 129
  4159  00724E  B4D8               	btfsc	status,2,c
  4160  007250  D7D4               	goto	l2883
  4161  007252  0A03               	xorlw	3	; case 130
  4162  007254  B4D8               	btfsc	status,2,c
  4163  007256  D7E5               	goto	l2885
  4164  007258  D03A               	goto	l228
  4165  00725A                     l4593:
  4166                           
  4167                           ; Switch size 1, requested type "space"
  4168                           ; Number of cases is 19, Range of values is 0 to 23
  4169                           ; switch strategies available:
  4170                           ; Name         Instructions Cycles
  4171                           ; simple_byte           58    30 (average)
  4172                           ;	Chosen strategy is simple_byte
  4173  00725A  5038               	movf	??_nivel_baixo,w,c
  4174  00725C  0A00               	xorlw	0	; case 0
  4175  00725E  B4D8               	btfsc	status,2,c
  4176  007260  D79D               	goto	l205
  4177  007262  0A01               	xorlw	1	; case 1
  4178  007264  B4D8               	btfsc	status,2,c
  4179  007266  D79D               	goto	l207
  4180  007268  0A03               	xorlw	3	; case 2
  4181  00726A  B4D8               	btfsc	status,2,c
  4182  00726C  D79D               	goto	l208
  4183  00726E  0A01               	xorlw	1	; case 3
  4184  007270  B4D8               	btfsc	status,2,c
  4185  007272  D79D               	goto	l209
  4186  007274  0A07               	xorlw	7	; case 4
  4187  007276  B4D8               	btfsc	status,2,c
  4188  007278  D79D               	goto	l210
  4189  00727A  0A01               	xorlw	1	; case 5
  4190  00727C  B4D8               	btfsc	status,2,c
  4191  00727E  D79D               	goto	l211
  4192  007280  0A0D               	xorlw	13	; case 8
  4193  007282  B4D8               	btfsc	status,2,c
  4194  007284  D7A2               	goto	l213
  4195  007286  0A01               	xorlw	1	; case 9
  4196  007288  B4D8               	btfsc	status,2,c
  4197  00728A  D7A2               	goto	l214
  4198  00728C  0A03               	xorlw	3	; case 10
  4199  00728E  B4D8               	btfsc	status,2,c
  4200  007290  D7A2               	goto	l215
  4201  007292  0A01               	xorlw	1	; case 11
  4202  007294  B4D8               	btfsc	status,2,c
  4203  007296  D7A2               	goto	l216
  4204  007298  0A07               	xorlw	7	; case 12
  4205  00729A  B4D8               	btfsc	status,2,c
  4206  00729C  D7A2               	goto	l217
  4207  00729E  0A01               	xorlw	1	; case 13
  4208  0072A0  B4D8               	btfsc	status,2,c
  4209  0072A2  D7A2               	goto	l218
  4210  0072A4  0A03               	xorlw	3	; case 14
  4211  0072A6  B4D8               	btfsc	status,2,c
  4212  0072A8  D7A2               	goto	l219
  4213  0072AA  0A01               	xorlw	1	; case 15
  4214  0072AC  B4D8               	btfsc	status,2,c
  4215  0072AE  D7A2               	goto	l220
  4216  0072B0  0A1F               	xorlw	31	; case 16
  4217  0072B2  B4D8               	btfsc	status,2,c
  4218  0072B4  D7A7               	goto	l222
  4219  0072B6  0A01               	xorlw	1	; case 17
  4220  0072B8  B4D8               	btfsc	status,2,c
  4221  0072BA  D7A7               	goto	l223
  4222  0072BC  0A03               	xorlw	3	; case 18
  4223  0072BE  B4D8               	btfsc	status,2,c
  4224  0072C0  D7A7               	goto	l224
  4225  0072C2  0A04               	xorlw	4	; case 22
  4226  0072C4  B4D8               	btfsc	status,2,c
  4227  0072C6  D7A7               	goto	l225
  4228  0072C8  0A01               	xorlw	1	; case 23
  4229  0072CA  B4D8               	btfsc	status,2,c
  4230  0072CC  D7A7               	goto	l226
  4231  0072CE                     l228:
  4232  0072CE  0012               	return	
  4233  0072D0                     __end_of_nivel_baixo:
  4234                           	opt stack 0
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           prodh	equ	0xFF4
  4240                           prodl	equ	0xFF3
  4241                           intcon	equ	0xFF2
  4242                           intcon2	equ	0xFF1
  4243                           intcon3	equ	0xFF0
  4244                           postinc0	equ	0xFEE
  4245                           wreg	equ	0xFE8
  4246                           postdec1	equ	0xFE5
  4247                           fsr1l	equ	0xFE1
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function _modoAttention *****************
  4251 ;; Defined at:
  4252 ;;		line 47 in file "bt_usb.h"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;		None               void
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    5
  4273 ;; This function calls:
  4274 ;;		_ATC
  4275 ;;		_nivel_alto
  4276 ;; This function is called by:
  4277 ;;		_configBR6
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text18
  4282  0065E8                     __ptext18:
  4283                           	opt stack 0
  4284  0065E8                     _modoAttention:
  4285                           	opt stack 23
  4286                           
  4287                           ;bt_usb.h: 49: nivel_alto(31754);
  4288                           
  4289                           ;incstack = 0
  4290  0065E8  0E7C               	movlw	124
  4291  0065EA  6E37               	movwf	nivel_alto@pino+1,c
  4292  0065EC  0E0A               	movlw	10
  4293  0065EE  6E36               	movwf	nivel_alto@pino,c
  4294  0065F0  EC9A  F037         	call	_nivel_alto	;wreg free
  4295                           
  4296                           ;bt_usb.h: 50: SPBRGH = 0x02; SPBRG=0x70; ATC();
  4297  0065F4  0E02               	movlw	2
  4298  0065F6  6EB0               	movwf	4016,c	;volatile
  4299  0065F8  0E70               	movlw	112
  4300  0065FA  6EAF               	movwf	4015,c	;volatile
  4301  0065FC  ECB6  F032         	call	_ATC	;wreg free
  4302                           
  4303                           ;bt_usb.h: 51: if(flagb==0){
  4304  006600  500A               	movf	_flagb+1,w,c
  4305  006602  1009               	iorwf	_flagb,w,c
  4306  006604  A4D8               	btfss	status,2,c
  4307  006606  D006               	goto	l2933
  4308                           
  4309                           ;bt_usb.h: 52: SPBRGH = 0x01; SPBRG=0x37; ATC();
  4310  006608  0E01               	movlw	1
  4311  00660A  6EB0               	movwf	4016,c	;volatile
  4312  00660C  0E37               	movlw	55
  4313  00660E  6EAF               	movwf	4015,c	;volatile
  4314  006610  ECB6  F032         	call	_ATC	;wreg free
  4315  006614                     l2933:
  4316                           
  4317                           ;bt_usb.h: 53: }
  4318                           ;bt_usb.h: 54: if(flagb==0){
  4319  006614  500A               	movf	_flagb+1,w,c
  4320  006616  1009               	iorwf	_flagb,w,c
  4321  006618  A4D8               	btfss	status,2,c
  4322  00661A  D006               	goto	l500
  4323                           
  4324                           ;bt_usb.h: 55: SPBRGH = 0x04; SPBRG=0xE1; ATC();
  4325  00661C  0E04               	movlw	4
  4326  00661E  6EB0               	movwf	4016,c	;volatile
  4327  006620  0EE1               	movlw	225
  4328  006622  6EAF               	movwf	4015,c	;volatile
  4329  006624  ECB6  F032         	call	_ATC	;wreg free
  4330  006628                     l500:
  4331  006628  0012               	return	
  4332  00662A                     __end_of_modoAttention:
  4333                           	opt stack 0
  4334                           tblptru	equ	0xFF8
  4335                           tblptrh	equ	0xFF7
  4336                           tblptrl	equ	0xFF6
  4337                           tablat	equ	0xFF5
  4338                           prodh	equ	0xFF4
  4339                           prodl	equ	0xFF3
  4340                           intcon	equ	0xFF2
  4341                           intcon2	equ	0xFF1
  4342                           intcon3	equ	0xFF0
  4343                           postinc0	equ	0xFEE
  4344                           wreg	equ	0xFE8
  4345                           postdec1	equ	0xFE5
  4346                           fsr1l	equ	0xFE1
  4347                           status	equ	0xFD8
  4348                           
  4349 ;; *************** function _nivel_alto *****************
  4350 ;; Defined at:
  4351 ;;		line 169 in file "SanUSB48X.h"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  pino            2   20[COMRAM] unsigned int 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;		None               void
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4365 ;;      Params:         2       0       0       0       0       0       0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4367 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4368 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4369 ;;Total ram usage:        4 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    2
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_modoAttention
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text19
  4380  006F34                     __ptext19:
  4381                           	opt stack 0
  4382  006F34                     _nivel_alto:
  4383                           	opt stack 25
  4384                           
  4385                           ;SanUSB48X.h: 172: switch(pino){
  4386                           
  4387                           ;incstack = 0
  4388  006F34  D045               	goto	l2869
  4389  006F36                     l178:
  4390  006F36  9092               	bcf	3986,0,c	;volatile
  4391  006F38  8080               	bsf	3968,0,c	;volatile
  4392  006F3A  D093               	goto	l201
  4393  006F3C                     l180:
  4394  006F3C  9292               	bcf	3986,1,c	;volatile
  4395  006F3E  8280               	bsf	3968,1,c	;volatile
  4396  006F40  D090               	goto	l201
  4397  006F42                     l181:
  4398  006F42  9492               	bcf	3986,2,c	;volatile
  4399  006F44  8480               	bsf	3968,2,c	;volatile
  4400  006F46  D08D               	goto	l201
  4401  006F48                     l182:
  4402  006F48  9692               	bcf	3986,3,c	;volatile
  4403  006F4A  8680               	bsf	3968,3,c	;volatile
  4404  006F4C  D08A               	goto	l201
  4405  006F4E                     l183:
  4406  006F4E  9892               	bcf	3986,4,c	;volatile
  4407  006F50  8880               	bsf	3968,4,c	;volatile
  4408  006F52  D087               	goto	l201
  4409  006F54                     l184:
  4410  006F54  9A92               	bcf	3986,5,c	;volatile
  4411  006F56  8A80               	bsf	3968,5,c	;volatile
  4412  006F58  D084               	goto	l201
  4413  006F5A                     l2855:
  4414  006F5A  0E00               	movlw	0
  4415  006F5C  6E92               	movwf	3986,c	;volatile
  4416  006F5E  6889               	setf	3977,c	;volatile
  4417  006F60  D080               	goto	l201
  4418  006F62                     l186:
  4419  006F62  9093               	bcf	3987,0,c	;volatile
  4420  006F64  8081               	bsf	3969,0,c	;volatile
  4421  006F66  D07D               	goto	l201
  4422  006F68                     l187:
  4423  006F68  9293               	bcf	3987,1,c	;volatile
  4424  006F6A  8281               	bsf	3969,1,c	;volatile
  4425  006F6C  D07A               	goto	l201
  4426  006F6E                     l188:
  4427  006F6E  9493               	bcf	3987,2,c	;volatile
  4428  006F70  8481               	bsf	3969,2,c	;volatile
  4429  006F72  D077               	goto	l201
  4430  006F74                     l189:
  4431  006F74  9693               	bcf	3987,3,c	;volatile
  4432  006F76  8681               	bsf	3969,3,c	;volatile
  4433  006F78  D074               	goto	l201
  4434  006F7A                     l190:
  4435  006F7A  9893               	bcf	3987,4,c	;volatile
  4436  006F7C  8881               	bsf	3969,4,c	;volatile
  4437  006F7E  D071               	goto	l201
  4438  006F80                     l191:
  4439  006F80  9A93               	bcf	3987,5,c	;volatile
  4440  006F82  8A81               	bsf	3969,5,c	;volatile
  4441  006F84  D06E               	goto	l201
  4442  006F86                     l192:
  4443  006F86  9C93               	bcf	3987,6,c	;volatile
  4444  006F88  8C81               	bsf	3969,6,c	;volatile
  4445  006F8A  D06B               	goto	l201
  4446  006F8C                     l193:
  4447  006F8C  9E93               	bcf	3987,7,c	;volatile
  4448  006F8E  8E81               	bsf	3969,7,c	;volatile
  4449  006F90  D068               	goto	l201
  4450  006F92                     l2859:
  4451  006F92  0E00               	movlw	0
  4452  006F94  6E93               	movwf	3987,c	;volatile
  4453  006F96  688A               	setf	3978,c	;volatile
  4454  006F98  D064               	goto	l201
  4455  006F9A                     l195:
  4456  006F9A  9094               	bcf	3988,0,c	;volatile
  4457  006F9C  8082               	bsf	3970,0,c	;volatile
  4458  006F9E  D061               	goto	l201
  4459  006FA0                     l196:
  4460  006FA0  9294               	bcf	3988,1,c	;volatile
  4461  006FA2  8282               	bsf	3970,1,c	;volatile
  4462  006FA4  D05E               	goto	l201
  4463  006FA6                     l197:
  4464  006FA6  9494               	bcf	3988,2,c	;volatile
  4465  006FA8  8482               	bsf	3970,2,c	;volatile
  4466  006FAA  D05B               	goto	l201
  4467  006FAC                     l198:
  4468  006FAC  9C94               	bcf	3988,6,c	;volatile
  4469  006FAE  8C82               	bsf	3970,6,c	;volatile
  4470  006FB0  D058               	goto	l201
  4471  006FB2                     l199:
  4472  006FB2  9E94               	bcf	3988,7,c	;volatile
  4473  006FB4  8E82               	bsf	3970,7,c	;volatile
  4474  006FB6  D055               	goto	l201
  4475  006FB8                     l2863:
  4476  006FB8  0E00               	movlw	0
  4477  006FBA  6E94               	movwf	3988,c	;volatile
  4478  006FBC  688B               	setf	3979,c	;volatile
  4479  006FBE  D051               	goto	l201
  4480  006FC0                     l2869:
  4481  006FC0  C036  F038         	movff	nivel_alto@pino,??_nivel_alto
  4482  006FC4  C037  F039         	movff	nivel_alto@pino+1,??_nivel_alto+1
  4483                           
  4484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4485                           ; Switch size 1, requested type "space"
  4486                           ; Number of cases is 2, Range of values is 15 to 124
  4487                           ; switch strategies available:
  4488                           ; Name         Instructions Cycles
  4489                           ; simple_byte            7     4 (average)
  4490                           ;	Chosen strategy is simple_byte
  4491  006FC8  5039               	movf	??_nivel_alto+1,w,c
  4492  006FCA  0A0F               	xorlw	15	; case 15
  4493  006FCC  B4D8               	btfsc	status,2,c
  4494  006FCE  D004               	goto	l4595
  4495  006FD0  0A73               	xorlw	115	; case 124
  4496  006FD2  B4D8               	btfsc	status,2,c
  4497  006FD4  D00C               	goto	l4597
  4498  006FD6  D045               	goto	l201
  4499  006FD8                     l4595:
  4500                           
  4501                           ; Switch size 1, requested type "space"
  4502                           ; Number of cases is 3, Range of values is 128 to 130
  4503                           ; switch strategies available:
  4504                           ; Name         Instructions Cycles
  4505                           ; simple_byte           10     6 (average)
  4506                           ;	Chosen strategy is simple_byte
  4507  006FD8  5038               	movf	??_nivel_alto,w,c
  4508  006FDA  0A80               	xorlw	128	; case 128
  4509  006FDC  B4D8               	btfsc	status,2,c
  4510  006FDE  D7BD               	goto	l2855
  4511  006FE0  0A01               	xorlw	1	; case 129
  4512  006FE2  B4D8               	btfsc	status,2,c
  4513  006FE4  D7D6               	goto	l2859
  4514  006FE6  0A03               	xorlw	3	; case 130
  4515  006FE8  B4D8               	btfsc	status,2,c
  4516  006FEA  D7E6               	goto	l2863
  4517  006FEC  D03A               	goto	l201
  4518  006FEE                     l4597:
  4519                           
  4520                           ; Switch size 1, requested type "space"
  4521                           ; Number of cases is 19, Range of values is 0 to 23
  4522                           ; switch strategies available:
  4523                           ; Name         Instructions Cycles
  4524                           ; simple_byte           58    30 (average)
  4525                           ;	Chosen strategy is simple_byte
  4526  006FEE  5038               	movf	??_nivel_alto,w,c
  4527  006FF0  0A00               	xorlw	0	; case 0
  4528  006FF2  B4D8               	btfsc	status,2,c
  4529  006FF4  D7A0               	goto	l178
  4530  006FF6  0A01               	xorlw	1	; case 1
  4531  006FF8  B4D8               	btfsc	status,2,c
  4532  006FFA  D7A0               	goto	l180
  4533  006FFC  0A03               	xorlw	3	; case 2
  4534  006FFE  B4D8               	btfsc	status,2,c
  4535  007000  D7A0               	goto	l181
  4536  007002  0A01               	xorlw	1	; case 3
  4537  007004  B4D8               	btfsc	status,2,c
  4538  007006  D7A0               	goto	l182
  4539  007008  0A07               	xorlw	7	; case 4
  4540  00700A  B4D8               	btfsc	status,2,c
  4541  00700C  D7A0               	goto	l183
  4542  00700E  0A01               	xorlw	1	; case 5
  4543  007010  B4D8               	btfsc	status,2,c
  4544  007012  D7A0               	goto	l184
  4545  007014  0A0D               	xorlw	13	; case 8
  4546  007016  B4D8               	btfsc	status,2,c
  4547  007018  D7A4               	goto	l186
  4548  00701A  0A01               	xorlw	1	; case 9
  4549  00701C  B4D8               	btfsc	status,2,c
  4550  00701E  D7A4               	goto	l187
  4551  007020  0A03               	xorlw	3	; case 10
  4552  007022  B4D8               	btfsc	status,2,c
  4553  007024  D7A4               	goto	l188
  4554  007026  0A01               	xorlw	1	; case 11
  4555  007028  B4D8               	btfsc	status,2,c
  4556  00702A  D7A4               	goto	l189
  4557  00702C  0A07               	xorlw	7	; case 12
  4558  00702E  B4D8               	btfsc	status,2,c
  4559  007030  D7A4               	goto	l190
  4560  007032  0A01               	xorlw	1	; case 13
  4561  007034  B4D8               	btfsc	status,2,c
  4562  007036  D7A4               	goto	l191
  4563  007038  0A03               	xorlw	3	; case 14
  4564  00703A  B4D8               	btfsc	status,2,c
  4565  00703C  D7A4               	goto	l192
  4566  00703E  0A01               	xorlw	1	; case 15
  4567  007040  B4D8               	btfsc	status,2,c
  4568  007042  D7A4               	goto	l193
  4569  007044  0A1F               	xorlw	31	; case 16
  4570  007046  B4D8               	btfsc	status,2,c
  4571  007048  D7A8               	goto	l195
  4572  00704A  0A01               	xorlw	1	; case 17
  4573  00704C  B4D8               	btfsc	status,2,c
  4574  00704E  D7A8               	goto	l196
  4575  007050  0A03               	xorlw	3	; case 18
  4576  007052  B4D8               	btfsc	status,2,c
  4577  007054  D7A8               	goto	l197
  4578  007056  0A04               	xorlw	4	; case 22
  4579  007058  B4D8               	btfsc	status,2,c
  4580  00705A  D7A8               	goto	l198
  4581  00705C  0A01               	xorlw	1	; case 23
  4582  00705E  B4D8               	btfsc	status,2,c
  4583  007060  D7A8               	goto	l199
  4584  007062                     l201:
  4585  007062  0012               	return	
  4586  007064                     __end_of_nivel_alto:
  4587                           	opt stack 0
  4588                           tblptru	equ	0xFF8
  4589                           tblptrh	equ	0xFF7
  4590                           tblptrl	equ	0xFF6
  4591                           tablat	equ	0xFF5
  4592                           prodh	equ	0xFF4
  4593                           prodl	equ	0xFF3
  4594                           intcon	equ	0xFF2
  4595                           intcon2	equ	0xFF1
  4596                           intcon3	equ	0xFF0
  4597                           postinc0	equ	0xFEE
  4598                           wreg	equ	0xFE8
  4599                           postdec1	equ	0xFE5
  4600                           fsr1l	equ	0xFE1
  4601                           status	equ	0xFD8
  4602                           
  4603 ;; *************** function _ATC *****************
  4604 ;; Defined at:
  4605 ;;		line 34 in file "bt_usb.h"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;		None               void
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4619 ;;      Params:         0       0       0       0       0       0       0       0       0
  4620 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4622 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4623 ;;Total ram usage:        0 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    4
  4626 ;; This function calls:
  4627 ;;		_inverte_saida
  4628 ;;		_sendr
  4629 ;;		_tempo_ms
  4630 ;; This function is called by:
  4631 ;;		_modoAttention
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text20
  4636  00656C                     __ptext20:
  4637                           	opt stack 0
  4638  00656C                     _ATC:
  4639                           	opt stack 23
  4640                           
  4641                           ;bt_usb.h: 36: inverte_saida(31759); tempo_ms(500);
  4642                           
  4643                           ;incstack = 0
  4644  00656C  0E7C               	movlw	124
  4645  00656E  6E37               	movwf	inverte_saida@pino+1,c
  4646  006570  0E0F               	movlw	15
  4647  006572  6E36               	movwf	inverte_saida@pino,c
  4648  006574  EC7F  F036         	call	_inverte_saida	;wreg free
  4649  006578  0E01               	movlw	1
  4650  00657A  6E3D               	movwf	tempo_ms@i+1,c
  4651  00657C  0EF4               	movlw	244
  4652  00657E  6E3C               	movwf	tempo_ms@i,c
  4653  006580  EC36  F033         	call	_tempo_ms	;wreg free
  4654                           
  4655                           ;bt_usb.h: 37: sendr((char *)atc);
  4656  006584  0E7F               	movlw	high _atc
  4657  006586  6E3A               	movwf	sendr@st+1,c
  4658  006588  0E3E               	movlw	low _atc
  4659  00658A  6E39               	movwf	sendr@st,c
  4660  00658C  EC84  F033         	call	_sendr	;wreg free
  4661                           
  4662                           ;bt_usb.h: 38: inverte_saida(31759); tempo_ms(1000);
  4663  006590  0E7C               	movlw	124
  4664  006592  6E37               	movwf	inverte_saida@pino+1,c
  4665  006594  0E0F               	movlw	15
  4666  006596  6E36               	movwf	inverte_saida@pino,c
  4667  006598  EC7F  F036         	call	_inverte_saida	;wreg free
  4668  00659C  0E03               	movlw	3
  4669  00659E  6E3D               	movwf	tempo_ms@i+1,c
  4670  0065A0  0EE8               	movlw	232
  4671  0065A2  6E3C               	movwf	tempo_ms@i,c
  4672  0065A4  EC36  F033         	call	_tempo_ms	;wreg free
  4673  0065A8  0012               	return	
  4674  0065AA                     __end_of_ATC:
  4675                           	opt stack 0
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           prodh	equ	0xFF4
  4681                           prodl	equ	0xFF3
  4682                           intcon	equ	0xFF2
  4683                           intcon2	equ	0xFF1
  4684                           intcon3	equ	0xFF0
  4685                           postinc0	equ	0xFEE
  4686                           wreg	equ	0xFE8
  4687                           postdec1	equ	0xFE5
  4688                           fsr1l	equ	0xFE1
  4689                           status	equ	0xFD8
  4690                           
  4691 ;; *************** function _tempo_ms *****************
  4692 ;; Defined at:
  4693 ;;		line 290 in file "SanUSB48X.h"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  i               2   26[COMRAM] unsigned int 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  k               2   28[COMRAM] unsigned int 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;		None               void
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4707 ;;      Params:         2       0       0       0       0       0       0       0       0
  4708 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4710 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4711 ;;Total ram usage:        4 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    3
  4714 ;; This function calls:
  4715 ;;		_Delay1KTCYx
  4716 ;;		___wmul
  4717 ;; This function is called by:
  4718 ;;		_ATC
  4719 ;;		_resetBT
  4720 ;;		_configBR6
  4721 ;;		_bt_ini
  4722 ;;		_main
  4723 ;;		_le_AD8bits
  4724 ;;		_le_AD10bits
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text21
  4729  00666C                     __ptext21:
  4730                           	opt stack 0
  4731  00666C                     _tempo_ms:
  4732                           	opt stack 27
  4733                           
  4734                           ;SanUSB48X.h: 292: EEADR =REG+0B11111100+1;
  4735                           
  4736                           ;incstack = 0
  4737  00666C  5046               	movf	_REG,w,c
  4738  00666E  0FFD               	addlw	253
  4739  006670  6EA9               	movwf	4009,c	;volatile
  4740                           
  4741                           ;SanUSB48X.h: 293: EECON1=REG+EEADR & 0B00001011;
  4742  006672  5046               	movf	_REG,w,c
  4743  006674  24A9               	addwf	4009,w,c	;volatile
  4744  006676  0B0B               	andlw	11
  4745  006678  6EA6               	movwf	4006,c	;volatile
  4746  00667A                     l286:
  4747  00667A  66A8               	tstfsz	4008,c	;volatile
  4748  00667C  D7FE               	goto	l286
  4749                           
  4750                           ;SanUSB48X.h: 295: for(k=0;k<12*i;k++) { Delay1KTCYx(1);}
  4751  00667E  0E00               	movlw	0
  4752  006680  6E3F               	movwf	tempo_ms@k+1,c
  4753  006682  0E00               	movlw	0
  4754  006684  6E3E               	movwf	tempo_ms@k,c
  4755  006686  D005               	goto	l2843
  4756  006688                     l2839:
  4757  006688  0E01               	movlw	1
  4758  00668A  EC50  F032         	call	_Delay1KTCYx
  4759  00668E  4A3E               	infsnz	tempo_ms@k,f,c
  4760  006690  2A3F               	incf	tempo_ms@k+1,f,c
  4761  006692                     l2843:
  4762  006692  C03C  F036         	movff	tempo_ms@i,___wmul@multiplier
  4763  006696  C03D  F037         	movff	tempo_ms@i+1,___wmul@multiplier+1
  4764  00669A  0E00               	movlw	0
  4765  00669C  6E39               	movwf	___wmul@multiplicand+1,c
  4766  00669E  0E0C               	movlw	12
  4767  0066A0  6E38               	movwf	___wmul@multiplicand,c
  4768  0066A2  EC99  F032         	call	___wmul	;wreg free
  4769  0066A6  5036               	movf	?___wmul,w,c
  4770  0066A8  5C3E               	subwf	tempo_ms@k,w,c
  4771  0066AA  5037               	movf	?___wmul+1,w,c
  4772  0066AC  583F               	subwfb	tempo_ms@k+1,w,c
  4773  0066AE  B0D8               	btfsc	status,0,c
  4774  0066B0  0012               	return	
  4775  0066B2  D7EA               	goto	l2839
  4776  0066B4                     __end_of_tempo_ms:
  4777                           	opt stack 0
  4778                           tblptru	equ	0xFF8
  4779                           tblptrh	equ	0xFF7
  4780                           tblptrl	equ	0xFF6
  4781                           tablat	equ	0xFF5
  4782                           prodh	equ	0xFF4
  4783                           prodl	equ	0xFF3
  4784                           intcon	equ	0xFF2
  4785                           intcon2	equ	0xFF1
  4786                           intcon3	equ	0xFF0
  4787                           postinc0	equ	0xFEE
  4788                           wreg	equ	0xFE8
  4789                           postdec1	equ	0xFE5
  4790                           fsr1l	equ	0xFE1
  4791                           status	equ	0xFD8
  4792                           
  4793 ;; *************** function ___wmul *****************
  4794 ;; Defined at:
  4795 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  multiplier      2   20[COMRAM] unsigned int 
  4798 ;;  multiplicand    2   22[COMRAM] unsigned int 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  product         2   24[COMRAM] unsigned int 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  2   20[COMRAM] unsigned int 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0, prodl, prodh
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4810 ;;      Params:         4       0       0       0       0       0       0       0       0
  4811 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4813 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4814 ;;Total ram usage:        6 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    2
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_tempo_ms
  4821 ;;		_tempo_us
  4822 ;;		_timer0_ms
  4823 ;;		_SetaPWM1
  4824 ;;		_SetaPWM2
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text22
  4829  006532                     __ptext22:
  4830                           	opt stack 0
  4831  006532                     ___wmul:
  4832                           	opt stack 27
  4833                           
  4834                           ;incstack = 0
  4835  006532  5036               	movf	___wmul@multiplier,w,c
  4836  006534  0238               	mulwf	___wmul@multiplicand,c
  4837  006536  CFF3 F03A          	movff	prodl,___wmul@product
  4838  00653A  CFF4 F03B          	movff	prodh,___wmul@product+1
  4839  00653E  5036               	movf	___wmul@multiplier,w,c
  4840  006540  0239               	mulwf	___wmul@multiplicand+1,c
  4841  006542  CFF3 FFF4          	movff	prodl,prodh
  4842  006546  6AF3               	clrf	prodl,c
  4843  006548  50F3               	movf	prodl,w,c
  4844  00654A  263A               	addwf	___wmul@product,f,c
  4845  00654C  50F4               	movf	prodh,w,c
  4846  00654E  223B               	addwfc	___wmul@product+1,f,c
  4847  006550  5037               	movf	___wmul@multiplier+1,w,c
  4848  006552  0238               	mulwf	___wmul@multiplicand,c
  4849  006554  CFF3 FFF4          	movff	prodl,prodh
  4850  006558  6AF3               	clrf	prodl,c
  4851  00655A  50F3               	movf	prodl,w,c
  4852  00655C  263A               	addwf	___wmul@product,f,c
  4853  00655E  50F4               	movf	prodh,w,c
  4854  006560  223B               	addwfc	___wmul@product+1,f,c
  4855  006562  C03A  F036         	movff	___wmul@product,?___wmul
  4856  006566  C03B  F037         	movff	___wmul@product+1,?___wmul+1
  4857  00656A  0012               	return	
  4858  00656C                     __end_of___wmul:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           prodh	equ	0xFF4
  4865                           prodl	equ	0xFF3
  4866                           intcon	equ	0xFF2
  4867                           intcon2	equ	0xFF1
  4868                           intcon3	equ	0xFF0
  4869                           postinc0	equ	0xFEE
  4870                           wreg	equ	0xFE8
  4871                           postdec1	equ	0xFE5
  4872                           fsr1l	equ	0xFE1
  4873                           status	equ	0xFD8
  4874                           
  4875 ;; *************** function _Delay1KTCYx *****************
  4876 ;; Defined at:
  4877 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\d1ktcyx.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  unit            1    wreg     unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  unit            1   20[COMRAM] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;		None               void
  4884 ;; Registers used:
  4885 ;;		wreg
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0
  4892 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4894 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4895 ;;Total ram usage:        1 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    2
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_tempo_ms
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text23
  4906  0064A0                     __ptext23:
  4907                           	opt stack 0
  4908  0064A0                     _Delay1KTCYx:
  4909                           	opt stack 27
  4910                           
  4911                           ;incstack = 0
  4912                           ;Delay1KTCYx@unit stored from wreg
  4913  0064A0  CFE8 F036          	movff	wreg,Delay1KTCYx@unit
  4914  0064A4                     l843:
  4915  0064A4  0EFA               	movlw	250
  4916  0064A6                     u2367:
  4917  0064A6  F000               	nop	
  4918  0064A8  2EE8               	decfsz	wreg,f,c
  4919  0064AA  D7FD               	goto	u2367
  4920  0064AC  2E36               	decfsz	Delay1KTCYx@unit,f,c
  4921  0064AE  D7FA               	goto	l843
  4922  0064B0  0012               	return	
  4923  0064B2                     __end_of_Delay1KTCYx:
  4924                           	opt stack 0
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           prodh	equ	0xFF4
  4930                           prodl	equ	0xFF3
  4931                           intcon	equ	0xFF2
  4932                           intcon2	equ	0xFF1
  4933                           intcon3	equ	0xFF0
  4934                           postinc0	equ	0xFEE
  4935                           wreg	equ	0xFE8
  4936                           postdec1	equ	0xFE5
  4937                           fsr1l	equ	0xFE1
  4938                           status	equ	0xFD8
  4939                           
  4940 ;; *************** function _sendr *****************
  4941 ;; Defined at:
  4942 ;;		line 482 in file "SanUSB48X.h"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  st              2   23[COMRAM] PTR unsigned char 
  4945 ;;		 -> icm(15), icg(9), icr(9), icn(17), 
  4946 ;;		 -> icb(9), icp(3), icms(19), icgs(20), 
  4947 ;;		 -> icrs(11), atc(5), 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;		None               void
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4959 ;;      Params:         2       0       0       0       0       0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4961 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4962 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4963 ;;Total ram usage:        4 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    3
  4966 ;; This function calls:
  4967 ;;		_sputc
  4968 ;; This function is called by:
  4969 ;;		_ATC
  4970 ;;		_resetBT
  4971 ;;		_configBR6
  4972 ;;		_bt_ini
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text24
  4977  006708                     __ptext24:
  4978                           	opt stack 0
  4979  006708                     _sendr:
  4980                           	opt stack 26
  4981                           
  4982                           ;SanUSB48X.h: 483: for(k=0;st[k]!='\0';k++) {sputc(st[k]);}
  4983                           
  4984                           ;incstack = 0
  4985  006708  6E3B               	movwf	??_sendr& (0+255),c
  4986  00670A  0E00               	movlw	0
  4987  00670C  6E19               	movwf	_k,c
  4988  00670E  503B               	movf	??_sendr& (0+255),w,c
  4989  006710  D013               	goto	l2851
  4990  006712                     l2847:
  4991  006712  5019               	movf	_k,w,c
  4992  006714  0D01               	mullw	1
  4993  006716  C039  F03B         	movff	sendr@st,??_sendr
  4994  00671A  C03A  F03C         	movff	sendr@st+1,??_sendr+1
  4995  00671E  50F3               	movf	prodl,w,c
  4996  006720  263B               	addwf	??_sendr,f,c
  4997  006722  50F4               	movf	prodh,w,c
  4998  006724  223C               	addwfc	??_sendr+1,f,c
  4999  006726  C03B  FFF6         	movff	??_sendr,tblptrl
  5000  00672A  C03C  FFF7         	movff	??_sendr+1,tblptrh
  5001  00672E  0008               	tblrd		*
  5002  006730  50F5               	movf	tablat,w,c
  5003  006732  EC83  F032         	call	_sputc
  5004  006736  2A19               	incf	_k,f,c
  5005  006738                     l2851:
  5006  006738  5019               	movf	_k,w,c
  5007  00673A  0D01               	mullw	1
  5008  00673C  C039  F03B         	movff	sendr@st,??_sendr
  5009  006740  C03A  F03C         	movff	sendr@st+1,??_sendr+1
  5010  006744  50F3               	movf	prodl,w,c
  5011  006746  263B               	addwf	??_sendr,f,c
  5012  006748  50F4               	movf	prodh,w,c
  5013  00674A  223C               	addwfc	??_sendr+1,f,c
  5014  00674C  C03B  FFF6         	movff	??_sendr,tblptrl
  5015  006750  C03C  FFF7         	movff	??_sendr+1,tblptrh
  5016  006754  0008               	tblrd		*
  5017  006756  50F5               	movf	tablat,w,c
  5018  006758  0900               	iorlw	0
  5019  00675A  B4D8               	btfsc	status,2,c
  5020  00675C  0012               	return	
  5021  00675E  D7D9               	goto	l2847
  5022  006760                     __end_of_sendr:
  5023                           	opt stack 0
  5024                           tblptru	equ	0xFF8
  5025                           tblptrh	equ	0xFF7
  5026                           tblptrl	equ	0xFF6
  5027                           tablat	equ	0xFF5
  5028                           prodh	equ	0xFF4
  5029                           prodl	equ	0xFF3
  5030                           intcon	equ	0xFF2
  5031                           intcon2	equ	0xFF1
  5032                           intcon3	equ	0xFF0
  5033                           postinc0	equ	0xFEE
  5034                           wreg	equ	0xFE8
  5035                           postdec1	equ	0xFE5
  5036                           fsr1l	equ	0xFE1
  5037                           status	equ	0xFD8
  5038                           
  5039 ;; *************** function _sputc *****************
  5040 ;; Defined at:
  5041 ;;		line 471 in file "SanUSB48X.h"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  c               1    wreg     unsigned char 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  c               1   22[COMRAM] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;		None               void
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0
  5056 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5057 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5058 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5059 ;;Total ram usage:        3 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    2
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_sendr
  5066 ;;		_bt_ini
  5067 ;;		_sends
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text25
  5072  006506                     __ptext25:
  5073                           	opt stack 0
  5074  006506                     _sputc:
  5075                           	opt stack 27
  5076                           
  5077                           ;incstack = 0
  5078                           ;sputc@c stored from wreg
  5079  006506  CFE8 F038          	movff	wreg,sputc@c
  5080  00650A                     l397:
  5081  00650A  A2AC               	btfss	4012,1,c	;volatile
  5082  00650C  D7FE               	goto	l397
  5083                           
  5084                           ;SanUSB48X.h: 474: TXREG=(c>>BAUDCONbits.BRG16)+REG;
  5085  00650E  A6B8               	btfss	4024,3,c	;volatile
  5086  006510  D003               	goto	u1220
  5087  006512  6A36               	clrf	??_sputc& (0+255),c
  5088  006514  2A36               	incf	??_sputc& (0+255),f,c
  5089  006516  D001               	goto	u1228
  5090  006518                     u1220:
  5091  006518  6A36               	clrf	??_sputc& (0+255),c
  5092  00651A                     u1228:
  5093  00651A  C038  F037         	movff	sputc@c,??_sputc+1
  5094  00651E  2A36               	incf	??_sputc,f,c
  5095  006520  D002               	goto	u1234
  5096  006522                     u1235:
  5097  006522  90D8               	bcf	status,0,c
  5098  006524  3237               	rrcf	??_sputc+1,f,c
  5099  006526                     u1234:
  5100  006526  2E36               	decfsz	??_sputc,f,c
  5101  006528  D7FC               	goto	u1235
  5102  00652A  5037               	movf	??_sputc+1,w,c
  5103  00652C  2446               	addwf	_REG,w,c
  5104  00652E  6EAD               	movwf	4013,c	;volatile
  5105  006530  0012               	return	
  5106  006532                     __end_of_sputc:
  5107                           	opt stack 0
  5108                           tblptru	equ	0xFF8
  5109                           tblptrh	equ	0xFF7
  5110                           tblptrl	equ	0xFF6
  5111                           tablat	equ	0xFF5
  5112                           prodh	equ	0xFF4
  5113                           prodl	equ	0xFF3
  5114                           intcon	equ	0xFF2
  5115                           intcon2	equ	0xFF1
  5116                           intcon3	equ	0xFF0
  5117                           postinc0	equ	0xFEE
  5118                           wreg	equ	0xFE8
  5119                           postdec1	equ	0xFE5
  5120                           fsr1l	equ	0xFE1
  5121                           status	equ	0xFD8
  5122                           
  5123 ;; *************** function _inverte_saida *****************
  5124 ;; Defined at:
  5125 ;;		line 228 in file "SanUSB48X.h"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  pino            2   20[COMRAM] unsigned int 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;		None               void
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5139 ;;      Params:         2       0       0       0       0       0       0       0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5141 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5142 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5143 ;;Total ram usage:        4 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    2
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_ATC
  5150 ;;		_resetBT
  5151 ;;		_configBR6
  5152 ;;		_bt_ini
  5153 ;;		_main
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text26
  5158  006CFE                     __ptext26:
  5159                           	opt stack 0
  5160  006CFE                     _inverte_saida:
  5161                           	opt stack 28
  5162                           
  5163                           ;SanUSB48X.h: 230: switch(pino){
  5164                           
  5165                           ;incstack = 0
  5166  006CFE  D03C               	goto	l2829
  5167  006D00                     l232:
  5168  006D00  9092               	bcf	3986,0,c	;volatile
  5169  006D02  7080               	btg	3968,0,c	;volatile
  5170  006D04  D07E               	goto	l253
  5171  006D06                     l234:
  5172  006D06  9292               	bcf	3986,1,c	;volatile
  5173  006D08  7280               	btg	3968,1,c	;volatile
  5174  006D0A  D07B               	goto	l253
  5175  006D0C                     l235:
  5176  006D0C  9492               	bcf	3986,2,c	;volatile
  5177  006D0E  7480               	btg	3968,2,c	;volatile
  5178  006D10  D078               	goto	l253
  5179  006D12                     l236:
  5180  006D12  9692               	bcf	3986,3,c	;volatile
  5181  006D14  7680               	btg	3968,3,c	;volatile
  5182  006D16  D075               	goto	l253
  5183  006D18                     l237:
  5184  006D18  9892               	bcf	3986,4,c	;volatile
  5185  006D1A  7880               	btg	3968,4,c	;volatile
  5186  006D1C  D072               	goto	l253
  5187  006D1E                     l238:
  5188  006D1E  9A92               	bcf	3986,5,c	;volatile
  5189  006D20  7A80               	btg	3968,5,c	;volatile
  5190  006D22  D06F               	goto	l253
  5191  006D24                     l239:
  5192  006D24  9093               	bcf	3987,0,c	;volatile
  5193  006D26  7081               	btg	3969,0,c	;volatile
  5194  006D28  D06C               	goto	l253
  5195  006D2A                     l240:
  5196  006D2A  9293               	bcf	3987,1,c	;volatile
  5197  006D2C  7281               	btg	3969,1,c	;volatile
  5198  006D2E  D069               	goto	l253
  5199  006D30                     l241:
  5200  006D30  9493               	bcf	3987,2,c	;volatile
  5201  006D32  7481               	btg	3969,2,c	;volatile
  5202  006D34  D066               	goto	l253
  5203  006D36                     l242:
  5204  006D36  9693               	bcf	3987,3,c	;volatile
  5205  006D38  7681               	btg	3969,3,c	;volatile
  5206  006D3A  D063               	goto	l253
  5207  006D3C                     l243:
  5208  006D3C  9893               	bcf	3987,4,c	;volatile
  5209  006D3E  7881               	btg	3969,4,c	;volatile
  5210  006D40  D060               	goto	l253
  5211  006D42                     l244:
  5212  006D42  9A93               	bcf	3987,5,c	;volatile
  5213  006D44  7A81               	btg	3969,5,c	;volatile
  5214  006D46  D05D               	goto	l253
  5215  006D48                     l245:
  5216  006D48  9C93               	bcf	3987,6,c	;volatile
  5217  006D4A  7C81               	btg	3969,6,c	;volatile
  5218  006D4C  D05A               	goto	l253
  5219  006D4E                     l246:
  5220  006D4E  9E93               	bcf	3987,7,c	;volatile
  5221  006D50  7E81               	btg	3969,7,c	;volatile
  5222  006D52  D057               	goto	l253
  5223  006D54                     l247:
  5224  006D54  9094               	bcf	3988,0,c	;volatile
  5225  006D56  7082               	btg	3970,0,c	;volatile
  5226  006D58  D054               	goto	l253
  5227  006D5A                     l248:
  5228  006D5A  9294               	bcf	3988,1,c	;volatile
  5229  006D5C  7282               	btg	3970,1,c	;volatile
  5230  006D5E  D051               	goto	l253
  5231  006D60                     l249:
  5232  006D60  9494               	bcf	3988,2,c	;volatile
  5233  006D62  7482               	btg	3970,2,c	;volatile
  5234  006D64  D04E               	goto	l253
  5235  006D66                     l250:
  5236  006D66  9C94               	bcf	3988,6,c	;volatile
  5237  006D68  7C82               	btg	3970,6,c	;volatile
  5238  006D6A  D04B               	goto	l253
  5239  006D6C                     l251:
  5240  006D6C  9E94               	bcf	3988,7,c	;volatile
  5241  006D6E  7E82               	btg	3970,7,c	;volatile
  5242  006D70  D048               	goto	l253
  5243  006D72                     l252:
  5244  006D72  9E95               	bcf	3989,7,c	;volatile
  5245  006D74  7E83               	btg	3971,7,c	;volatile
  5246  006D76  D045               	goto	l253
  5247  006D78                     l2829:
  5248  006D78  C036  F038         	movff	inverte_saida@pino,??_inverte_saida
  5249  006D7C  C037  F039         	movff	inverte_saida@pino+1,??_inverte_saida+1
  5250                           
  5251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5252                           ; Switch size 1, requested type "space"
  5253                           ; Number of cases is 1, Range of values is 124 to 124
  5254                           ; switch strategies available:
  5255                           ; Name         Instructions Cycles
  5256                           ; simple_byte            4     3 (average)
  5257                           ;	Chosen strategy is simple_byte
  5258  006D80  5039               	movf	??_inverte_saida+1,w,c
  5259  006D82  0A7C               	xorlw	124	; case 124
  5260  006D84  A4D8               	btfss	status,2,c
  5261  006D86  D03D               	goto	l253
  5262                           
  5263                           ; Switch size 1, requested type "space"
  5264                           ; Number of cases is 20, Range of values is 0 to 31
  5265                           ; switch strategies available:
  5266                           ; Name         Instructions Cycles
  5267                           ; simple_byte           61    31 (average)
  5268                           ;	Chosen strategy is simple_byte
  5269  006D88  5038               	movf	??_inverte_saida,w,c
  5270  006D8A  0A00               	xorlw	0	; case 0
  5271  006D8C  B4D8               	btfsc	status,2,c
  5272  006D8E  D7B8               	goto	l232
  5273  006D90  0A01               	xorlw	1	; case 1
  5274  006D92  B4D8               	btfsc	status,2,c
  5275  006D94  D7B8               	goto	l234
  5276  006D96  0A03               	xorlw	3	; case 2
  5277  006D98  B4D8               	btfsc	status,2,c
  5278  006D9A  D7B8               	goto	l235
  5279  006D9C  0A01               	xorlw	1	; case 3
  5280  006D9E  B4D8               	btfsc	status,2,c
  5281  006DA0  D7B8               	goto	l236
  5282  006DA2  0A07               	xorlw	7	; case 4
  5283  006DA4  B4D8               	btfsc	status,2,c
  5284  006DA6  D7B8               	goto	l237
  5285  006DA8  0A01               	xorlw	1	; case 5
  5286  006DAA  B4D8               	btfsc	status,2,c
  5287  006DAC  D7B8               	goto	l238
  5288  006DAE  0A0D               	xorlw	13	; case 8
  5289  006DB0  B4D8               	btfsc	status,2,c
  5290  006DB2  D7B8               	goto	l239
  5291  006DB4  0A01               	xorlw	1	; case 9
  5292  006DB6  B4D8               	btfsc	status,2,c
  5293  006DB8  D7B8               	goto	l240
  5294  006DBA  0A03               	xorlw	3	; case 10
  5295  006DBC  B4D8               	btfsc	status,2,c
  5296  006DBE  D7B8               	goto	l241
  5297  006DC0  0A01               	xorlw	1	; case 11
  5298  006DC2  B4D8               	btfsc	status,2,c
  5299  006DC4  D7B8               	goto	l242
  5300  006DC6  0A07               	xorlw	7	; case 12
  5301  006DC8  B4D8               	btfsc	status,2,c
  5302  006DCA  D7B8               	goto	l243
  5303  006DCC  0A01               	xorlw	1	; case 13
  5304  006DCE  B4D8               	btfsc	status,2,c
  5305  006DD0  D7B8               	goto	l244
  5306  006DD2  0A03               	xorlw	3	; case 14
  5307  006DD4  B4D8               	btfsc	status,2,c
  5308  006DD6  D7B8               	goto	l245
  5309  006DD8  0A01               	xorlw	1	; case 15
  5310  006DDA  B4D8               	btfsc	status,2,c
  5311  006DDC  D7B8               	goto	l246
  5312  006DDE  0A1F               	xorlw	31	; case 16
  5313  006DE0  B4D8               	btfsc	status,2,c
  5314  006DE2  D7B8               	goto	l247
  5315  006DE4  0A01               	xorlw	1	; case 17
  5316  006DE6  B4D8               	btfsc	status,2,c
  5317  006DE8  D7B8               	goto	l248
  5318  006DEA  0A03               	xorlw	3	; case 18
  5319  006DEC  B4D8               	btfsc	status,2,c
  5320  006DEE  D7B8               	goto	l249
  5321  006DF0  0A04               	xorlw	4	; case 22
  5322  006DF2  B4D8               	btfsc	status,2,c
  5323  006DF4  D7B8               	goto	l250
  5324  006DF6  0A01               	xorlw	1	; case 23
  5325  006DF8  B4D8               	btfsc	status,2,c
  5326  006DFA  D7B8               	goto	l251
  5327  006DFC  0A08               	xorlw	8	; case 31
  5328  006DFE  B4D8               	btfsc	status,2,c
  5329  006E00  D7B8               	goto	l252
  5330  006E02                     l253:
  5331  006E02  0012               	return	
  5332  006E04                     __end_of_inverte_saida:
  5333                           	opt stack 0
  5334                           tblptru	equ	0xFF8
  5335                           tblptrh	equ	0xFF7
  5336                           tblptrl	equ	0xFF6
  5337                           tablat	equ	0xFF5
  5338                           prodh	equ	0xFF4
  5339                           prodl	equ	0xFF3
  5340                           intcon	equ	0xFF2
  5341                           intcon2	equ	0xFF1
  5342                           intcon3	equ	0xFF0
  5343                           postinc0	equ	0xFEE
  5344                           wreg	equ	0xFE8
  5345                           postdec1	equ	0xFE5
  5346                           fsr1l	equ	0xFE1
  5347                           status	equ	0xFD8
  5348                           
  5349 ;; *************** function _interrupcao *****************
  5350 ;; Defined at:
  5351 ;;		line 25 in file "main.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;		None               void
  5358 ;; Registers used:
  5359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5367 ;;      Temps:         16       0       0       0       0       0       0       0       0
  5368 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5369 ;;Total ram usage:       16 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    1
  5372 ;; This function calls:
  5373 ;;		_ReadUSART
  5374 ;;		i2_inverte_saida
  5375 ;;		i2_nivel_alto
  5376 ;;		i2_nivel_baixo
  5377 ;; This function is called by:
  5378 ;;		Interrupt level 2
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	intcode
  5383  001008                     __pintcode:
  5384                           	opt stack 0
  5385  001008                     _interrupcao:
  5386                           	opt stack 23
  5387                           
  5388                           ;incstack = 0
  5389  001008  CFFA F028          	movff	pclath,??_interrupcao+2
  5390  00100C  CFFB F029          	movff	pclatu,??_interrupcao+3
  5391  001010  CFE9 F02A          	movff	fsr0l,??_interrupcao+4
  5392  001014  EDC6  F03A         	call	int_func,f	;refresh shadow registers
  5393                           pclatu	equ	0xFFB
  5394                           pclath	equ	0xFFA
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           prodh	equ	0xFF4
  5400                           prodl	equ	0xFF3
  5401                           intcon	equ	0xFF2
  5402                           intcon2	equ	0xFF1
  5403                           intcon3	equ	0xFF0
  5404                           postinc0	equ	0xFEE
  5405                           fsr0l	equ	0xFE9
  5406                           wreg	equ	0xFE8
  5407                           postdec1	equ	0xFE5
  5408                           fsr1l	equ	0xFE1
  5409                           status	equ	0xFD8
  5410                           
  5411                           	psect	intcode_body
  5412  00758C                     __pintcode_body:
  5413                           	opt stack 23
  5414  00758C                     int_func:
  5415                           	opt stack 23
  5416  00758C  0006               	pop		; remove dummy address from shadow register refresh
  5417  00758E  CFEA F02B          	movff	fsr0h,??_interrupcao+5
  5418  007592  CFE1 F02C          	movff	fsr1l,??_interrupcao+6
  5419  007596  CFE2 F02D          	movff	fsr1h,??_interrupcao+7
  5420  00759A  CFD9 F02E          	movff	fsr2l,??_interrupcao+8
  5421  00759E  CFDA F02F          	movff	fsr2h,??_interrupcao+9
  5422  0075A2  CFF3 F030          	movff	prodl,??_interrupcao+10
  5423  0075A6  CFF4 F031          	movff	prodh,??_interrupcao+11
  5424  0075AA  CFF6 F032          	movff	tblptrl,??_interrupcao+12
  5425  0075AE  CFF7 F033          	movff	tblptrh,??_interrupcao+13
  5426  0075B2  CFF8 F034          	movff	tblptru,??_interrupcao+14
  5427  0075B6  CFF5 F035          	movff	tablat,??_interrupcao+15
  5428                           
  5429                           ;main.c: 27: if (INTCONbits.TMR0IF) {
  5430  0075BA  A4F2               	btfss	intcon,2,c	;volatile
  5431  0075BC  D058               	goto	i2l3683
  5432                           
  5433                           ;main.c: 28: INTCONbits.TMR0IF = 0;
  5434  0075BE  94F2               	bcf	intcon,2,c	;volatile
  5435                           
  5436                           ;main.c: 29: i++; if(i>255){i=0;}
  5437  0075C0  4A0F               	infsnz	_i,f,c
  5438  0075C2  2A10               	incf	_i+1,f,c
  5439  0075C4  0E00               	movlw	0
  5440  0075C6  5C0F               	subwf	_i,w,c
  5441  0075C8  0E01               	movlw	1
  5442  0075CA  5810               	subwfb	_i+1,w,c
  5443  0075CC  A0D8               	btfss	status,0,c
  5444  0075CE  D004               	goto	i2l3663
  5445  0075D0  0E00               	movlw	0
  5446  0075D2  6E10               	movwf	_i+1,c
  5447  0075D4  0E00               	movlw	0
  5448  0075D6  6E0F               	movwf	_i,c
  5449  0075D8                     i2l3663:
  5450                           
  5451                           ;main.c: 30: if(i>=comand[1]){nivel_alto(31762);} else {nivel_baixo(31762);}
  5452  0075D8  0100               	movlb	0	; () banked
  5453  0075DA  0100               	movlb	0	; () banked
  5454  0075DC  5161               	movf	(_comand+1)& (0+255),w,b
  5455  0075DE  6E26               	movwf	??_interrupcao& (0+255),c
  5456  0075E0  6A27               	clrf	(??_interrupcao+1)& (0+255),c
  5457  0075E2  5026               	movf	??_interrupcao,w,c
  5458  0075E4  5C0F               	subwf	_i,w,c
  5459  0075E6  5027               	movf	??_interrupcao+1,w,c
  5460  0075E8  5810               	subwfb	_i+1,w,c
  5461  0075EA  A0D8               	btfss	status,0,c
  5462  0075EC  D007               	goto	i2l3667
  5463                           
  5464                           ; BSR set to: 0
  5465  0075EE  0E7C               	movlw	124
  5466  0075F0  6E23               	movwf	i2nivel_alto@pino+1,c
  5467  0075F2  0E12               	movlw	18
  5468  0075F4  6E22               	movwf	i2nivel_alto@pino,c
  5469  0075F6  EC02  F037         	call	i2_nivel_alto	;wreg free
  5470  0075FA  D006               	goto	i2l3669
  5471  0075FC                     i2l3667:
  5472  0075FC  0E7C               	movlw	124
  5473  0075FE  6E23               	movwf	i2nivel_baixo@pino+1,c
  5474  007600  0E12               	movlw	18
  5475  007602  6E22               	movwf	i2nivel_baixo@pino,c
  5476  007604  EC32  F038         	call	i2_nivel_baixo	;wreg free
  5477  007608                     i2l3669:
  5478                           
  5479                           ;main.c: 31: if(i>=comand[2]){nivel_alto(31760);} else {nivel_baixo(31760);}
  5480  007608  0100               	movlb	0	; () banked
  5481  00760A  0100               	movlb	0	; () banked
  5482  00760C  5162               	movf	(_comand+2)& (0+255),w,b
  5483  00760E  6E26               	movwf	??_interrupcao& (0+255),c
  5484  007610  6A27               	clrf	(??_interrupcao+1)& (0+255),c
  5485  007612  5026               	movf	??_interrupcao,w,c
  5486  007614  5C0F               	subwf	_i,w,c
  5487  007616  5027               	movf	??_interrupcao+1,w,c
  5488  007618  5810               	subwfb	_i+1,w,c
  5489  00761A  A0D8               	btfss	status,0,c
  5490  00761C  D007               	goto	i2l3673
  5491                           
  5492                           ; BSR set to: 0
  5493  00761E  0E7C               	movlw	124
  5494  007620  6E23               	movwf	i2nivel_alto@pino+1,c
  5495  007622  0E10               	movlw	16
  5496  007624  6E22               	movwf	i2nivel_alto@pino,c
  5497  007626  EC02  F037         	call	i2_nivel_alto	;wreg free
  5498  00762A  D006               	goto	i2l3675
  5499  00762C                     i2l3673:
  5500  00762C  0E7C               	movlw	124
  5501  00762E  6E23               	movwf	i2nivel_baixo@pino+1,c
  5502  007630  0E10               	movlw	16
  5503  007632  6E22               	movwf	i2nivel_baixo@pino,c
  5504  007634  EC32  F038         	call	i2_nivel_baixo	;wreg free
  5505  007638                     i2l3675:
  5506                           
  5507                           ;main.c: 32: if(i>=comand[3]){nivel_alto(31761);} else {nivel_baixo(31761);}
  5508  007638  0100               	movlb	0	; () banked
  5509  00763A  0100               	movlb	0	; () banked
  5510  00763C  5163               	movf	(_comand+3)& (0+255),w,b
  5511  00763E  6E26               	movwf	??_interrupcao& (0+255),c
  5512  007640  6A27               	clrf	(??_interrupcao+1)& (0+255),c
  5513  007642  5026               	movf	??_interrupcao,w,c
  5514  007644  5C0F               	subwf	_i,w,c
  5515  007646  5027               	movf	??_interrupcao+1,w,c
  5516  007648  5810               	subwfb	_i+1,w,c
  5517  00764A  A0D8               	btfss	status,0,c
  5518  00764C  D007               	goto	i2l3679
  5519                           
  5520                           ; BSR set to: 0
  5521  00764E  0E7C               	movlw	124
  5522  007650  6E23               	movwf	i2nivel_alto@pino+1,c
  5523  007652  0E11               	movlw	17
  5524  007654  6E22               	movwf	i2nivel_alto@pino,c
  5525  007656  EC02  F037         	call	i2_nivel_alto	;wreg free
  5526  00765A  D006               	goto	i2l3681
  5527  00765C                     i2l3679:
  5528  00765C  0E7C               	movlw	124
  5529  00765E  6E23               	movwf	i2nivel_baixo@pino+1,c
  5530  007660  0E11               	movlw	17
  5531  007662  6E22               	movwf	i2nivel_baixo@pino,c
  5532  007664  EC32  F038         	call	i2_nivel_baixo	;wreg free
  5533  007668                     i2l3681:
  5534                           
  5535                           ;main.c: 34: TMR0L = TMR0L + 16;
  5536  007668  50D6               	movf	4054,w,c	;volatile
  5537  00766A  0F10               	addlw	16
  5538  00766C  6ED6               	movwf	4054,c	;volatile
  5539  00766E                     i2l3683:
  5540                           
  5541                           ;main.c: 35: }
  5542                           ;main.c: 37: if (PIR1bits.RCIF) { INTCONbits.TMR0IE = 0;
  5543  00766E  AA9E               	btfss	3998,5,c	;volatile
  5544  007670  D0DB               	goto	i2l608
  5545  007672  9AF2               	bcf	intcon,5,c	;volatile
  5546                           
  5547                           ;main.c: 38: PIR1bits.RCIF=0;
  5548  007674  9A9E               	bcf	3998,5,c	;volatile
  5549                           
  5550                           ;main.c: 39: comando[n] = ReadUSART();
  5551  007676  501B               	movf	_n,w,c
  5552  007678  0D01               	mullw	1
  5553  00767A  0100               	movlb	0	; () banked
  5554  00767C  0E7E               	movlw	low _comando
  5555  00767E  24F3               	addwf	prodl,w,c
  5556  007680  6ED9               	movwf	fsr2l,c
  5557  007682  0100               	movlb	0	; () banked
  5558  007684  0E00               	movlw	high _comando
  5559  007686  20F4               	addwfc	prodh,w,c
  5560  007688  6EDA               	movwf	fsr2h,c
  5561  00768A  EC63  F032         	call	_ReadUSART	;wreg free
  5562  00768E  6EDF               	movwf	indf2,c
  5563                           
  5564                           ;main.c: 40: if (comando[n]==79) {flagb=1;n=0;}
  5565  007690  501B               	movf	_n,w,c
  5566  007692  0D01               	mullw	1
  5567  007694  0100               	movlb	0	; () banked
  5568  007696  0E7E               	movlw	low _comando
  5569  007698  24F3               	addwf	prodl,w,c
  5570  00769A  6ED9               	movwf	fsr2l,c
  5571  00769C  0100               	movlb	0	; () banked
  5572  00769E  0E00               	movlw	high _comando
  5573  0076A0  20F4               	addwfc	prodh,w,c
  5574  0076A2  6EDA               	movwf	fsr2h,c
  5575  0076A4  0E4F               	movlw	79
  5576  0076A6  62DF               	cpfseq	indf2,c
  5577  0076A8  D008               	goto	i2l596
  5578                           
  5579                           ; BSR set to: 0
  5580  0076AA  0E00               	movlw	0
  5581  0076AC  6E0A               	movwf	_flagb+1,c
  5582  0076AE  0E01               	movlw	1
  5583  0076B0  6E09               	movwf	_flagb,c
  5584                           
  5585                           ; BSR set to: 0
  5586  0076B2  6E26               	movwf	??_interrupcao& (0+255),c
  5587  0076B4  0E00               	movlw	0
  5588  0076B6  6E1B               	movwf	_n,c
  5589  0076B8  5026               	movf	??_interrupcao& (0+255),w,c
  5590  0076BA                     i2l596:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;main.c: 42: if (m>13 && comando[0]==65) {m=n; flag=1;}
  5594  0076BA  0E0D               	movlw	13
  5595  0076BC  641A               	cpfsgt	_m,c
  5596  0076BE  D00C               	goto	i2l3701
  5597                           
  5598                           ; BSR set to: 0
  5599  0076C0  0100               	movlb	0	; () banked
  5600  0076C2  0100               	movlb	0	; () banked
  5601  0076C4  517E               	movf	_comando& (0+255),w,b
  5602  0076C6  0A41               	xorlw	65
  5603  0076C8  A4D8               	btfss	status,2,c
  5604  0076CA  D006               	goto	i2l3701
  5605                           
  5606                           ; BSR set to: 0
  5607  0076CC  C01B  F01A         	movff	_n,_m
  5608                           
  5609                           ; BSR set to: 0
  5610  0076D0  0E00               	movlw	0
  5611  0076D2  6E08               	movwf	_flag+1,c
  5612  0076D4  0E01               	movlw	1
  5613  0076D6  6E07               	movwf	_flag,c
  5614  0076D8                     i2l3701:
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;main.c: 44: if (comando[n]=='R'){n=0;comando[0] = 'R';}
  5618  0076D8  501B               	movf	_n,w,c
  5619  0076DA  0D01               	mullw	1
  5620  0076DC  0100               	movlb	0	; () banked
  5621  0076DE  0E7E               	movlw	low _comando
  5622  0076E0  24F3               	addwf	prodl,w,c
  5623  0076E2  6ED9               	movwf	fsr2l,c
  5624  0076E4  0100               	movlb	0	; () banked
  5625  0076E6  0E00               	movlw	high _comando
  5626  0076E8  20F4               	addwfc	prodh,w,c
  5627  0076EA  6EDA               	movwf	fsr2h,c
  5628  0076EC  0E52               	movlw	82
  5629  0076EE  62DF               	cpfseq	indf2,c
  5630  0076F0  D00A               	goto	i2l3705
  5631                           
  5632                           ; BSR set to: 0
  5633  0076F2  6E26               	movwf	??_interrupcao& (0+255),c
  5634  0076F4  0E00               	movlw	0
  5635  0076F6  6E1B               	movwf	_n,c
  5636  0076F8  5026               	movf	??_interrupcao& (0+255),w,c
  5637  0076FA  6E26               	movwf	??_interrupcao& (0+255),c
  5638  0076FC  0E52               	movlw	82
  5639  0076FE  0100               	movlb	0	; () banked
  5640  007700  0100               	movlb	0	; () banked
  5641  007702  6F7E               	movwf	_comando& (0+255),b
  5642  007704  5026               	movf	??_interrupcao& (0+255),w,c
  5643  007706                     i2l3705:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;main.c: 46: if (n>=3 && comando[0]=='R') {
  5647  007706  0E02               	movlw	2
  5648  007708  641B               	cpfsgt	_n,c
  5649  00770A  D01D               	goto	i2l3717
  5650                           
  5651                           ; BSR set to: 0
  5652  00770C  0100               	movlb	0	; () banked
  5653  00770E  0100               	movlb	0	; () banked
  5654  007710  517E               	movf	_comando& (0+255),w,b
  5655  007712  0A52               	xorlw	82
  5656  007714  A4D8               	btfss	status,2,c
  5657  007716  D017               	goto	i2l3717
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;main.c: 47: comand[1]= comando[1];
  5661  007718  C07F  F061         	movff	_comando+1,_comand+1
  5662                           
  5663                           ;main.c: 48: comand[2]= comando[2];
  5664  00771C  C080  F062         	movff	_comando+2,_comand+2
  5665                           
  5666                           ;main.c: 49: comand[3]= comando[3];
  5667  007720  C081  F063         	movff	_comando+3,_comand+3
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;main.c: 50: n=0; comando[0] = 32;
  5671  007724  6E26               	movwf	??_interrupcao& (0+255),c
  5672  007726  0E00               	movlw	0
  5673  007728  6E1B               	movwf	_n,c
  5674  00772A  5026               	movf	??_interrupcao& (0+255),w,c
  5675  00772C  6E26               	movwf	??_interrupcao& (0+255),c
  5676  00772E  0E20               	movlw	32
  5677  007730  0100               	movlb	0	; () banked
  5678  007732  0100               	movlb	0	; () banked
  5679  007734  6F7E               	movwf	_comando& (0+255),b
  5680  007736  5026               	movf	??_interrupcao& (0+255),w,c
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;main.c: 51: inverte_saida(31759); INTCONbits.TMR0IE = 1;
  5684  007738  0E7C               	movlw	124
  5685  00773A  6E23               	movwf	i2inverte_saida@pino+1,c
  5686  00773C  0E0F               	movlw	15
  5687  00773E  6E22               	movwf	i2inverte_saida@pino,c
  5688  007740  ECFC  F035         	call	i2_inverte_saida	;wreg free
  5689  007744  8AF2               	bsf	intcon,5,c	;volatile
  5690  007746                     i2l3717:
  5691                           
  5692                           ;main.c: 52: }
  5693                           ;main.c: 53: ++n; m=n; if(n>=29){n=0;}
  5694  007746  2A1B               	incf	_n,f,c
  5695  007748  C01B  F01A         	movff	_n,_m
  5696  00774C  0E1C               	movlw	28
  5697  00774E  641B               	cpfsgt	_n,c
  5698  007750  D059               	goto	i2l3763
  5699  007752  6E26               	movwf	??_interrupcao& (0+255),c
  5700  007754  0E00               	movlw	0
  5701  007756  6E1B               	movwf	_n,c
  5702  007758  5026               	movf	??_interrupcao& (0+255),w,c
  5703  00775A  D054               	goto	i2l3763
  5704  00775C                     i2l3725:
  5705  00775C  0E00               	movlw	0
  5706  00775E  6E08               	movwf	_flag+1,c
  5707  007760  0E00               	movlw	0
  5708  007762  6E07               	movwf	_flag,c
  5709  007764  0E00               	movlw	0
  5710  007766  6E04               	movwf	_chegou+1,c
  5711  007768  0E01               	movlw	1
  5712  00776A  6E03               	movwf	_chegou,c
  5713  00776C  6E26               	movwf	??_interrupcao& (0+255),c
  5714  00776E  0E00               	movlw	0
  5715  007770  6E1A               	movwf	_m,c
  5716  007772  5026               	movf	??_interrupcao& (0+255),w,c
  5717  007774                     i2l3729:
  5718  007774  0E00               	movlw	0
  5719  007776  6E08               	movwf	_flag+1,c
  5720  007778  0E00               	movlw	0
  5721  00777A  6E07               	movwf	_flag,c
  5722  00777C  6E26               	movwf	??_interrupcao& (0+255),c
  5723  00777E  0E00               	movlw	0
  5724  007780  6E1B               	movwf	_n,c
  5725  007782  5026               	movf	??_interrupcao& (0+255),w,c
  5726  007784  0E00               	movlw	0
  5727  007786  6E02               	movwf	_c+1,c
  5728  007788  0E01               	movlw	1
  5729  00778A  6E01               	movwf	_c,c
  5730  00778C  0E7C               	movlw	124
  5731  00778E  6E23               	movwf	i2nivel_alto@pino+1,c
  5732  007790  0E0F               	movlw	15
  5733  007792  6E22               	movwf	i2nivel_alto@pino,c
  5734  007794  EC02  F037         	call	i2_nivel_alto	;wreg free
  5735  007798  0E00               	movlw	0
  5736  00779A  6E06               	movwf	_envia+1,c
  5737  00779C  0E01               	movlw	1
  5738  00779E  D00F               	goto	L2
  5739  0077A0                     i2l3737:
  5740  0077A0  0E00               	movlw	0
  5741  0077A2  6E08               	movwf	_flag+1,c
  5742  0077A4  0E00               	movlw	0
  5743  0077A6  6E07               	movwf	_flag,c
  5744  0077A8  6E26               	movwf	??_interrupcao& (0+255),c
  5745  0077AA  0E00               	movlw	0
  5746  0077AC  6E1B               	movwf	_n,c
  5747  0077AE  5026               	movf	??_interrupcao& (0+255),w,c
  5748  0077B0  0E7C               	movlw	124
  5749  0077B2  6E23               	movwf	i2nivel_baixo@pino+1,c
  5750  0077B4  0E0F               	movlw	15
  5751  0077B6  6E22               	movwf	i2nivel_baixo@pino,c
  5752  0077B8  EC32  F038         	call	i2_nivel_baixo	;wreg free
  5753  0077BC  D01F               	goto	L4
  5754  0077BE                     L2:
  5755  0077BE  6E05               	movwf	_envia,c
  5756                           
  5757                           ;main.c: 61: break;
  5758  0077C0  D033               	goto	i2l608
  5759  0077C2                     i2l3745:
  5760  0077C2  0E00               	movlw	0
  5761  0077C4  6E08               	movwf	_flag+1,c
  5762  0077C6  0E00               	movlw	0
  5763  0077C8  6E07               	movwf	_flag,c
  5764  0077CA  6E26               	movwf	??_interrupcao& (0+255),c
  5765  0077CC  0E00               	movlw	0
  5766  0077CE  6E1B               	movwf	_n,c
  5767  0077D0  5026               	movf	??_interrupcao& (0+255),w,c
  5768  0077D2  0E7C               	movlw	124
  5769  0077D4  6E23               	movwf	i2nivel_alto@pino+1,c
  5770  0077D6  0E0F               	movlw	15
  5771  0077D8  6E22               	movwf	i2nivel_alto@pino,c
  5772  0077DA  EC02  F037         	call	i2_nivel_alto	;wreg free
  5773  0077DE  D00E               	goto	L4
  5774  0077E0                     i2l3753:
  5775  0077E0  0E00               	movlw	0
  5776  0077E2  6E08               	movwf	_flag+1,c
  5777  0077E4  0E00               	movlw	0
  5778  0077E6  6E07               	movwf	_flag,c
  5779  0077E8  6E26               	movwf	??_interrupcao& (0+255),c
  5780  0077EA  0E00               	movlw	0
  5781  0077EC  6E1B               	movwf	_n,c
  5782  0077EE  5026               	movf	??_interrupcao& (0+255),w,c
  5783  0077F0  0E7C               	movlw	124
  5784  0077F2  6E23               	movwf	i2inverte_saida@pino+1,c
  5785  0077F4  0E0F               	movlw	15
  5786  0077F6  6E22               	movwf	i2inverte_saida@pino,c
  5787  0077F8  ECFC  F035         	call	i2_inverte_saida	;wreg free
  5788  0077FC                     L4:
  5789  0077FC  0E00               	movlw	0
  5790  0077FE  6E06               	movwf	_envia+1,c
  5791  007800  0E00               	movlw	0
  5792  007802  D7DD               	goto	L2
  5793  007804                     i2l3763:
  5794  007804  0100               	movlb	0	; () banked
  5795  007806  0100               	movlb	0	; () banked
  5796  007808  517E               	movf	_comando& (0+255),w,b
  5797                           
  5798                           ; Switch size 1, requested type "space"
  5799                           ; Number of cases is 5, Range of values is 68 to 84
  5800                           ; switch strategies available:
  5801                           ; Name         Instructions Cycles
  5802                           ; simple_byte           16     9 (average)
  5803                           ;	Chosen strategy is simple_byte
  5804  00780A  0A44               	xorlw	68	; case 68
  5805  00780C  B4D8               	btfsc	status,2,c
  5806  00780E  D7C8               	goto	i2l3737
  5807  007810  0A08               	xorlw	8	; case 76
  5808  007812  B4D8               	btfsc	status,2,c
  5809  007814  D7AF               	goto	i2l3729
  5810  007816  0A03               	xorlw	3	; case 79
  5811  007818  B4D8               	btfsc	status,2,c
  5812  00781A  D7A0               	goto	i2l3725
  5813  00781C  0A1F               	xorlw	31	; case 80
  5814  00781E  B4D8               	btfsc	status,2,c
  5815  007820  D7D0               	goto	i2l3745
  5816  007822  0A04               	xorlw	4	; case 84
  5817  007824  B4D8               	btfsc	status,2,c
  5818  007826  D7DC               	goto	i2l3753
  5819  007828                     i2l608:
  5820  007828  C035  FFF5         	movff	??_interrupcao+15,tablat
  5821  00782C  C034  FFF8         	movff	??_interrupcao+14,tblptru
  5822  007830  C033  FFF7         	movff	??_interrupcao+13,tblptrh
  5823  007834  C032  FFF6         	movff	??_interrupcao+12,tblptrl
  5824  007838  C031  FFF4         	movff	??_interrupcao+11,prodh
  5825  00783C  C030  FFF3         	movff	??_interrupcao+10,prodl
  5826  007840  C02F  FFDA         	movff	??_interrupcao+9,fsr2h
  5827  007844  C02E  FFD9         	movff	??_interrupcao+8,fsr2l
  5828  007848  C02D  FFE2         	movff	??_interrupcao+7,fsr1h
  5829  00784C  C02C  FFE1         	movff	??_interrupcao+6,fsr1l
  5830  007850  C02B  FFEA         	movff	??_interrupcao+5,fsr0h
  5831  007854  C02A  FFE9         	movff	??_interrupcao+4,fsr0l
  5832  007858  C029  FFFB         	movff	??_interrupcao+3,pclatu
  5833  00785C  C028  FFFA         	movff	??_interrupcao+2,pclath
  5834  007860  0011               	retfie		f
  5835  007862                     __end_of_interrupcao:
  5836                           	opt stack 0
  5837                           pclatu	equ	0xFFB
  5838                           pclath	equ	0xFFA
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           prodh	equ	0xFF4
  5844                           prodl	equ	0xFF3
  5845                           intcon	equ	0xFF2
  5846                           intcon2	equ	0xFF1
  5847                           intcon3	equ	0xFF0
  5848                           postinc0	equ	0xFEE
  5849                           fsr0h	equ	0xFEA
  5850                           fsr0l	equ	0xFE9
  5851                           wreg	equ	0xFE8
  5852                           postdec1	equ	0xFE5
  5853                           fsr1h	equ	0xFE2
  5854                           fsr1l	equ	0xFE1
  5855                           indf2	equ	0xFDF
  5856                           fsr2h	equ	0xFDA
  5857                           fsr2l	equ	0xFD9
  5858                           status	equ	0xFD8
  5859                           
  5860 ;; *************** function i2_nivel_baixo *****************
  5861 ;; Defined at:
  5862 ;;		line 199 in file "SanUSB48X.h"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  pino            2    0[COMRAM] unsigned int 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;		None               void
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5876 ;;      Params:         2       0       0       0       0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5878 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5879 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5880 ;;Total ram usage:        4 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_interrupcao
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           	psect	text28
  5890  007064                     __ptext28:
  5891                           	opt stack 0
  5892  007064                     i2_nivel_baixo:
  5893                           	opt stack 23
  5894                           
  5895                           ;SanUSB48X.h: 201: switch(pino){
  5896                           
  5897                           ;incstack = 0
  5898  007064  D048               	goto	i2l3509
  5899  007066                     i2l205:
  5900  007066  9092               	bcf	3986,0,c	;volatile
  5901  007068  9080               	bcf	3968,0,c	;volatile
  5902  00706A  D096               	goto	i2l228
  5903  00706C                     i2l207:
  5904  00706C  9292               	bcf	3986,1,c	;volatile
  5905  00706E  9280               	bcf	3968,1,c	;volatile
  5906  007070  D093               	goto	i2l228
  5907  007072                     i2l208:
  5908  007072  9492               	bcf	3986,2,c	;volatile
  5909  007074  9480               	bcf	3968,2,c	;volatile
  5910  007076  D090               	goto	i2l228
  5911  007078                     i2l209:
  5912  007078  9692               	bcf	3986,3,c	;volatile
  5913  00707A  9680               	bcf	3968,3,c	;volatile
  5914  00707C  D08D               	goto	i2l228
  5915  00707E                     i2l210:
  5916  00707E  9892               	bcf	3986,4,c	;volatile
  5917  007080  9880               	bcf	3968,4,c	;volatile
  5918  007082  D08A               	goto	i2l228
  5919  007084                     i2l211:
  5920  007084  9A92               	bcf	3986,5,c	;volatile
  5921  007086  9A80               	bcf	3968,5,c	;volatile
  5922  007088  D087               	goto	i2l228
  5923  00708A                     i2l3501:
  5924  00708A  0E00               	movlw	0
  5925  00708C  6E92               	movwf	3986,c	;volatile
  5926  00708E  0E00               	movlw	0
  5927  007090  6E89               	movwf	3977,c	;volatile
  5928  007092  D082               	goto	i2l228
  5929  007094                     i2l213:
  5930  007094  9093               	bcf	3987,0,c	;volatile
  5931  007096  9081               	bcf	3969,0,c	;volatile
  5932  007098  D07F               	goto	i2l228
  5933  00709A                     i2l214:
  5934  00709A  9293               	bcf	3987,1,c	;volatile
  5935  00709C  9281               	bcf	3969,1,c	;volatile
  5936  00709E  D07C               	goto	i2l228
  5937  0070A0                     i2l215:
  5938  0070A0  9493               	bcf	3987,2,c	;volatile
  5939  0070A2  9481               	bcf	3969,2,c	;volatile
  5940  0070A4  D079               	goto	i2l228
  5941  0070A6                     i2l216:
  5942  0070A6  9693               	bcf	3987,3,c	;volatile
  5943  0070A8  9681               	bcf	3969,3,c	;volatile
  5944  0070AA  D076               	goto	i2l228
  5945  0070AC                     i2l217:
  5946  0070AC  9893               	bcf	3987,4,c	;volatile
  5947  0070AE  9881               	bcf	3969,4,c	;volatile
  5948  0070B0  D073               	goto	i2l228
  5949  0070B2                     i2l218:
  5950  0070B2  9A93               	bcf	3987,5,c	;volatile
  5951  0070B4  9A81               	bcf	3969,5,c	;volatile
  5952  0070B6  D070               	goto	i2l228
  5953  0070B8                     i2l219:
  5954  0070B8  9C93               	bcf	3987,6,c	;volatile
  5955  0070BA  9C81               	bcf	3969,6,c	;volatile
  5956  0070BC  D06D               	goto	i2l228
  5957  0070BE                     i2l220:
  5958  0070BE  9E93               	bcf	3987,7,c	;volatile
  5959  0070C0  9E81               	bcf	3969,7,c	;volatile
  5960  0070C2  D06A               	goto	i2l228
  5961  0070C4                     i2l3503:
  5962  0070C4  0E00               	movlw	0
  5963  0070C6  6E93               	movwf	3987,c	;volatile
  5964  0070C8  0E00               	movlw	0
  5965  0070CA  6E8A               	movwf	3978,c	;volatile
  5966  0070CC  D065               	goto	i2l228
  5967  0070CE                     i2l222:
  5968  0070CE  9094               	bcf	3988,0,c	;volatile
  5969  0070D0  9082               	bcf	3970,0,c	;volatile
  5970  0070D2  D062               	goto	i2l228
  5971  0070D4                     i2l223:
  5972  0070D4  9294               	bcf	3988,1,c	;volatile
  5973  0070D6  9282               	bcf	3970,1,c	;volatile
  5974  0070D8  D05F               	goto	i2l228
  5975  0070DA                     i2l224:
  5976  0070DA  9494               	bcf	3988,2,c	;volatile
  5977  0070DC  9482               	bcf	3970,2,c	;volatile
  5978  0070DE  D05C               	goto	i2l228
  5979  0070E0                     i2l225:
  5980  0070E0  9C94               	bcf	3988,6,c	;volatile
  5981  0070E2  9C82               	bcf	3970,6,c	;volatile
  5982  0070E4  D059               	goto	i2l228
  5983  0070E6                     i2l226:
  5984  0070E6  9E94               	bcf	3988,7,c	;volatile
  5985  0070E8  9E82               	bcf	3970,7,c	;volatile
  5986  0070EA  D056               	goto	i2l228
  5987  0070EC                     i2l3505:
  5988  0070EC  0E00               	movlw	0
  5989  0070EE  6E94               	movwf	3988,c	;volatile
  5990  0070F0  0E00               	movlw	0
  5991  0070F2  6E8B               	movwf	3979,c	;volatile
  5992  0070F4  D051               	goto	i2l228
  5993  0070F6                     i2l3509:
  5994  0070F6  C022  F024         	movff	i2nivel_baixo@pino,??i2_nivel_baixo
  5995  0070FA  C023  F025         	movff	i2nivel_baixo@pino+1,??i2_nivel_baixo+1
  5996                           
  5997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5998                           ; Switch size 1, requested type "space"
  5999                           ; Number of cases is 2, Range of values is 15 to 124
  6000                           ; switch strategies available:
  6001                           ; Name         Instructions Cycles
  6002                           ; simple_byte            7     4 (average)
  6003                           ;	Chosen strategy is simple_byte
  6004  0070FE  5025               	movf	??i2_nivel_baixo+1,w,c
  6005  007100  0A0F               	xorlw	15	; case 15
  6006  007102  B4D8               	btfsc	status,2,c
  6007  007104  D004               	goto	i2l4601
  6008  007106  0A73               	xorlw	115	; case 124
  6009  007108  B4D8               	btfsc	status,2,c
  6010  00710A  D00C               	goto	i2l4603
  6011  00710C  D045               	goto	i2l228
  6012  00710E                     i2l4601:
  6013                           
  6014                           ; Switch size 1, requested type "space"
  6015                           ; Number of cases is 3, Range of values is 128 to 130
  6016                           ; switch strategies available:
  6017                           ; Name         Instructions Cycles
  6018                           ; simple_byte           10     6 (average)
  6019                           ;	Chosen strategy is simple_byte
  6020  00710E  5024               	movf	??i2_nivel_baixo,w,c
  6021  007110  0A80               	xorlw	128	; case 128
  6022  007112  B4D8               	btfsc	status,2,c
  6023  007114  D7BA               	goto	i2l3501
  6024  007116  0A01               	xorlw	1	; case 129
  6025  007118  B4D8               	btfsc	status,2,c
  6026  00711A  D7D4               	goto	i2l3503
  6027  00711C  0A03               	xorlw	3	; case 130
  6028  00711E  B4D8               	btfsc	status,2,c
  6029  007120  D7E5               	goto	i2l3505
  6030  007122  D03A               	goto	i2l228
  6031  007124                     i2l4603:
  6032                           
  6033                           ; Switch size 1, requested type "space"
  6034                           ; Number of cases is 19, Range of values is 0 to 23
  6035                           ; switch strategies available:
  6036                           ; Name         Instructions Cycles
  6037                           ; simple_byte           58    30 (average)
  6038                           ;	Chosen strategy is simple_byte
  6039  007124  5024               	movf	??i2_nivel_baixo,w,c
  6040  007126  0A00               	xorlw	0	; case 0
  6041  007128  B4D8               	btfsc	status,2,c
  6042  00712A  D79D               	goto	i2l205
  6043  00712C  0A01               	xorlw	1	; case 1
  6044  00712E  B4D8               	btfsc	status,2,c
  6045  007130  D79D               	goto	i2l207
  6046  007132  0A03               	xorlw	3	; case 2
  6047  007134  B4D8               	btfsc	status,2,c
  6048  007136  D79D               	goto	i2l208
  6049  007138  0A01               	xorlw	1	; case 3
  6050  00713A  B4D8               	btfsc	status,2,c
  6051  00713C  D79D               	goto	i2l209
  6052  00713E  0A07               	xorlw	7	; case 4
  6053  007140  B4D8               	btfsc	status,2,c
  6054  007142  D79D               	goto	i2l210
  6055  007144  0A01               	xorlw	1	; case 5
  6056  007146  B4D8               	btfsc	status,2,c
  6057  007148  D79D               	goto	i2l211
  6058  00714A  0A0D               	xorlw	13	; case 8
  6059  00714C  B4D8               	btfsc	status,2,c
  6060  00714E  D7A2               	goto	i2l213
  6061  007150  0A01               	xorlw	1	; case 9
  6062  007152  B4D8               	btfsc	status,2,c
  6063  007154  D7A2               	goto	i2l214
  6064  007156  0A03               	xorlw	3	; case 10
  6065  007158  B4D8               	btfsc	status,2,c
  6066  00715A  D7A2               	goto	i2l215
  6067  00715C  0A01               	xorlw	1	; case 11
  6068  00715E  B4D8               	btfsc	status,2,c
  6069  007160  D7A2               	goto	i2l216
  6070  007162  0A07               	xorlw	7	; case 12
  6071  007164  B4D8               	btfsc	status,2,c
  6072  007166  D7A2               	goto	i2l217
  6073  007168  0A01               	xorlw	1	; case 13
  6074  00716A  B4D8               	btfsc	status,2,c
  6075  00716C  D7A2               	goto	i2l218
  6076  00716E  0A03               	xorlw	3	; case 14
  6077  007170  B4D8               	btfsc	status,2,c
  6078  007172  D7A2               	goto	i2l219
  6079  007174  0A01               	xorlw	1	; case 15
  6080  007176  B4D8               	btfsc	status,2,c
  6081  007178  D7A2               	goto	i2l220
  6082  00717A  0A1F               	xorlw	31	; case 16
  6083  00717C  B4D8               	btfsc	status,2,c
  6084  00717E  D7A7               	goto	i2l222
  6085  007180  0A01               	xorlw	1	; case 17
  6086  007182  B4D8               	btfsc	status,2,c
  6087  007184  D7A7               	goto	i2l223
  6088  007186  0A03               	xorlw	3	; case 18
  6089  007188  B4D8               	btfsc	status,2,c
  6090  00718A  D7A7               	goto	i2l224
  6091  00718C  0A04               	xorlw	4	; case 22
  6092  00718E  B4D8               	btfsc	status,2,c
  6093  007190  D7A7               	goto	i2l225
  6094  007192  0A01               	xorlw	1	; case 23
  6095  007194  B4D8               	btfsc	status,2,c
  6096  007196  D7A7               	goto	i2l226
  6097  007198                     i2l228:
  6098  007198  0012               	return	
  6099  00719A                     __end_ofi2_nivel_baixo:
  6100                           	opt stack 0
  6101                           pclatu	equ	0xFFB
  6102                           pclath	equ	0xFFA
  6103                           tblptru	equ	0xFF8
  6104                           tblptrh	equ	0xFF7
  6105                           tblptrl	equ	0xFF6
  6106                           tablat	equ	0xFF5
  6107                           prodh	equ	0xFF4
  6108                           prodl	equ	0xFF3
  6109                           intcon	equ	0xFF2
  6110                           intcon2	equ	0xFF1
  6111                           intcon3	equ	0xFF0
  6112                           postinc0	equ	0xFEE
  6113                           fsr0h	equ	0xFEA
  6114                           fsr0l	equ	0xFE9
  6115                           wreg	equ	0xFE8
  6116                           postdec1	equ	0xFE5
  6117                           fsr1h	equ	0xFE2
  6118                           fsr1l	equ	0xFE1
  6119                           indf2	equ	0xFDF
  6120                           fsr2h	equ	0xFDA
  6121                           fsr2l	equ	0xFD9
  6122                           status	equ	0xFD8
  6123                           
  6124 ;; *************** function i2_nivel_alto *****************
  6125 ;; Defined at:
  6126 ;;		line 169 in file "SanUSB48X.h"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  pino            2    0[COMRAM] unsigned int 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;		None               void
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6140 ;;      Params:         2       0       0       0       0       0       0       0       0
  6141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6142 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6143 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6144 ;;Total ram usage:        4 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_interrupcao
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           	psect	text29
  6154  006E04                     __ptext29:
  6155                           	opt stack 0
  6156  006E04                     i2_nivel_alto:
  6157                           	opt stack 23
  6158                           
  6159                           ;SanUSB48X.h: 172: switch(pino){
  6160                           
  6161                           ;incstack = 0
  6162  006E04  D045               	goto	i2l3489
  6163  006E06                     i2l178:
  6164  006E06  9092               	bcf	3986,0,c	;volatile
  6165  006E08  8080               	bsf	3968,0,c	;volatile
  6166  006E0A  D093               	goto	i2l201
  6167  006E0C                     i2l180:
  6168  006E0C  9292               	bcf	3986,1,c	;volatile
  6169  006E0E  8280               	bsf	3968,1,c	;volatile
  6170  006E10  D090               	goto	i2l201
  6171  006E12                     i2l181:
  6172  006E12  9492               	bcf	3986,2,c	;volatile
  6173  006E14  8480               	bsf	3968,2,c	;volatile
  6174  006E16  D08D               	goto	i2l201
  6175  006E18                     i2l182:
  6176  006E18  9692               	bcf	3986,3,c	;volatile
  6177  006E1A  8680               	bsf	3968,3,c	;volatile
  6178  006E1C  D08A               	goto	i2l201
  6179  006E1E                     i2l183:
  6180  006E1E  9892               	bcf	3986,4,c	;volatile
  6181  006E20  8880               	bsf	3968,4,c	;volatile
  6182  006E22  D087               	goto	i2l201
  6183  006E24                     i2l184:
  6184  006E24  9A92               	bcf	3986,5,c	;volatile
  6185  006E26  8A80               	bsf	3968,5,c	;volatile
  6186  006E28  D084               	goto	i2l201
  6187  006E2A                     i2l3475:
  6188  006E2A  0E00               	movlw	0
  6189  006E2C  6E92               	movwf	3986,c	;volatile
  6190  006E2E  6889               	setf	3977,c	;volatile
  6191  006E30  D080               	goto	i2l201
  6192  006E32                     i2l186:
  6193  006E32  9093               	bcf	3987,0,c	;volatile
  6194  006E34  8081               	bsf	3969,0,c	;volatile
  6195  006E36  D07D               	goto	i2l201
  6196  006E38                     i2l187:
  6197  006E38  9293               	bcf	3987,1,c	;volatile
  6198  006E3A  8281               	bsf	3969,1,c	;volatile
  6199  006E3C  D07A               	goto	i2l201
  6200  006E3E                     i2l188:
  6201  006E3E  9493               	bcf	3987,2,c	;volatile
  6202  006E40  8481               	bsf	3969,2,c	;volatile
  6203  006E42  D077               	goto	i2l201
  6204  006E44                     i2l189:
  6205  006E44  9693               	bcf	3987,3,c	;volatile
  6206  006E46  8681               	bsf	3969,3,c	;volatile
  6207  006E48  D074               	goto	i2l201
  6208  006E4A                     i2l190:
  6209  006E4A  9893               	bcf	3987,4,c	;volatile
  6210  006E4C  8881               	bsf	3969,4,c	;volatile
  6211  006E4E  D071               	goto	i2l201
  6212  006E50                     i2l191:
  6213  006E50  9A93               	bcf	3987,5,c	;volatile
  6214  006E52  8A81               	bsf	3969,5,c	;volatile
  6215  006E54  D06E               	goto	i2l201
  6216  006E56                     i2l192:
  6217  006E56  9C93               	bcf	3987,6,c	;volatile
  6218  006E58  8C81               	bsf	3969,6,c	;volatile
  6219  006E5A  D06B               	goto	i2l201
  6220  006E5C                     i2l193:
  6221  006E5C  9E93               	bcf	3987,7,c	;volatile
  6222  006E5E  8E81               	bsf	3969,7,c	;volatile
  6223  006E60  D068               	goto	i2l201
  6224  006E62                     i2l3479:
  6225  006E62  0E00               	movlw	0
  6226  006E64  6E93               	movwf	3987,c	;volatile
  6227  006E66  688A               	setf	3978,c	;volatile
  6228  006E68  D064               	goto	i2l201
  6229  006E6A                     i2l195:
  6230  006E6A  9094               	bcf	3988,0,c	;volatile
  6231  006E6C  8082               	bsf	3970,0,c	;volatile
  6232  006E6E  D061               	goto	i2l201
  6233  006E70                     i2l196:
  6234  006E70  9294               	bcf	3988,1,c	;volatile
  6235  006E72  8282               	bsf	3970,1,c	;volatile
  6236  006E74  D05E               	goto	i2l201
  6237  006E76                     i2l197:
  6238  006E76  9494               	bcf	3988,2,c	;volatile
  6239  006E78  8482               	bsf	3970,2,c	;volatile
  6240  006E7A  D05B               	goto	i2l201
  6241  006E7C                     i2l198:
  6242  006E7C  9C94               	bcf	3988,6,c	;volatile
  6243  006E7E  8C82               	bsf	3970,6,c	;volatile
  6244  006E80  D058               	goto	i2l201
  6245  006E82                     i2l199:
  6246  006E82  9E94               	bcf	3988,7,c	;volatile
  6247  006E84  8E82               	bsf	3970,7,c	;volatile
  6248  006E86  D055               	goto	i2l201
  6249  006E88                     i2l3483:
  6250  006E88  0E00               	movlw	0
  6251  006E8A  6E94               	movwf	3988,c	;volatile
  6252  006E8C  688B               	setf	3979,c	;volatile
  6253  006E8E  D051               	goto	i2l201
  6254  006E90                     i2l3489:
  6255  006E90  C022  F024         	movff	i2nivel_alto@pino,??i2_nivel_alto
  6256  006E94  C023  F025         	movff	i2nivel_alto@pino+1,??i2_nivel_alto+1
  6257                           
  6258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6259                           ; Switch size 1, requested type "space"
  6260                           ; Number of cases is 2, Range of values is 15 to 124
  6261                           ; switch strategies available:
  6262                           ; Name         Instructions Cycles
  6263                           ; simple_byte            7     4 (average)
  6264                           ;	Chosen strategy is simple_byte
  6265  006E98  5025               	movf	??i2_nivel_alto+1,w,c
  6266  006E9A  0A0F               	xorlw	15	; case 15
  6267  006E9C  B4D8               	btfsc	status,2,c
  6268  006E9E  D004               	goto	i2l4605
  6269  006EA0  0A73               	xorlw	115	; case 124
  6270  006EA2  B4D8               	btfsc	status,2,c
  6271  006EA4  D00C               	goto	i2l4607
  6272  006EA6  D045               	goto	i2l201
  6273  006EA8                     i2l4605:
  6274                           
  6275                           ; Switch size 1, requested type "space"
  6276                           ; Number of cases is 3, Range of values is 128 to 130
  6277                           ; switch strategies available:
  6278                           ; Name         Instructions Cycles
  6279                           ; simple_byte           10     6 (average)
  6280                           ;	Chosen strategy is simple_byte
  6281  006EA8  5024               	movf	??i2_nivel_alto,w,c
  6282  006EAA  0A80               	xorlw	128	; case 128
  6283  006EAC  B4D8               	btfsc	status,2,c
  6284  006EAE  D7BD               	goto	i2l3475
  6285  006EB0  0A01               	xorlw	1	; case 129
  6286  006EB2  B4D8               	btfsc	status,2,c
  6287  006EB4  D7D6               	goto	i2l3479
  6288  006EB6  0A03               	xorlw	3	; case 130
  6289  006EB8  B4D8               	btfsc	status,2,c
  6290  006EBA  D7E6               	goto	i2l3483
  6291  006EBC  D03A               	goto	i2l201
  6292  006EBE                     i2l4607:
  6293                           
  6294                           ; Switch size 1, requested type "space"
  6295                           ; Number of cases is 19, Range of values is 0 to 23
  6296                           ; switch strategies available:
  6297                           ; Name         Instructions Cycles
  6298                           ; simple_byte           58    30 (average)
  6299                           ;	Chosen strategy is simple_byte
  6300  006EBE  5024               	movf	??i2_nivel_alto,w,c
  6301  006EC0  0A00               	xorlw	0	; case 0
  6302  006EC2  B4D8               	btfsc	status,2,c
  6303  006EC4  D7A0               	goto	i2l178
  6304  006EC6  0A01               	xorlw	1	; case 1
  6305  006EC8  B4D8               	btfsc	status,2,c
  6306  006ECA  D7A0               	goto	i2l180
  6307  006ECC  0A03               	xorlw	3	; case 2
  6308  006ECE  B4D8               	btfsc	status,2,c
  6309  006ED0  D7A0               	goto	i2l181
  6310  006ED2  0A01               	xorlw	1	; case 3
  6311  006ED4  B4D8               	btfsc	status,2,c
  6312  006ED6  D7A0               	goto	i2l182
  6313  006ED8  0A07               	xorlw	7	; case 4
  6314  006EDA  B4D8               	btfsc	status,2,c
  6315  006EDC  D7A0               	goto	i2l183
  6316  006EDE  0A01               	xorlw	1	; case 5
  6317  006EE0  B4D8               	btfsc	status,2,c
  6318  006EE2  D7A0               	goto	i2l184
  6319  006EE4  0A0D               	xorlw	13	; case 8
  6320  006EE6  B4D8               	btfsc	status,2,c
  6321  006EE8  D7A4               	goto	i2l186
  6322  006EEA  0A01               	xorlw	1	; case 9
  6323  006EEC  B4D8               	btfsc	status,2,c
  6324  006EEE  D7A4               	goto	i2l187
  6325  006EF0  0A03               	xorlw	3	; case 10
  6326  006EF2  B4D8               	btfsc	status,2,c
  6327  006EF4  D7A4               	goto	i2l188
  6328  006EF6  0A01               	xorlw	1	; case 11
  6329  006EF8  B4D8               	btfsc	status,2,c
  6330  006EFA  D7A4               	goto	i2l189
  6331  006EFC  0A07               	xorlw	7	; case 12
  6332  006EFE  B4D8               	btfsc	status,2,c
  6333  006F00  D7A4               	goto	i2l190
  6334  006F02  0A01               	xorlw	1	; case 13
  6335  006F04  B4D8               	btfsc	status,2,c
  6336  006F06  D7A4               	goto	i2l191
  6337  006F08  0A03               	xorlw	3	; case 14
  6338  006F0A  B4D8               	btfsc	status,2,c
  6339  006F0C  D7A4               	goto	i2l192
  6340  006F0E  0A01               	xorlw	1	; case 15
  6341  006F10  B4D8               	btfsc	status,2,c
  6342  006F12  D7A4               	goto	i2l193
  6343  006F14  0A1F               	xorlw	31	; case 16
  6344  006F16  B4D8               	btfsc	status,2,c
  6345  006F18  D7A8               	goto	i2l195
  6346  006F1A  0A01               	xorlw	1	; case 17
  6347  006F1C  B4D8               	btfsc	status,2,c
  6348  006F1E  D7A8               	goto	i2l196
  6349  006F20  0A03               	xorlw	3	; case 18
  6350  006F22  B4D8               	btfsc	status,2,c
  6351  006F24  D7A8               	goto	i2l197
  6352  006F26  0A04               	xorlw	4	; case 22
  6353  006F28  B4D8               	btfsc	status,2,c
  6354  006F2A  D7A8               	goto	i2l198
  6355  006F2C  0A01               	xorlw	1	; case 23
  6356  006F2E  B4D8               	btfsc	status,2,c
  6357  006F30  D7A8               	goto	i2l199
  6358  006F32                     i2l201:
  6359  006F32  0012               	return	
  6360  006F34                     __end_ofi2_nivel_alto:
  6361                           	opt stack 0
  6362                           pclatu	equ	0xFFB
  6363                           pclath	equ	0xFFA
  6364                           tblptru	equ	0xFF8
  6365                           tblptrh	equ	0xFF7
  6366                           tblptrl	equ	0xFF6
  6367                           tablat	equ	0xFF5
  6368                           prodh	equ	0xFF4
  6369                           prodl	equ	0xFF3
  6370                           intcon	equ	0xFF2
  6371                           intcon2	equ	0xFF1
  6372                           intcon3	equ	0xFF0
  6373                           postinc0	equ	0xFEE
  6374                           fsr0h	equ	0xFEA
  6375                           fsr0l	equ	0xFE9
  6376                           wreg	equ	0xFE8
  6377                           postdec1	equ	0xFE5
  6378                           fsr1h	equ	0xFE2
  6379                           fsr1l	equ	0xFE1
  6380                           indf2	equ	0xFDF
  6381                           fsr2h	equ	0xFDA
  6382                           fsr2l	equ	0xFD9
  6383                           status	equ	0xFD8
  6384                           
  6385 ;; *************** function i2_inverte_saida *****************
  6386 ;; Defined at:
  6387 ;;		line 228 in file "SanUSB48X.h"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  pino            2    0[COMRAM] unsigned int 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;		None               void
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6401 ;;      Params:         2       0       0       0       0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6403 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6404 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6405 ;;Total ram usage:        4 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_interrupcao
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text30
  6415  006BF8                     __ptext30:
  6416                           	opt stack 0
  6417  006BF8                     i2_inverte_saida:
  6418                           	opt stack 23
  6419                           
  6420                           ;SanUSB48X.h: 230: switch(pino){
  6421                           
  6422                           ;incstack = 0
  6423  006BF8  D03C               	goto	i2l3523
  6424  006BFA                     i2l232:
  6425  006BFA  9092               	bcf	3986,0,c	;volatile
  6426  006BFC  7080               	btg	3968,0,c	;volatile
  6427  006BFE  D07E               	goto	i2l253
  6428  006C00                     i2l234:
  6429  006C00  9292               	bcf	3986,1,c	;volatile
  6430  006C02  7280               	btg	3968,1,c	;volatile
  6431  006C04  D07B               	goto	i2l253
  6432  006C06                     i2l235:
  6433  006C06  9492               	bcf	3986,2,c	;volatile
  6434  006C08  7480               	btg	3968,2,c	;volatile
  6435  006C0A  D078               	goto	i2l253
  6436  006C0C                     i2l236:
  6437  006C0C  9692               	bcf	3986,3,c	;volatile
  6438  006C0E  7680               	btg	3968,3,c	;volatile
  6439  006C10  D075               	goto	i2l253
  6440  006C12                     i2l237:
  6441  006C12  9892               	bcf	3986,4,c	;volatile
  6442  006C14  7880               	btg	3968,4,c	;volatile
  6443  006C16  D072               	goto	i2l253
  6444  006C18                     i2l238:
  6445  006C18  9A92               	bcf	3986,5,c	;volatile
  6446  006C1A  7A80               	btg	3968,5,c	;volatile
  6447  006C1C  D06F               	goto	i2l253
  6448  006C1E                     i2l239:
  6449  006C1E  9093               	bcf	3987,0,c	;volatile
  6450  006C20  7081               	btg	3969,0,c	;volatile
  6451  006C22  D06C               	goto	i2l253
  6452  006C24                     i2l240:
  6453  006C24  9293               	bcf	3987,1,c	;volatile
  6454  006C26  7281               	btg	3969,1,c	;volatile
  6455  006C28  D069               	goto	i2l253
  6456  006C2A                     i2l241:
  6457  006C2A  9493               	bcf	3987,2,c	;volatile
  6458  006C2C  7481               	btg	3969,2,c	;volatile
  6459  006C2E  D066               	goto	i2l253
  6460  006C30                     i2l242:
  6461  006C30  9693               	bcf	3987,3,c	;volatile
  6462  006C32  7681               	btg	3969,3,c	;volatile
  6463  006C34  D063               	goto	i2l253
  6464  006C36                     i2l243:
  6465  006C36  9893               	bcf	3987,4,c	;volatile
  6466  006C38  7881               	btg	3969,4,c	;volatile
  6467  006C3A  D060               	goto	i2l253
  6468  006C3C                     i2l244:
  6469  006C3C  9A93               	bcf	3987,5,c	;volatile
  6470  006C3E  7A81               	btg	3969,5,c	;volatile
  6471  006C40  D05D               	goto	i2l253
  6472  006C42                     i2l245:
  6473  006C42  9C93               	bcf	3987,6,c	;volatile
  6474  006C44  7C81               	btg	3969,6,c	;volatile
  6475  006C46  D05A               	goto	i2l253
  6476  006C48                     i2l246:
  6477  006C48  9E93               	bcf	3987,7,c	;volatile
  6478  006C4A  7E81               	btg	3969,7,c	;volatile
  6479  006C4C  D057               	goto	i2l253
  6480  006C4E                     i2l247:
  6481  006C4E  9094               	bcf	3988,0,c	;volatile
  6482  006C50  7082               	btg	3970,0,c	;volatile
  6483  006C52  D054               	goto	i2l253
  6484  006C54                     i2l248:
  6485  006C54  9294               	bcf	3988,1,c	;volatile
  6486  006C56  7282               	btg	3970,1,c	;volatile
  6487  006C58  D051               	goto	i2l253
  6488  006C5A                     i2l249:
  6489  006C5A  9494               	bcf	3988,2,c	;volatile
  6490  006C5C  7482               	btg	3970,2,c	;volatile
  6491  006C5E  D04E               	goto	i2l253
  6492  006C60                     i2l250:
  6493  006C60  9C94               	bcf	3988,6,c	;volatile
  6494  006C62  7C82               	btg	3970,6,c	;volatile
  6495  006C64  D04B               	goto	i2l253
  6496  006C66                     i2l251:
  6497  006C66  9E94               	bcf	3988,7,c	;volatile
  6498  006C68  7E82               	btg	3970,7,c	;volatile
  6499  006C6A  D048               	goto	i2l253
  6500  006C6C                     i2l252:
  6501  006C6C  9E95               	bcf	3989,7,c	;volatile
  6502  006C6E  7E83               	btg	3971,7,c	;volatile
  6503  006C70  D045               	goto	i2l253
  6504  006C72                     i2l3523:
  6505  006C72  C022  F024         	movff	i2inverte_saida@pino,??i2_inverte_saida
  6506  006C76  C023  F025         	movff	i2inverte_saida@pino+1,??i2_inverte_saida+1
  6507                           
  6508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6509                           ; Switch size 1, requested type "space"
  6510                           ; Number of cases is 1, Range of values is 124 to 124
  6511                           ; switch strategies available:
  6512                           ; Name         Instructions Cycles
  6513                           ; simple_byte            4     3 (average)
  6514                           ;	Chosen strategy is simple_byte
  6515  006C7A  5025               	movf	??i2_inverte_saida+1,w,c
  6516  006C7C  0A7C               	xorlw	124	; case 124
  6517  006C7E  A4D8               	btfss	status,2,c
  6518  006C80  D03D               	goto	i2l253
  6519                           
  6520                           ; Switch size 1, requested type "space"
  6521                           ; Number of cases is 20, Range of values is 0 to 31
  6522                           ; switch strategies available:
  6523                           ; Name         Instructions Cycles
  6524                           ; simple_byte           61    31 (average)
  6525                           ;	Chosen strategy is simple_byte
  6526  006C82  5024               	movf	??i2_inverte_saida,w,c
  6527  006C84  0A00               	xorlw	0	; case 0
  6528  006C86  B4D8               	btfsc	status,2,c
  6529  006C88  D7B8               	goto	i2l232
  6530  006C8A  0A01               	xorlw	1	; case 1
  6531  006C8C  B4D8               	btfsc	status,2,c
  6532  006C8E  D7B8               	goto	i2l234
  6533  006C90  0A03               	xorlw	3	; case 2
  6534  006C92  B4D8               	btfsc	status,2,c
  6535  006C94  D7B8               	goto	i2l235
  6536  006C96  0A01               	xorlw	1	; case 3
  6537  006C98  B4D8               	btfsc	status,2,c
  6538  006C9A  D7B8               	goto	i2l236
  6539  006C9C  0A07               	xorlw	7	; case 4
  6540  006C9E  B4D8               	btfsc	status,2,c
  6541  006CA0  D7B8               	goto	i2l237
  6542  006CA2  0A01               	xorlw	1	; case 5
  6543  006CA4  B4D8               	btfsc	status,2,c
  6544  006CA6  D7B8               	goto	i2l238
  6545  006CA8  0A0D               	xorlw	13	; case 8
  6546  006CAA  B4D8               	btfsc	status,2,c
  6547  006CAC  D7B8               	goto	i2l239
  6548  006CAE  0A01               	xorlw	1	; case 9
  6549  006CB0  B4D8               	btfsc	status,2,c
  6550  006CB2  D7B8               	goto	i2l240
  6551  006CB4  0A03               	xorlw	3	; case 10
  6552  006CB6  B4D8               	btfsc	status,2,c
  6553  006CB8  D7B8               	goto	i2l241
  6554  006CBA  0A01               	xorlw	1	; case 11
  6555  006CBC  B4D8               	btfsc	status,2,c
  6556  006CBE  D7B8               	goto	i2l242
  6557  006CC0  0A07               	xorlw	7	; case 12
  6558  006CC2  B4D8               	btfsc	status,2,c
  6559  006CC4  D7B8               	goto	i2l243
  6560  006CC6  0A01               	xorlw	1	; case 13
  6561  006CC8  B4D8               	btfsc	status,2,c
  6562  006CCA  D7B8               	goto	i2l244
  6563  006CCC  0A03               	xorlw	3	; case 14
  6564  006CCE  B4D8               	btfsc	status,2,c
  6565  006CD0  D7B8               	goto	i2l245
  6566  006CD2  0A01               	xorlw	1	; case 15
  6567  006CD4  B4D8               	btfsc	status,2,c
  6568  006CD6  D7B8               	goto	i2l246
  6569  006CD8  0A1F               	xorlw	31	; case 16
  6570  006CDA  B4D8               	btfsc	status,2,c
  6571  006CDC  D7B8               	goto	i2l247
  6572  006CDE  0A01               	xorlw	1	; case 17
  6573  006CE0  B4D8               	btfsc	status,2,c
  6574  006CE2  D7B8               	goto	i2l248
  6575  006CE4  0A03               	xorlw	3	; case 18
  6576  006CE6  B4D8               	btfsc	status,2,c
  6577  006CE8  D7B8               	goto	i2l249
  6578  006CEA  0A04               	xorlw	4	; case 22
  6579  006CEC  B4D8               	btfsc	status,2,c
  6580  006CEE  D7B8               	goto	i2l250
  6581  006CF0  0A01               	xorlw	1	; case 23
  6582  006CF2  B4D8               	btfsc	status,2,c
  6583  006CF4  D7B8               	goto	i2l251
  6584  006CF6  0A08               	xorlw	8	; case 31
  6585  006CF8  B4D8               	btfsc	status,2,c
  6586  006CFA  D7B8               	goto	i2l252
  6587  006CFC                     i2l253:
  6588  006CFC  0012               	return	
  6589  006CFE                     __end_ofi2_inverte_saida:
  6590                           	opt stack 0
  6591                           pclatu	equ	0xFFB
  6592                           pclath	equ	0xFFA
  6593                           tblptru	equ	0xFF8
  6594                           tblptrh	equ	0xFF7
  6595                           tblptrl	equ	0xFF6
  6596                           tablat	equ	0xFF5
  6597                           prodh	equ	0xFF4
  6598                           prodl	equ	0xFF3
  6599                           intcon	equ	0xFF2
  6600                           intcon2	equ	0xFF1
  6601                           intcon3	equ	0xFF0
  6602                           postinc0	equ	0xFEE
  6603                           fsr0h	equ	0xFEA
  6604                           fsr0l	equ	0xFE9
  6605                           wreg	equ	0xFE8
  6606                           postdec1	equ	0xFE5
  6607                           fsr1h	equ	0xFE2
  6608                           fsr1l	equ	0xFE1
  6609                           indf2	equ	0xFDF
  6610                           fsr2h	equ	0xFDA
  6611                           fsr2l	equ	0xFD9
  6612                           status	equ	0xFD8
  6613                           
  6614 ;; *************** function _ReadUSART *****************
  6615 ;; Defined at:
  6616 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\plib\USART\uread.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;		None
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  data            1    0[COMRAM] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      unsigned char 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6630 ;;      Params:         0       0       0       0       0       0       0       0       0
  6631 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6633 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6634 ;;Total ram usage:        1 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_interrupcao
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text31
  6644  0064C6                     __ptext31:
  6645                           	opt stack 0
  6646  0064C6                     _ReadUSART:
  6647                           	opt stack 23
  6648                           
  6649                           ;incstack = 0
  6650  0064C6  0EF2               	movlw	242
  6651  0064C8  1615               	andwf	_USART_Status,f,c
  6652  0064CA  ACAB               	btfss	4011,6,c	;volatile
  6653  0064CC  D003               	goto	i2l628
  6654  0064CE  9015               	bcf	_USART_Status,0,c
  6655  0064D0  B0AB               	btfsc	4011,0,c	;volatile
  6656  0064D2  8015               	bsf	_USART_Status,0,c
  6657  0064D4                     i2l628:
  6658  0064D4  B4AB               	btfsc	4011,2,c	;volatile
  6659  0064D6  8415               	bsf	_USART_Status,2,c
  6660  0064D8  B2AB               	btfsc	4011,1,c	;volatile
  6661  0064DA  8615               	bsf	_USART_Status,3,c
  6662  0064DC  CFAE F022          	movff	4014,ReadUSART@data	;volatile
  6663  0064E0  5022               	movf	ReadUSART@data,w,c
  6664  0064E2  0012               	return	
  6665  0064E4                     __end_of_ReadUSART:
  6666                           	opt stack 0
  6667                           pclatu	equ	0xFFB
  6668                           pclath	equ	0xFFA
  6669                           tblptru	equ	0xFF8
  6670                           tblptrh	equ	0xFF7
  6671                           tblptrl	equ	0xFF6
  6672                           tablat	equ	0xFF5
  6673                           prodh	equ	0xFF4
  6674                           prodl	equ	0xFF3
  6675                           intcon	equ	0xFF2
  6676                           intcon2	equ	0xFF1
  6677                           intcon3	equ	0xFF0
  6678                           postinc0	equ	0xFEE
  6679                           fsr0h	equ	0xFEA
  6680                           fsr0l	equ	0xFE9
  6681                           wreg	equ	0xFE8
  6682                           postdec1	equ	0xFE5
  6683                           fsr1h	equ	0xFE2
  6684                           fsr1l	equ	0xFE1
  6685                           indf2	equ	0xFDF
  6686                           fsr2h	equ	0xFDA
  6687                           fsr2l	equ	0xFD9
  6688                           status	equ	0xFD8
  6689                           pclatu	equ	0xFFB
  6690                           pclath	equ	0xFFA
  6691                           tblptru	equ	0xFF8
  6692                           tblptrh	equ	0xFF7
  6693                           tblptrl	equ	0xFF6
  6694                           tablat	equ	0xFF5
  6695                           prodh	equ	0xFF4
  6696                           prodl	equ	0xFF3
  6697                           intcon	equ	0xFF2
  6698                           intcon2	equ	0xFF1
  6699                           intcon3	equ	0xFF0
  6700                           postinc0	equ	0xFEE
  6701                           fsr0h	equ	0xFEA
  6702                           fsr0l	equ	0xFE9
  6703                           wreg	equ	0xFE8
  6704                           postdec1	equ	0xFE5
  6705                           fsr1h	equ	0xFE2
  6706                           fsr1l	equ	0xFE1
  6707                           indf2	equ	0xFDF
  6708                           fsr2h	equ	0xFDA
  6709                           fsr2l	equ	0xFD9
  6710                           status	equ	0xFD8
  6711                           
  6712                           	psect	rparam
  6713  0000                     pclatu	equ	0xFFB
  6714                           pclath	equ	0xFFA
  6715                           tblptru	equ	0xFF8
  6716                           tblptrh	equ	0xFF7
  6717                           tblptrl	equ	0xFF6
  6718                           tablat	equ	0xFF5
  6719                           prodh	equ	0xFF4
  6720                           prodl	equ	0xFF3
  6721                           intcon	equ	0xFF2
  6722                           intcon2	equ	0xFF1
  6723                           intcon3	equ	0xFF0
  6724                           postinc0	equ	0xFEE
  6725                           fsr0h	equ	0xFEA
  6726                           fsr0l	equ	0xFE9
  6727                           wreg	equ	0xFE8
  6728                           postdec1	equ	0xFE5
  6729                           fsr1h	equ	0xFE2
  6730                           fsr1l	equ	0xFE1
  6731                           indf2	equ	0xFDF
  6732                           fsr2h	equ	0xFDA
  6733                           fsr2l	equ	0xFD9
  6734                           status	equ	0xFD8


Data Sizes:
    Strings     184
    Constant    117
    Data        10
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      75
    BANK0           160     22      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendr@st	PTR unsigned char  size(2) Largest target is 20
		 -> icm(CODE[15]), icg(CODE[9]), icr(CODE[9]), icn(CODE[17]), 
		 -> icb(CODE[9]), icp(CODE[3]), icms(CODE[19]), icgs(CODE[20]), 
		 -> icrs(CODE[11]), atc(CODE[5]), 

    sendrw@st	PTR unsigned char  size(2) Largest target is 111
		 -> STR_5(CODE[16]), STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[111]), 


Critical Paths under _main in COMRAM

    _taxa_serial->___lldiv
    _sendrw->_swputc
    _sendnum->___lwdiv
    ___lwmod->___lwdiv
    _clock_int_48MHz->___lwdiv
    ___lwdiv->___awmod
    _bt_ini->_tempo_ms
    _configBR6->_tempo_ms
    _resetBT->_tempo_ms
    _ATC->_tempo_ms
    _tempo_ms->___wmul
    _sendr->_sputc

Critical Paths under _interrupcao in COMRAM

    _interrupcao->i2_inverte_saida
    _interrupcao->i2_nivel_alto
    _interrupcao->i2_nivel_baixo

Critical Paths under _main in BANK0

    _main->_taxa_serial
    _taxa_serial->___lldiv
    _sendnum->___lwmod
    ___lwmod->___lwdiv
    _clock_int_48MHz->___lwdiv

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   41530
                                             21 BANK0      1     1      0
                             _bt_ini
                    _clock_int_48MHz
               _habilita_interrupcao
                      _inverte_saida
                            _sendnum
                             _sendrw
                        _taxa_serial
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _taxa_serial                                         16    12      4     568
                                              5 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             20 COMRAM     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _sendrw                                               4     2      2     386
                                             21 COMRAM     4     2      2
                             _swputc
 ---------------------------------------------------------------------------------
 (1) _sendnum                                              2     0      2    2622
                                              9 BANK0      2     0      2
                            ___lwdiv
                            ___lwmod
                             _swputc
 ---------------------------------------------------------------------------------
 (2) _swputc                                               1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1002
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _habilita_interrupcao                                 4     2      2      86
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _clock_int_48MHz                                      0     0      0    1457
                            ___awmod
                            ___lwdiv
                          _le_eeprom
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1011
                                             27 COMRAM     5     1      4
                                              0 BANK0      3     3      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bt_ini                                               1     1      0   30390
                                             30 COMRAM     1     1      0
                          _configBR6
                     _escreve_eeprom
                      _inverte_saida
                          _le_eeprom
                              _sendr
                              _sputc
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (2) _le_eeprom                                            1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _escreve_eeprom                                       2     1      1     364
                                             20 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _configBR6                                            0     0      0   22615
                      _inverte_saida
                      _modoAttention
                         _modoNormal
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (3) _modoNormal                                           0     0      0    7605
                        _nivel_baixo
                            _resetBT
 ---------------------------------------------------------------------------------
 (4) _resetBT                                              0     0      0    7367
                      _inverte_saida
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (4) _nivel_baixo                                          4     2      2     238
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _modoAttention                                        0     0      0    7643
                                _ATC
                         _nivel_alto
 ---------------------------------------------------------------------------------
 (4) _nivel_alto                                           4     2      2     276
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _ATC                                                  0     0      0    7367
                      _inverte_saida
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _tempo_ms                                             4     2      2    4067
                                             26 COMRAM     4     2      2
                        _Delay1KTCYx
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     799
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sendr                                                4     2      2    1346
                                             23 COMRAM     4     2      2
                              _sputc
 ---------------------------------------------------------------------------------
 (2) _sputc                                                3     3      0      22
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _inverte_saida                                        4     2      2    1954
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupcao                                         16    16      0     375
                                              4 COMRAM    16    16      0
                          _ReadUSART
                    i2_inverte_saida
                       i2_nivel_alto
                      i2_nivel_baixo
 ---------------------------------------------------------------------------------
 (8) i2_nivel_baixo                                        4     2      2     126
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_nivel_alto                                         4     2      2     152
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_inverte_saida                                      4     2      2      74
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bt_ini
     _configBR6
       _inverte_saida
       _modoAttention
         _ATC
           _inverte_saida
           _sendr
             _sputc
           _tempo_ms
             _Delay1KTCYx
             ___wmul
         _nivel_alto
       _modoNormal
         _nivel_baixo
         _resetBT
           _inverte_saida
           _sendr
             _sputc
           _tempo_ms
             _Delay1KTCYx
             ___wmul
       _sendr
         _sputc
       _tempo_ms
         _Delay1KTCYx
         ___wmul
     _escreve_eeprom
     _inverte_saida
     _le_eeprom
     _sendr
       _sputc
     _sputc
     _tempo_ms
       _Delay1KTCYx
       ___wmul
   _clock_int_48MHz
     ___awmod
     ___lwdiv
       ___awmod (ARG)
     _le_eeprom
   _habilita_interrupcao
   _inverte_saida
   _sendnum
     ___lwdiv
       ___awmod (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___awmod (ARG)
     _swputc
   _sendrw
     _swputc
   _taxa_serial
     ___lldiv
   _tempo_ms
     _Delay1KTCYx
     ___wmul

 _interrupcao (ROOT)
   _ReadUSART
   i2_inverte_saida
   i2_nivel_alto
   i2_nivel_baixo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      5A       5       56.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      4B       1       78.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      20        0.0%
DATA                 0      0      A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sat Mar 07 16:07:15 2015

                            _G 0045                              _R 0042                              _c 0001  
                            _e 0048                              _i 000F                              _k 0019  
                            _m 001A                              _n 001B                              _w 0013  
                            _y 0020                              _z 0021                             _Fe 0044  
                           _c1 0016                             _po 0049                             _rr 004A  
                           _ru 004B            ___wmul@multiplicand 0038           __end_ofi2_nivel_alto 6F34  
            ??_clock_int_48MHz 0042                            l201 7062                            l210 71B4  
                          l211 71BA                            l220 71F4                            l140 6AB0  
                          l213 71CA                            l205 719C                            l222 7204  
                          l214 71D0                            l142 6AB6                            l150 6B4C  
                          l223 720A                            l215 71D6                            l207 71A2  
                          l143 6ABC                            l240 6D2A                            l232 6D00  
                          l224 7210                            l216 71DC                            l208 71A8  
                          l144 6AC2                            l241 6D30                            l225 7216  
                          l217 71E2                            l209 71AE                            l145 6AC8  
                          l250 6D66                            l242 6D36                            l234 6D06  
                          l226 721C                            l218 71E8                            l146 6ACE  
                          l251 6D6C                            l243 6D3C                            l235 6D0C  
                          l219 71EE                            l147 6AD4                            l252 6D72  
                          l244 6D42                            l236 6D12                            l180 6F3C  
                          l500 6628                            l228 72CE                            l148 6ADA  
                          l245 6D48                            l237 6D18                            l253 6E02  
                          l181 6F42                            l149 6ADE                            l246 6D4E  
                          l238 6D1E                            l190 6F7A                            l182 6F48  
                          l430 7562                            l247 6D54                            l239 6D24  
                          l191 6F80                            l183 6F4E                            l248 6D5A  
                          l192 6F86                            l184 6F54                            l249 6D60  
                          l193 6F8C          __end_of_inverte_saida 6E04                            l186 6F62  
                          l178 6F36                            l506 6870                            l195 6F9A  
                          l187 6F68                            l196 6FA0                            l188 6F6E  
                          l197 6FA6                            l189 6F74                            l286 667A  
                          l198 6FAC                            l199 6FB2                            l367 6500  
                          l391 6494                            l376 66BE                            l537 7ECE  
                          l397 650A                            l843 64A4                            _ATC 656C  
                          _PR2 000FCB                            _REG 0046                            _icb 7F23  
                          _atc 7F3E                            _icg 7F2C                            _icm 7F09  
                          _icn 7EF8                            _icp 7F43                            _icr 7F35  
                          _ind 0018                   ___awmod@sign 003C        __end_ofi2_inverte_saida 6CFE  
                          prod 000FF3                            wreg 000FE8          __end_ofi2_nivel_baixo 719A  
                         ?_ATC 0022                           l1145 68DA                           l3011 699A  
                         l1155 6964                           l1076 6BE6                           l3021 69D0  
                         l3023 69D4                           l3031 69F2                           l3015 69B6  
                         l3103 6AE4                           l3035 6A00                           l3027 69E8  
                         l3019 69C8                           l3141 676A                           l3217 7998  
                         l3145 6790                           l3331 7C16                           l3323 7BE2  
                         l3333 7C22                           l3317 7BBC                           l4221 747A  
                         l3415 7DE4                           l3423 7E18                           l3327 7BFC  
                         l3409 7DBE                           l4225 74C6                           l4145 6B82  
                         l3443 7E74                           l3419 7DFE                           l3267 7AAA  
                         l4171 68A6                           l4147 6B92                           l4251 7310  
                         l3453 7EB4                           l3365 7CCA                           l4229 7514  
                         l4157 6BD4                           l4149 6B96                           l3391 7D5E  
                         l3383 7D2A                           l4167 6896                           l4191 691C  
                         l3449 7E9A                           l4169 68A2                           l2851 6738  
                         l2843 6692                           l3387 7D44                           l3379 7D10  
                         l4179 68CC                           l4195 6950                           l4187 6902  
                         l2829 6D78                           l2933 6614                           l4189 6914  
                         l4293 73F2                           l2847 6712                           l2839 6688  
                         l2863 6FB8                           l2855 6F5A                           l2951 6856  
                         l2881 71C0                           l4297 73F8                           l2859 6F92  
                         l2883 71FA                           l2947 683C                           l2869 6FC0  
                         l2885 7222                           l4591 7244                           l4583 6B08  
                         l4593 725A                           l2889 722C                           l4585 6B24  
                         l4595 6FD8                           l4587 6B2E                           l4597 6FEE  
                         l4589 6B3E                           STR_1 7F46                           STR_2 7FC8  
                         STR_3 7FDB                           STR_4 7FB5                           STR_5 7FEE  
                         u1220 6518                           u1234 6526                           u1235 6522  
                         u1228 651A                           _LATA 000F89                           _LATB 000F8A  
                         _LATC 000F8B                           u2367 64A6                           _flag 0007  
                         _icgs 7ED1                           _icms 7EE5                           _icrs 7F18  
                         _main 72D0                           _temp 001D                           _time 0011  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9        __size_of_escreve_eeprom 0022                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 1018  
                        ??_ATC 0040              inverte_saida@pino 0036                    _Delay1KTCYx 64A0  
                        ?_main 0022                          _ADRES 000FC3                          _EEADR 000FA9  
              __end_of___awmod 6A0A                __end_of___lldiv 6BF8                          _T0CON 000FD5  
                        _T2CON 000FCA                __end_of___lwdiv 68E4                          i2l201 6F32  
              __end_of___lwmod 696E                          i2l210 707E                          i2l211 7084  
                        i2l220 70BE                          i2l213 7094                          i2l205 7066  
                        i2l222 70CE                          i2l214 709A                          i2l223 70D4  
                        i2l215 70A0                          i2l207 706C                          i2l240 6C24  
                        i2l232 6BFA                          i2l224 70DA                          i2l216 70A6  
                        i2l208 7072                          i2l241 6C2A                          i2l225 70E0  
                        i2l217 70AC                          i2l209 7078                          i2l250 6C60  
                        i2l242 6C30                          i2l234 6C00                          i2l226 70E6  
                        i2l218 70B2                          i2l251 6C66                          i2l243 6C36  
                        i2l235 6C06                          i2l219 70B8                          i2l252 6C6C  
                        i2l244 6C3C                          i2l236 6C0C                          i2l180 6E0C  
                        i2l228 7198                          i2l245 6C42                          i2l237 6C12  
                        i2l253 6CFC                          i2l181 6E12                          i2l246 6C48  
                        i2l238 6C18                          i2l190 6E4A                          i2l182 6E18  
                        i2l247 6C4E                          i2l239 6C1E                          i2l191 6E50  
                        i2l183 6E1E                          i2l248 6C54                          i2l192 6E56  
                        i2l184 6E24                          i2l249 6C5A                          i2l193 6E5C  
                        i2l186 6E32                          i2l178 6E06                          i2l195 6E6A  
                        i2l187 6E38                          i2l196 6E70                          i2l188 6E3E  
                        i2l197 6E76                          i2l189 6E44                          i2l198 6E7C  
                        i2l199 6E82                          i2l608 7828                          i2l628 64D4  
                        i2l596 76BA                          _RCREG 000FAE                          _RCSTA 000FAB  
                        _REGad 0047                          _TMR0H 000FD7                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR3H 000FB3                          _TMR1L 000FCE  
                        _TMR3L 000FB2                          _SPBRG 000FAF                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TXREG 000FAD  
                        _TXSTA 000FAC                          _flagb 0009                          _flagc 000B  
                        _envia 0005                          _sendr 6708                          _valor 001E  
                        _sputc 6506                __end_of_resetBT 65E8                __end_of_sendnum 758C  
                        tablat 000FF5                          status 000FD8  __size_of_habilita_interrupcao 00A4  
              __initialization 662A                   ?_interrupcao 0022                   __end_of_icgs 7EE5  
                 __end_of_icms 7EF8                   __end_of_icrs 7F23                   __end_of_main 742C  
                       ??_main 00B9                  __activetblptr 000002               ?i2_inverte_saida 0022  
                 ?_nivel_baixo 0036                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0                         _ADRESH 000FC4                         _EEDATA 000FA8  
                       _CCPR1L 000FBE                         _CCPR2L 000FBB                         _EECON1 000FA6  
                       _EECON2 000FA7                         ?_sendr 0039                         ?_sputc 0022  
                       i2l3501 708A                         i2l3503 70C4                         i2l3505 70EC  
                       i2l3523 6C72                         i2l3509 70F6                         i2l3701 76D8  
                       i2l4601 710E                         i2l3705 7706                         i2l3483 6E88  
                       i2l3475 6E2A                         i2l4603 7124                         i2l4605 6EA8  
                       i2l3725 775C                         i2l3717 7746                         i2l4607 6EBE  
                       i2l3479 6E62                         i2l3663 75D8                         i2l3489 6E90  
                       i2l3753 77E0                         i2l3745 77C2                         i2l3737 77A0  
                       i2l3729 7774                         i2l3681 7668                         i2l3673 762C  
                       i2l3763 7804                         i2l3675 7638                         i2l3667 75FC  
                       i2l3683 766E                         i2l3669 7608                         i2l3679 765C  
           __size_of_ReadUSART 001E                         _SPBRGH 000FB0                   ?_taxa_serial 00A9  
        __size_ofi2_nivel_alto 0130                         ___wmul 6532                      ??___awmod 003A  
                       _chegou 0003                      ??___lldiv 003E                         _flagNM 00A0  
                       _bt_ini 7862                      ??___lwdiv 0041                         _comand 0060  
                    ??___lwmod 00AB                         clear_0 6630                         clear_1 663C  
              ___awmod@divisor 0038                         _sendrw 6760                ___awmod@counter 003B  
                       _vorbei 00A2                         _swputc 6490                   __pdataCOMRAM 0042  
             __end_of_tempo_ms 66B4                   __mediumconst 7ED0                      ??_resetBT 0040  
                       tblptrh 000FF7                         tblptrl 000FF6                      ??_sendnum 0042  
                       tblptru 000FF8                         sputc@c 0038                     __accesstop 0060  
      __end_of__initialization 6662                   i2_nivel_alto 6E04                 _escreve_eeprom 64E4  
              _clock_int_48MHz 66B4                 __pcstackCOMRAM 0022                  __end_of_sendr 6760  
                __end_of_sputc 6532              __end_of_ReadUSART 64E4       habilita_interrupcao@tipo 0036  
       __size_of_modoAttention 0042             __size_of_configBR6 005A                  ReadUSART@data 0022  
           __size_of_le_eeprom 0014                        ??_sendr 003B                        ??_sputc 0036  
       __end_of_escreve_eeprom 6506                     __pbssBANK0 0060                        ?___wmul 0036  
                      ?_bt_ini 0022           __size_of_interrupcao 685A                        _CCP1CON 000FBD  
                      _CCP2CON 000FBA                   ?_Delay1KTCYx 0022                        _BAUDCON 000FB8  
                      ?_sendrw 0037                        ?_swputc 0022           __size_of_nivel_baixo 0136  
              ?_escreve_eeprom 0036        __end_of_clock_int_48MHz 6708                  _modoAttention 65E8  
       __size_of_inverte_saida 0106                        __Hparam 0000                        __Lparam 0000  
            __end_of_configBR6 6812                     _incrementa 009C                      ?_tempo_ms 003C  
       __size_ofi2_nivel_baixo 0136              __end_of_le_eeprom 64C6           __size_of_taxa_serial 00A0  
                      ___awmod 696E                        ___lldiv 6B4E                __size_of___wmul 003A  
                      ___lwdiv 6872                        ___lwmod 68E4                __size_of_bt_ini 066E  
                      __pcinit 662A                        __ramtop 0800                __size_of_sendrw 0058  
                      __ptext0 72D0                        __ptext1 6A0A                        __ptext2 6B4E  
                      __ptext3 6760                        __ptext4 742C                        __ptext5 6490  
                      __ptext6 68E4                        __ptext7 6AAA                        __ptext8 66B4  
                      __ptext9 6872                        _comando 007E                      _T0CONbits 000FD5  
                 __size_of_ATC 003E                      _T1CONbits 000FCD                __size_of_swputc 0010  
                    _T2CONbits 000FCA   __end_of_habilita_interrupcao 6B4E                      _T3CONbits 000FB1  
             ___awmod@dividend 0036                     _modoNormal 6812                        _resetBT 65AA  
                      _sendnum 742C                 __pintcode_body 758C           end_of_initialization 6662  
                   _nivel_alto 6F34                  __Lmediumconst 7ED0                        int_func 758C  
               ?_modoAttention 0022                ___lldiv@divisor 003A                        sendr@st 0039  
              ___lldiv@counter 00A8                     ??_tempo_ms 003E                      _RCSTAbits 000FAB  
                      postdec1 000FE5                        postinc0 000FEE              i2nivel_baixo@pino 0022  
                    _PORTAbits 000F80                      _PORTBbits 000F81                      _PORTCbits 000F82  
                    _PORTDbits 000F83                      _PORTEbits 000F84                        swputc@c 0036  
                _inverte_saida 6CFE                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISCbits 000F94                      _TRISDbits 000F95                  i2_nivel_baixo 7064  
             ?_clock_int_48MHz 0022       __size_ofi2_inverte_saida 0106                      _TXSTAbits 000FAC  
               __end_of___wmul 656C                    _BAUDCONbits 000FB8                  __pidataCOMRAM 6486  
               __end_of_bt_ini 7ED0                 ?_inverte_saida 0036           __size_of_Delay1KTCYx 0012  
               __end_of_sendrw 67B8                    ?_modoNormal 0022                 __end_of_swputc 64A0  
          start_initialization 662A                      _ReadUSART 64C6                    __end_of_ATC 65AA  
               ?i2_nivel_baixo 0022                    __end_of_icb 7F2C                    __end_of_atc 7F43  
                  __end_of_icg 7F35                    __end_of_icm 7F18                    __end_of_icn 7F09  
                  __end_of_icp 7F46                    __end_of_icr 7F3E                ??_modoAttention 0040  
                  ?_nivel_alto 0036           _habilita_interrupcao 6AAA                       ??___wmul 003A  
                     ??_bt_ini 0040                       ??_sendrw 0039                       ??_swputc 0036  
                  __pbssCOMRAM 0001                     ?_ReadUSART 0022               ??_escreve_eeprom 0037  
                __pcstackBANK0 00A4            __end_of__stringdata 7FFE                Delay1KTCYx@unit 0036  
        ?_habilita_interrupcao 0036               ___lwdiv@dividend 003D                  ??_interrupcao 0026  
          __size_of_modoNormal 0060              ??i2_inverte_saida 0024                  sendnum@sannum 00AD  
                    __pintcode 1008                  __pmediumconst 7ED0                       ?___awmod 0036  
                     ?___lldiv 0036                       ?___lwdiv 003D                       ?___lwmod 00A7  
            __size_of_tempo_ms 0048                      _configBR6 67B8                      _flagstart 000D  
              ??_inverte_saida 0038                      _le_eeprom 64B2            __size_of_nivel_alto 0130  
              ??i2_nivel_baixo 0024                  ??_nivel_baixo 0038                       ?_resetBT 0022  
                     ?_sendnum 00AD               ___lwdiv@quotient 00A5                 __size_of_sendr 0058  
               __size_of_sputc 002C                 ___wmul@product 003A                       _IPR1bits 000F9F  
                     _PIE1bits 000F9D                       _PIE2bits 000FA0                  ??_taxa_serial 00AD  
                     _PIR1bits 000F9E                       _RCONbits 000FD0                     ?_configBR6 0022  
           escreve_eeprom@dado 0036                     ?_le_eeprom 0022            __end_of_interrupcao 7862  
                   _ADCON0bits 000FC2                    __stringdata 7F46                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0036               i2nivel_alto@pino 0022                    ??_ReadUSART 0022  
                  _INTCON2bits 000FF1                    _INTCON3bits 000FF0                      copy_data0 6656  
          i2inverte_saida@pino 0022            __end_of_nivel_baixo 72D0                  ?i2_nivel_alto 0022  
       ??_habilita_interrupcao 0038                     _EECON1bits 000FA6                       __Hrparam 0000  
              nivel_baixo@pino 0036                       __Lrparam 0000               __size_of___awmod 009C  
          __end_of_taxa_serial 6AAA               __size_of___lldiv 00AA               __size_of___lwdiv 0072  
             __size_of___lwmod 008A                   ??_modoNormal 0040                ___lwdiv@divisor 003F  
              ___lwdiv@counter 00A4               __size_of_resetBT 003E                       __ptext10 696E  
                     __ptext11 7862                       __ptext20 656C                       __ptext12 64B2  
                     __ptext21 666C                       __ptext13 64E4                       __ptext30 6BF8  
                     __ptext22 6532                       __ptext14 67B8                       __ptext31 64C6  
                     __ptext23 64A0                       __ptext15 6812                       __ptext24 6708  
                     __ptext16 65AA                       __ptext25 6506                       __ptext17 719A  
                     __ptext26 6CFE                       __ptext18 65E8                       __ptext19 6F34  
                     __ptext28 7064                       __ptext29 6E04               __size_of_sendnum 0160  
                     _endereco 0017                 ??i2_nivel_alto 0024                   ??_nivel_alto 0038  
              taxa_serial@taxa 00A9                  __size_of_main 015C                       _valorbcd 001F  
     __size_of_clock_int_48MHz 0054                    _interrupcao 1008                      tempo_ms@i 003C  
                     _tempo_ms 666C                      tempo_ms@k 003E             __end_of_modoNormal 6872  
            le_eeprom@endereco 0036                       _numquant 001C                  ??_Delay1KTCYx 0036  
                  ??_configBR6 0040                    ??_le_eeprom 0036             __end_of_nivel_alto 7064  
                   _INTCONbits 000FF2                    _nivel_baixo 719A         taxa_serial@baud_sanusb 00B5  
              i2_inverte_saida 6BF8                       intlevel2 0000               ___lwmod@dividend 00A7  
               nivel_alto@pino 0036               ___lldiv@dividend 0036          __end_of_modoAttention 662A  
                     sendrw@st 0037                    _taxa_serial 6A0A         escreve_eeprom@endereco 0037  
             ___lldiv@quotient 00A4                ___lwmod@divisor 00A9            __end_of_Delay1KTCYx 64B2  
              ___lwmod@counter 00AC                     _WDTCONbits 000FD1                   _USART_Status 0015  
